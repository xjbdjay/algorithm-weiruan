
a.out:     file format elf32-i386


Disassembly of section .interp:

08048154 <.interp>:
 8048154:	2f                   	das    
 8048155:	6c                   	insb   (%dx),%es:(%edi)
 8048156:	69 62 2f 6c 64 2d 6c 	imul   $0x6c2d646c,0x2f(%edx),%esp
 804815d:	69 6e 75 78 2e 73 6f 	imul   $0x6f732e78,0x75(%esi),%ebp
 8048164:	2e 32 00             	xor    %cs:(%eax),%al

Disassembly of section .note.ABI-tag:

08048168 <.note.ABI-tag>:
 8048168:	04 00                	add    $0x0,%al
 804816a:	00 00                	add    %al,(%eax)
 804816c:	10 00                	adc    %al,(%eax)
 804816e:	00 00                	add    %al,(%eax)
 8048170:	01 00                	add    %eax,(%eax)
 8048172:	00 00                	add    %al,(%eax)
 8048174:	47                   	inc    %edi
 8048175:	4e                   	dec    %esi
 8048176:	55                   	push   %ebp
 8048177:	00 00                	add    %al,(%eax)
 8048179:	00 00                	add    %al,(%eax)
 804817b:	00 02                	add    %al,(%edx)
 804817d:	00 00                	add    %al,(%eax)
 804817f:	00 06                	add    %al,(%esi)
 8048181:	00 00                	add    %al,(%eax)
 8048183:	00 18                	add    %bl,(%eax)
 8048185:	00 00                	add    %al,(%eax)
	...

Disassembly of section .note.gnu.build-id:

08048188 <.note.gnu.build-id>:
 8048188:	04 00                	add    $0x0,%al
 804818a:	00 00                	add    %al,(%eax)
 804818c:	14 00                	adc    $0x0,%al
 804818e:	00 00                	add    %al,(%eax)
 8048190:	03 00                	add    (%eax),%eax
 8048192:	00 00                	add    %al,(%eax)
 8048194:	47                   	inc    %edi
 8048195:	4e                   	dec    %esi
 8048196:	55                   	push   %ebp
 8048197:	00 0e                	add    %cl,(%esi)
 8048199:	dc 73 c9             	fdivl  -0x37(%ebx)
 804819c:	44                   	inc    %esp
 804819d:	5f                   	pop    %edi
 804819e:	5a                   	pop    %edx
 804819f:	a7                   	cmpsl  %es:(%edi),%ds:(%esi)
 80481a0:	05 06 cf 1c 95       	add    $0x951ccf06,%eax
 80481a5:	c8 f0 c9 22          	enter  $0xc9f0,$0x22
 80481a9:	c9                   	leave  
 80481aa:	be                   	.byte 0xbe
 80481ab:	50                   	push   %eax

Disassembly of section .gnu.hash:

080481ac <.gnu.hash>:
 80481ac:	02 00                	add    (%eax),%al
 80481ae:	00 00                	add    %al,(%eax)
 80481b0:	04 00                	add    $0x0,%al
 80481b2:	00 00                	add    %al,(%eax)
 80481b4:	01 00                	add    %eax,(%eax)
 80481b6:	00 00                	add    %al,(%eax)
 80481b8:	05 00 00 00 00       	add    $0x0,%eax
 80481bd:	20 00                	and    %al,(%eax)
 80481bf:	20 00                	and    %al,(%eax)
 80481c1:	00 00                	add    %al,(%eax)
 80481c3:	00 04 00             	add    %al,(%eax,%eax,1)
 80481c6:	00 00                	add    %al,(%eax)
 80481c8:	ad                   	lods   %ds:(%esi),%eax
 80481c9:	4b                   	dec    %ebx
 80481ca:	e3 c0                	jecxz  804818c <_init-0x128>

Disassembly of section .dynsym:

080481cc <.dynsym>:
	...
 80481dc:	1a 00                	sbb    (%eax),%al
	...
 80481e6:	00 00                	add    %al,(%eax)
 80481e8:	12 00                	adc    (%eax),%al
 80481ea:	00 00                	add    %al,(%eax)
 80481ec:	33 00                	xor    (%eax),%eax
	...
 80481f6:	00 00                	add    %al,(%eax)
 80481f8:	20 00                	and    %al,(%eax)
 80481fa:	00 00                	add    %al,(%eax)
 80481fc:	21 00                	and    %eax,(%eax)
	...
 8048206:	00 00                	add    %al,(%eax)
 8048208:	12 00                	adc    (%eax),%al
 804820a:	00 00                	add    %al,(%eax)
 804820c:	0b 00                	or     (%eax),%eax
 804820e:	00 00                	add    %al,(%eax)
 8048210:	3c 86                	cmp    $0x86,%al
 8048212:	04 08                	add    $0x8,%al
 8048214:	04 00                	add    $0x0,%al
 8048216:	00 00                	add    %al,(%eax)
 8048218:	11 00                	adc    %eax,(%eax)
 804821a:	0f                   	.byte 0xf
	...

Disassembly of section .dynstr:

0804821c <.dynstr>:
 804821c:	00 6c 69 62          	add    %ch,0x62(%ecx,%ebp,2)
 8048220:	63 2e                	arpl   %bp,(%esi)
 8048222:	73 6f                	jae    8048293 <_init-0x21>
 8048224:	2e 36 00 5f 49       	cs add %bl,%cs:%ss:0x49(%edi)
 8048229:	4f                   	dec    %edi
 804822a:	5f                   	pop    %edi
 804822b:	73 74                	jae    80482a1 <_init-0x13>
 804822d:	64 69 6e 5f 75 73 65 	imul   $0x64657375,%fs:0x5f(%esi),%ebp
 8048234:	64 
 8048235:	00 70 72             	add    %dh,0x72(%eax)
 8048238:	69 6e 74 66 00 5f 5f 	imul   $0x5f5f0066,0x74(%esi),%ebp
 804823f:	6c                   	insb   (%dx),%es:(%edi)
 8048240:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%edx),%esp
 8048247:	72 74                	jb     80482bd <_init+0x9>
 8048249:	5f                   	pop    %edi
 804824a:	6d                   	insl   (%dx),%es:(%edi)
 804824b:	61                   	popa   
 804824c:	69 6e 00 5f 5f 67 6d 	imul   $0x6d675f5f,0x0(%esi),%ebp
 8048253:	6f                   	outsl  %ds:(%esi),(%dx)
 8048254:	6e                   	outsb  %ds:(%esi),(%dx)
 8048255:	5f                   	pop    %edi
 8048256:	73 74                	jae    80482cc <_init+0x18>
 8048258:	61                   	popa   
 8048259:	72 74                	jb     80482cf <_init+0x1b>
 804825b:	5f                   	pop    %edi
 804825c:	5f                   	pop    %edi
 804825d:	00 47 4c             	add    %al,0x4c(%edi)
 8048260:	49                   	dec    %ecx
 8048261:	42                   	inc    %edx
 8048262:	43                   	inc    %ebx
 8048263:	5f                   	pop    %edi
 8048264:	32 2e                	xor    (%esi),%ch
 8048266:	30 00                	xor    %al,(%eax)

Disassembly of section .gnu.version:

08048268 <.gnu.version>:
 8048268:	00 00                	add    %al,(%eax)
 804826a:	02 00                	add    (%eax),%al
 804826c:	00 00                	add    %al,(%eax)
 804826e:	02 00                	add    (%eax),%al
 8048270:	01 00                	add    %eax,(%eax)

Disassembly of section .gnu.version_r:

08048274 <.gnu.version_r>:
 8048274:	01 00                	add    %eax,(%eax)
 8048276:	01 00                	add    %eax,(%eax)
 8048278:	01 00                	add    %eax,(%eax)
 804827a:	00 00                	add    %al,(%eax)
 804827c:	10 00                	adc    %al,(%eax)
 804827e:	00 00                	add    %al,(%eax)
 8048280:	00 00                	add    %al,(%eax)
 8048282:	00 00                	add    %al,(%eax)
 8048284:	10 69 69             	adc    %ch,0x69(%ecx)
 8048287:	0d 00 00 02 00       	or     $0x20000,%eax
 804828c:	42                   	inc    %edx
 804828d:	00 00                	add    %al,(%eax)
 804828f:	00 00                	add    %al,(%eax)
 8048291:	00 00                	add    %al,(%eax)
	...

Disassembly of section .rel.dyn:

08048294 <.rel.dyn>:
 8048294:	fc                   	cld    
 8048295:	9f                   	lahf   
 8048296:	04 08                	add    $0x8,%al
 8048298:	06                   	push   %es
 8048299:	02 00                	add    (%eax),%al
	...

Disassembly of section .rel.plt:

0804829c <.rel.plt>:
 804829c:	0c a0                	or     $0xa0,%al
 804829e:	04 08                	add    $0x8,%al
 80482a0:	07                   	pop    %es
 80482a1:	01 00                	add    %eax,(%eax)
 80482a3:	00 10                	add    %dl,(%eax)
 80482a5:	a0 04 08 07 02       	mov    0x2070804,%al
 80482aa:	00 00                	add    %al,(%eax)
 80482ac:	14 a0                	adc    $0xa0,%al
 80482ae:	04 08                	add    $0x8,%al
 80482b0:	07                   	pop    %es
 80482b1:	03 00                	add    (%eax),%eax
	...

Disassembly of section .init:

080482b4 <_init>:
 80482b4:	53                   	push   %ebx
 80482b5:	83 ec 08             	sub    $0x8,%esp
 80482b8:	e8 93 00 00 00       	call   8048350 <__x86.get_pc_thunk.bx>
 80482bd:	81 c3 43 1d 00 00    	add    $0x1d43,%ebx
 80482c3:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 80482c9:	85 c0                	test   %eax,%eax
 80482cb:	74 05                	je     80482d2 <_init+0x1e>
 80482cd:	e8 2e 00 00 00       	call   8048300 <__gmon_start__@plt>
 80482d2:	83 c4 08             	add    $0x8,%esp
 80482d5:	5b                   	pop    %ebx
 80482d6:	c3                   	ret    

Disassembly of section .plt:

080482e0 <printf@plt-0x10>:
 80482e0:	ff 35 04 a0 04 08    	pushl  0x804a004
 80482e6:	ff 25 08 a0 04 08    	jmp    *0x804a008
 80482ec:	00 00                	add    %al,(%eax)
	...

080482f0 <printf@plt>:
 80482f0:	ff 25 0c a0 04 08    	jmp    *0x804a00c
 80482f6:	68 00 00 00 00       	push   $0x0
 80482fb:	e9 e0 ff ff ff       	jmp    80482e0 <_init+0x2c>

08048300 <__gmon_start__@plt>:
 8048300:	ff 25 10 a0 04 08    	jmp    *0x804a010
 8048306:	68 08 00 00 00       	push   $0x8
 804830b:	e9 d0 ff ff ff       	jmp    80482e0 <_init+0x2c>

08048310 <__libc_start_main@plt>:
 8048310:	ff 25 14 a0 04 08    	jmp    *0x804a014
 8048316:	68 10 00 00 00       	push   $0x10
 804831b:	e9 c0 ff ff ff       	jmp    80482e0 <_init+0x2c>

Disassembly of section .text:

08048320 <_start>:
 8048320:	31 ed                	xor    %ebp,%ebp
 8048322:	5e                   	pop    %esi
 8048323:	89 e1                	mov    %esp,%ecx
 8048325:	83 e4 f0             	and    $0xfffffff0,%esp
 8048328:	50                   	push   %eax
 8048329:	54                   	push   %esp
 804832a:	52                   	push   %edx
 804832b:	68 20 86 04 08       	push   $0x8048620
 8048330:	68 b0 85 04 08       	push   $0x80485b0
 8048335:	51                   	push   %ecx
 8048336:	56                   	push   %esi
 8048337:	68 2c 85 04 08       	push   $0x804852c
 804833c:	e8 cf ff ff ff       	call   8048310 <__libc_start_main@plt>
 8048341:	f4                   	hlt    
 8048342:	66 90                	xchg   %ax,%ax
 8048344:	66 90                	xchg   %ax,%ax
 8048346:	66 90                	xchg   %ax,%ax
 8048348:	66 90                	xchg   %ax,%ax
 804834a:	66 90                	xchg   %ax,%ax
 804834c:	66 90                	xchg   %ax,%ax
 804834e:	66 90                	xchg   %ax,%ax

08048350 <__x86.get_pc_thunk.bx>:
 8048350:	8b 1c 24             	mov    (%esp),%ebx
 8048353:	c3                   	ret    
 8048354:	66 90                	xchg   %ax,%ax
 8048356:	66 90                	xchg   %ax,%ax
 8048358:	66 90                	xchg   %ax,%ax
 804835a:	66 90                	xchg   %ax,%ax
 804835c:	66 90                	xchg   %ax,%ax
 804835e:	66 90                	xchg   %ax,%ax

08048360 <deregister_tm_clones>:
 8048360:	b8 2f a0 04 08       	mov    $0x804a02f,%eax
 8048365:	2d 2c a0 04 08       	sub    $0x804a02c,%eax
 804836a:	83 f8 06             	cmp    $0x6,%eax
 804836d:	77 02                	ja     8048371 <deregister_tm_clones+0x11>
 804836f:	f3 c3                	repz ret 
 8048371:	b8 00 00 00 00       	mov    $0x0,%eax
 8048376:	85 c0                	test   %eax,%eax
 8048378:	74 f5                	je     804836f <deregister_tm_clones+0xf>
 804837a:	55                   	push   %ebp
 804837b:	89 e5                	mov    %esp,%ebp
 804837d:	83 ec 18             	sub    $0x18,%esp
 8048380:	c7 04 24 2c a0 04 08 	movl   $0x804a02c,(%esp)
 8048387:	ff d0                	call   *%eax
 8048389:	c9                   	leave  
 804838a:	c3                   	ret    
 804838b:	90                   	nop
 804838c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

08048390 <register_tm_clones>:
 8048390:	b8 2c a0 04 08       	mov    $0x804a02c,%eax
 8048395:	2d 2c a0 04 08       	sub    $0x804a02c,%eax
 804839a:	c1 f8 02             	sar    $0x2,%eax
 804839d:	89 c2                	mov    %eax,%edx
 804839f:	c1 ea 1f             	shr    $0x1f,%edx
 80483a2:	01 d0                	add    %edx,%eax
 80483a4:	d1 f8                	sar    %eax
 80483a6:	75 02                	jne    80483aa <register_tm_clones+0x1a>
 80483a8:	f3 c3                	repz ret 
 80483aa:	ba 00 00 00 00       	mov    $0x0,%edx
 80483af:	85 d2                	test   %edx,%edx
 80483b1:	74 f5                	je     80483a8 <register_tm_clones+0x18>
 80483b3:	55                   	push   %ebp
 80483b4:	89 e5                	mov    %esp,%ebp
 80483b6:	83 ec 18             	sub    $0x18,%esp
 80483b9:	89 44 24 04          	mov    %eax,0x4(%esp)
 80483bd:	c7 04 24 2c a0 04 08 	movl   $0x804a02c,(%esp)
 80483c4:	ff d2                	call   *%edx
 80483c6:	c9                   	leave  
 80483c7:	c3                   	ret    
 80483c8:	90                   	nop
 80483c9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

080483d0 <__do_global_dtors_aux>:
 80483d0:	80 3d 2c a0 04 08 00 	cmpb   $0x0,0x804a02c
 80483d7:	75 13                	jne    80483ec <__do_global_dtors_aux+0x1c>
 80483d9:	55                   	push   %ebp
 80483da:	89 e5                	mov    %esp,%ebp
 80483dc:	83 ec 08             	sub    $0x8,%esp
 80483df:	e8 7c ff ff ff       	call   8048360 <deregister_tm_clones>
 80483e4:	c6 05 2c a0 04 08 01 	movb   $0x1,0x804a02c
 80483eb:	c9                   	leave  
 80483ec:	f3 c3                	repz ret 
 80483ee:	66 90                	xchg   %ax,%ax

080483f0 <frame_dummy>:
 80483f0:	a1 10 9f 04 08       	mov    0x8049f10,%eax
 80483f5:	85 c0                	test   %eax,%eax
 80483f7:	74 1e                	je     8048417 <frame_dummy+0x27>
 80483f9:	b8 00 00 00 00       	mov    $0x0,%eax
 80483fe:	85 c0                	test   %eax,%eax
 8048400:	74 15                	je     8048417 <frame_dummy+0x27>
 8048402:	55                   	push   %ebp
 8048403:	89 e5                	mov    %esp,%ebp
 8048405:	83 ec 18             	sub    $0x18,%esp
 8048408:	c7 04 24 10 9f 04 08 	movl   $0x8049f10,(%esp)
 804840f:	ff d0                	call   *%eax
 8048411:	c9                   	leave  
 8048412:	e9 79 ff ff ff       	jmp    8048390 <register_tm_clones>
 8048417:	e9 74 ff ff ff       	jmp    8048390 <register_tm_clones>

0804841c <testt>:
 804841c:	55                   	push   %ebp
 804841d:	89 e5                	mov    %esp,%ebp
 804841f:	83 ec 28             	sub    $0x28,%esp
 8048422:	c6 45 f6 1e          	movb   $0x1e,-0xa(%ebp)
 8048426:	c6 45 f7 1f          	movb   $0x1f,-0x9(%ebp)
 804842a:	0f b6 05 2c 85 04 08 	movzbl 0x804852c,%eax
 8048431:	0f be c0             	movsbl %al,%eax
 8048434:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048438:	c7 04 24 40 86 04 08 	movl   $0x8048640,(%esp)
 804843f:	e8 ac fe ff ff       	call   80482f0 <printf@plt>
 8048444:	0f b6 05 24 a0 04 08 	movzbl 0x804a024,%eax
 804844b:	0f be c0             	movsbl %al,%eax
 804844e:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048452:	c7 04 24 4c 86 04 08 	movl   $0x804864c,(%esp)
 8048459:	e8 92 fe ff ff       	call   80482f0 <printf@plt>
 804845e:	0f b6 05 24 a0 04 08 	movzbl 0x804a024,%eax
 8048465:	0f be c0             	movsbl %al,%eax
 8048468:	83 c0 01             	add    $0x1,%eax
 804846b:	89 44 24 04          	mov    %eax,0x4(%esp)
 804846f:	c7 04 24 4c 86 04 08 	movl   $0x804864c,(%esp)
 8048476:	e8 75 fe ff ff       	call   80482f0 <printf@plt>
 804847b:	0f b6 05 24 a0 04 08 	movzbl 0x804a024,%eax
 8048482:	0f be c0             	movsbl %al,%eax
 8048485:	83 c0 02             	add    $0x2,%eax
 8048488:	89 44 24 04          	mov    %eax,0x4(%esp)
 804848c:	c7 04 24 4c 86 04 08 	movl   $0x804864c,(%esp)
 8048493:	e8 58 fe ff ff       	call   80482f0 <printf@plt>
 8048498:	0f b6 05 24 a0 04 08 	movzbl 0x804a024,%eax
 804849f:	0f be c0             	movsbl %al,%eax
 80484a2:	83 c0 03             	add    $0x3,%eax
 80484a5:	89 44 24 04          	mov    %eax,0x4(%esp)
 80484a9:	c7 04 24 4c 86 04 08 	movl   $0x804864c,(%esp)
 80484b0:	e8 3b fe ff ff       	call   80482f0 <printf@plt>
 80484b5:	0f b6 05 24 a0 04 08 	movzbl 0x804a024,%eax
 80484bc:	0f be c0             	movsbl %al,%eax
 80484bf:	83 c0 04             	add    $0x4,%eax
 80484c2:	89 44 24 04          	mov    %eax,0x4(%esp)
 80484c6:	c7 04 24 4c 86 04 08 	movl   $0x804864c,(%esp)
 80484cd:	e8 1e fe ff ff       	call   80482f0 <printf@plt>
 80484d2:	0f b6 05 24 a0 04 08 	movzbl 0x804a024,%eax
 80484d9:	0f be c0             	movsbl %al,%eax
 80484dc:	89 44 24 04          	mov    %eax,0x4(%esp)
 80484e0:	c7 04 24 55 86 04 08 	movl   $0x8048655,(%esp)
 80484e7:	e8 04 fe ff ff       	call   80482f0 <printf@plt>
 80484ec:	c7 44 24 04 24 a0 04 	movl   $0x804a024,0x4(%esp)
 80484f3:	08 
 80484f4:	c7 04 24 65 86 04 08 	movl   $0x8048665,(%esp)
 80484fb:	e8 f0 fd ff ff       	call   80482f0 <printf@plt>
 8048500:	a1 20 a0 04 08       	mov    0x804a020,%eax
 8048505:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048509:	c7 04 24 73 86 04 08 	movl   $0x8048673,(%esp)
 8048510:	e8 db fd ff ff       	call   80482f0 <printf@plt>
 8048515:	c7 44 24 04 20 a0 04 	movl   $0x804a020,0x4(%esp)
 804851c:	08 
 804851d:	c7 04 24 83 86 04 08 	movl   $0x8048683,(%esp)
 8048524:	e8 c7 fd ff ff       	call   80482f0 <printf@plt>
 8048529:	c9                   	leave  
 804852a:	c3                   	ret    
 804852b:	90                   	nop

0804852c <main>:
 804852c:	55                   	push   %ebp
 804852d:	89 e5                	mov    %esp,%ebp
 804852f:	83 e4 f0             	and    $0xfffffff0,%esp
 8048532:	83 ec 10             	sub    $0x10,%esp
 8048535:	e8 e2 fe ff ff       	call   804841c <testt>
 804853a:	0f b6 05 26 a0 04 08 	movzbl 0x804a026,%eax
 8048541:	0f be c0             	movsbl %al,%eax
 8048544:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048548:	c7 04 24 91 86 04 08 	movl   $0x8048691,(%esp)
 804854f:	e8 9c fd ff ff       	call   80482f0 <printf@plt>
 8048554:	c7 44 24 04 24 a0 04 	movl   $0x804a024,0x4(%esp)
 804855b:	08 
 804855c:	c7 04 24 9a 86 04 08 	movl   $0x804869a,(%esp)
 8048563:	e8 88 fd ff ff       	call   80482f0 <printf@plt>
 8048568:	c7 44 24 04 24 a0 04 	movl   $0x804a024,0x4(%esp)
 804856f:	08 
 8048570:	c7 04 24 a9 86 04 08 	movl   $0x80486a9,(%esp)
 8048577:	e8 74 fd ff ff       	call   80482f0 <printf@plt>
 804857c:	a1 20 a0 04 08       	mov    0x804a020,%eax
 8048581:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048585:	c7 04 24 b7 86 04 08 	movl   $0x80486b7,(%esp)
 804858c:	e8 5f fd ff ff       	call   80482f0 <printf@plt>
 8048591:	c7 44 24 04 20 a0 04 	movl   $0x804a020,0x4(%esp)
 8048598:	08 
 8048599:	c7 04 24 c6 86 04 08 	movl   $0x80486c6,(%esp)
 80485a0:	e8 4b fd ff ff       	call   80482f0 <printf@plt>
 80485a5:	c9                   	leave  
 80485a6:	c3                   	ret    
 80485a7:	66 90                	xchg   %ax,%ax
 80485a9:	66 90                	xchg   %ax,%ax
 80485ab:	66 90                	xchg   %ax,%ax
 80485ad:	66 90                	xchg   %ax,%ax
 80485af:	90                   	nop

080485b0 <__libc_csu_init>:
 80485b0:	55                   	push   %ebp
 80485b1:	57                   	push   %edi
 80485b2:	31 ff                	xor    %edi,%edi
 80485b4:	56                   	push   %esi
 80485b5:	53                   	push   %ebx
 80485b6:	e8 95 fd ff ff       	call   8048350 <__x86.get_pc_thunk.bx>
 80485bb:	81 c3 45 1a 00 00    	add    $0x1a45,%ebx
 80485c1:	83 ec 1c             	sub    $0x1c,%esp
 80485c4:	8b 6c 24 30          	mov    0x30(%esp),%ebp
 80485c8:	8d b3 0c ff ff ff    	lea    -0xf4(%ebx),%esi
 80485ce:	e8 e1 fc ff ff       	call   80482b4 <_init>
 80485d3:	8d 83 08 ff ff ff    	lea    -0xf8(%ebx),%eax
 80485d9:	29 c6                	sub    %eax,%esi
 80485db:	c1 fe 02             	sar    $0x2,%esi
 80485de:	85 f6                	test   %esi,%esi
 80485e0:	74 27                	je     8048609 <__libc_csu_init+0x59>
 80485e2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 80485e8:	8b 44 24 38          	mov    0x38(%esp),%eax
 80485ec:	89 2c 24             	mov    %ebp,(%esp)
 80485ef:	89 44 24 08          	mov    %eax,0x8(%esp)
 80485f3:	8b 44 24 34          	mov    0x34(%esp),%eax
 80485f7:	89 44 24 04          	mov    %eax,0x4(%esp)
 80485fb:	ff 94 bb 08 ff ff ff 	call   *-0xf8(%ebx,%edi,4)
 8048602:	83 c7 01             	add    $0x1,%edi
 8048605:	39 f7                	cmp    %esi,%edi
 8048607:	75 df                	jne    80485e8 <__libc_csu_init+0x38>
 8048609:	83 c4 1c             	add    $0x1c,%esp
 804860c:	5b                   	pop    %ebx
 804860d:	5e                   	pop    %esi
 804860e:	5f                   	pop    %edi
 804860f:	5d                   	pop    %ebp
 8048610:	c3                   	ret    
 8048611:	eb 0d                	jmp    8048620 <__libc_csu_fini>
 8048613:	90                   	nop
 8048614:	90                   	nop
 8048615:	90                   	nop
 8048616:	90                   	nop
 8048617:	90                   	nop
 8048618:	90                   	nop
 8048619:	90                   	nop
 804861a:	90                   	nop
 804861b:	90                   	nop
 804861c:	90                   	nop
 804861d:	90                   	nop
 804861e:	90                   	nop
 804861f:	90                   	nop

08048620 <__libc_csu_fini>:
 8048620:	f3 c3                	repz ret 
 8048622:	66 90                	xchg   %ax,%ax

Disassembly of section .fini:

08048624 <_fini>:
 8048624:	53                   	push   %ebx
 8048625:	83 ec 08             	sub    $0x8,%esp
 8048628:	e8 23 fd ff ff       	call   8048350 <__x86.get_pc_thunk.bx>
 804862d:	81 c3 d3 19 00 00    	add    $0x19d3,%ebx
 8048633:	83 c4 08             	add    $0x8,%esp
 8048636:	5b                   	pop    %ebx
 8048637:	c3                   	ret    

Disassembly of section .rodata:

08048638 <_fp_hw>:
 8048638:	03 00                	add    (%eax),%eax
	...

0804863c <_IO_stdin_used>:
 804863c:	01 00                	add    %eax,(%eax)
 804863e:	02 00                	add    (%eax),%al
 8048640:	6d                   	insl   (%dx),%es:(%edi)
 8048641:	61                   	popa   
 8048642:	69 6e 20 69 73 20 25 	imul   $0x25207369,0x20(%esi),%ebp
 8048649:	78 0a                	js     8048655 <_IO_stdin_used+0x19>
 804864b:	00 61 20             	add    %ah,0x20(%ecx)
 804864e:	69 73 20 25 63 0a 00 	imul   $0xa6325,0x20(%ebx),%esi
 8048655:	61                   	popa   
 8048656:	20 76 61             	and    %dh,0x61(%esi)
 8048659:	6c                   	insb   (%dx),%es:(%edi)
 804865a:	75 64                	jne    80486c0 <_IO_stdin_used+0x84>
 804865c:	65 20 69 73          	and    %ch,%gs:0x73(%ecx)
 8048660:	20 25 78 0a 00 61    	and    %ah,0x61000a78
 8048666:	20 61 64             	and    %ah,0x64(%ecx)
 8048669:	64                   	fs
 804866a:	72 20                	jb     804868c <_IO_stdin_used+0x50>
 804866c:	69 73 20 25 78 0a 00 	imul   $0xa7825,0x20(%ebx),%esi
 8048673:	62 20                	bound  %esp,(%eax)
 8048675:	76 61                	jbe    80486d8 <_IO_stdin_used+0x9c>
 8048677:	6c                   	insb   (%dx),%es:(%edi)
 8048678:	75 64                	jne    80486de <_IO_stdin_used+0xa2>
 804867a:	65 20 69 73          	and    %ch,%gs:0x73(%ecx)
 804867e:	20 25 78 0a 00 62    	and    %ah,0x62000a78
 8048684:	20 61 64             	and    %ah,0x64(%ecx)
 8048687:	64                   	fs
 8048688:	72 20                	jb     80486aa <_IO_stdin_used+0x6e>
 804868a:	69 73 20 25 78 0a 00 	imul   $0xa7825,0x20(%ebx),%esi
 8048691:	61                   	popa   
 8048692:	20 69 73             	and    %ch,0x73(%ecx)
 8048695:	20 25 63 0a 00 61    	and    %ah,0x61000a63
 804869b:	20 76 61             	and    %dh,0x61(%esi)
 804869e:	6c                   	insb   (%dx),%es:(%edi)
 804869f:	75 65                	jne    8048706 <_IO_stdin_used+0xca>
 80486a1:	20 69 73             	and    %ch,0x73(%ecx)
 80486a4:	20 25 78 0a 00 61    	and    %ah,0x61000a78
 80486aa:	20 61 64             	and    %ah,0x64(%ecx)
 80486ad:	64                   	fs
 80486ae:	72 20                	jb     80486d0 <_IO_stdin_used+0x94>
 80486b0:	69 73 20 25 78 0a 00 	imul   $0xa7825,0x20(%ebx),%esi
 80486b7:	62 20                	bound  %esp,(%eax)
 80486b9:	76 61                	jbe    804871c <_IO_stdin_used+0xe0>
 80486bb:	6c                   	insb   (%dx),%es:(%edi)
 80486bc:	75 65                	jne    8048723 <_IO_stdin_used+0xe7>
 80486be:	20 69 73             	and    %ch,0x73(%ecx)
 80486c1:	20 25 78 0a 00 62    	and    %ah,0x62000a78
 80486c7:	20 61 64             	and    %ah,0x64(%ecx)
 80486ca:	64                   	fs
 80486cb:	72 20                	jb     80486ed <_IO_stdin_used+0xb1>
 80486cd:	69 73 20 25 78 0a 00 	imul   $0xa7825,0x20(%ebx),%esi

Disassembly of section .eh_frame_hdr:

080486d4 <.eh_frame_hdr>:
 80486d4:	01 1b                	add    %ebx,(%ebx)
 80486d6:	03 3b                	add    (%ebx),%edi
 80486d8:	30 00                	xor    %al,(%eax)
 80486da:	00 00                	add    %al,(%eax)
 80486dc:	05 00 00 00 0c       	add    $0xc000000,%eax
 80486e1:	fc                   	cld    
 80486e2:	ff                   	(bad)  
 80486e3:	ff 4c 00 00          	decl   0x0(%eax,%eax,1)
 80486e7:	00 48 fd             	add    %cl,-0x3(%eax)
 80486ea:	ff                   	(bad)  
 80486eb:	ff 70 00             	pushl  0x0(%eax)
 80486ee:	00 00                	add    %al,(%eax)
 80486f0:	58                   	pop    %eax
 80486f1:	fe                   	(bad)  
 80486f2:	ff                   	(bad)  
 80486f3:	ff 90 00 00 00 dc    	call   *-0x24000000(%eax)
 80486f9:	fe                   	(bad)  
 80486fa:	ff                   	(bad)  
 80486fb:	ff b0 00 00 00 4c    	pushl  0x4c000000(%eax)
 8048701:	ff                   	(bad)  
 8048702:	ff                   	(bad)  
 8048703:	ff ec                	ljmp   *<internal disassembler error>
 8048705:	00 00                	add    %al,(%eax)
	...

Disassembly of section .eh_frame:

08048708 <__FRAME_END__-0xcc>:
 8048708:	14 00                	adc    $0x0,%al
 804870a:	00 00                	add    %al,(%eax)
 804870c:	00 00                	add    %al,(%eax)
 804870e:	00 00                	add    %al,(%eax)
 8048710:	01 7a 52             	add    %edi,0x52(%edx)
 8048713:	00 01                	add    %al,(%ecx)
 8048715:	7c 08                	jl     804871f <_IO_stdin_used+0xe3>
 8048717:	01 1b                	add    %ebx,(%ebx)
 8048719:	0c 04                	or     $0x4,%al
 804871b:	04 88                	add    $0x88,%al
 804871d:	01 00                	add    %eax,(%eax)
 804871f:	00 20                	add    %ah,(%eax)
 8048721:	00 00                	add    %al,(%eax)
 8048723:	00 1c 00             	add    %bl,(%eax,%eax,1)
 8048726:	00 00                	add    %al,(%eax)
 8048728:	b8 fb ff ff 40       	mov    $0x40fffffb,%eax
 804872d:	00 00                	add    %al,(%eax)
 804872f:	00 00                	add    %al,(%eax)
 8048731:	0e                   	push   %cs
 8048732:	08 46 0e             	or     %al,0xe(%esi)
 8048735:	0c 4a                	or     $0x4a,%al
 8048737:	0f 0b                	ud2    
 8048739:	74 04                	je     804873f <_IO_stdin_used+0x103>
 804873b:	78 00                	js     804873d <_IO_stdin_used+0x101>
 804873d:	3f                   	aas    
 804873e:	1a 3b                	sbb    (%ebx),%bh
 8048740:	2a 32                	sub    (%edx),%dh
 8048742:	24 22                	and    $0x22,%al
 8048744:	1c 00                	sbb    $0x0,%al
 8048746:	00 00                	add    %al,(%eax)
 8048748:	40                   	inc    %eax
 8048749:	00 00                	add    %al,(%eax)
 804874b:	00 d0                	add    %dl,%al
 804874d:	fc                   	cld    
 804874e:	ff                   	(bad)  
 804874f:	ff 0f                	decl   (%edi)
 8048751:	01 00                	add    %eax,(%eax)
 8048753:	00 00                	add    %al,(%eax)
 8048755:	41                   	inc    %ecx
 8048756:	0e                   	push   %cs
 8048757:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 804875d:	03 0b                	add    (%ebx),%ecx
 804875f:	01 c5                	add    %eax,%ebp
 8048761:	0c 04                	or     $0x4,%al
 8048763:	04 1c                	add    $0x1c,%al
 8048765:	00 00                	add    %al,(%eax)
 8048767:	00 60 00             	add    %ah,0x0(%eax)
 804876a:	00 00                	add    %al,(%eax)
 804876c:	c0 fd ff             	sar    $0xff,%ch
 804876f:	ff                   	(bad)  
 8048770:	7b 00                	jnp    8048772 <_IO_stdin_used+0x136>
 8048772:	00 00                	add    %al,(%eax)
 8048774:	00 41 0e             	add    %al,0xe(%ecx)
 8048777:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 804877d:	02 77 c5             	add    -0x3b(%edi),%dh
 8048780:	0c 04                	or     $0x4,%al
 8048782:	04 00                	add    $0x0,%al
 8048784:	38 00                	cmp    %al,(%eax)
 8048786:	00 00                	add    %al,(%eax)
 8048788:	80 00 00             	addb   $0x0,(%eax)
 804878b:	00 24 fe             	add    %ah,(%esi,%edi,8)
 804878e:	ff                   	(bad)  
 804878f:	ff 61 00             	jmp    *0x0(%ecx)
 8048792:	00 00                	add    %al,(%eax)
 8048794:	00 41 0e             	add    %al,0xe(%ecx)
 8048797:	08 85 02 41 0e 0c    	or     %al,0xc0e4102(%ebp)
 804879d:	87 03                	xchg   %eax,(%ebx)
 804879f:	43                   	inc    %ebx
 80487a0:	0e                   	push   %cs
 80487a1:	10 86 04 41 0e 14    	adc    %al,0x140e4104(%esi)
 80487a7:	83 05 4e 0e 30 02 48 	addl   $0x48,0x2300e4e
 80487ae:	0e                   	push   %cs
 80487af:	14 41                	adc    $0x41,%al
 80487b1:	c3                   	ret    
 80487b2:	0e                   	push   %cs
 80487b3:	10 41 c6             	adc    %al,-0x3a(%ecx)
 80487b6:	0e                   	push   %cs
 80487b7:	0c 41                	or     $0x41,%al
 80487b9:	c7                   	(bad)  
 80487ba:	0e                   	push   %cs
 80487bb:	08 41 c5             	or     %al,-0x3b(%ecx)
 80487be:	0e                   	push   %cs
 80487bf:	04 10                	add    $0x10,%al
 80487c1:	00 00                	add    %al,(%eax)
 80487c3:	00 bc 00 00 00 58 fe 	add    %bh,-0x1a80000(%eax,%eax,1)
 80487ca:	ff                   	(bad)  
 80487cb:	ff 02                	incl   (%edx)
 80487cd:	00 00                	add    %al,(%eax)
 80487cf:	00 00                	add    %al,(%eax)
 80487d1:	00 00                	add    %al,(%eax)
	...

080487d4 <__FRAME_END__>:
 80487d4:	00 00                	add    %al,(%eax)
	...

Disassembly of section .init_array:

08049f08 <__frame_dummy_init_array_entry>:
 8049f08:	f0                   	lock
 8049f09:	83                   	.byte 0x83
 8049f0a:	04 08                	add    $0x8,%al

Disassembly of section .fini_array:

08049f0c <__do_global_dtors_aux_fini_array_entry>:
 8049f0c:	d0                   	.byte 0xd0
 8049f0d:	83                   	.byte 0x83
 8049f0e:	04 08                	add    $0x8,%al

Disassembly of section .jcr:

08049f10 <__JCR_END__>:
 8049f10:	00 00                	add    %al,(%eax)
	...

Disassembly of section .dynamic:

08049f14 <_DYNAMIC>:
 8049f14:	01 00                	add    %eax,(%eax)
 8049f16:	00 00                	add    %al,(%eax)
 8049f18:	01 00                	add    %eax,(%eax)
 8049f1a:	00 00                	add    %al,(%eax)
 8049f1c:	0c 00                	or     $0x0,%al
 8049f1e:	00 00                	add    %al,(%eax)
 8049f20:	b4 82                	mov    $0x82,%ah
 8049f22:	04 08                	add    $0x8,%al
 8049f24:	0d 00 00 00 24       	or     $0x24000000,%eax
 8049f29:	86 04 08             	xchg   %al,(%eax,%ecx,1)
 8049f2c:	19 00                	sbb    %eax,(%eax)
 8049f2e:	00 00                	add    %al,(%eax)
 8049f30:	08 9f 04 08 1b 00    	or     %bl,0x1b0804(%edi)
 8049f36:	00 00                	add    %al,(%eax)
 8049f38:	04 00                	add    $0x0,%al
 8049f3a:	00 00                	add    %al,(%eax)
 8049f3c:	1a 00                	sbb    (%eax),%al
 8049f3e:	00 00                	add    %al,(%eax)
 8049f40:	0c 9f                	or     $0x9f,%al
 8049f42:	04 08                	add    $0x8,%al
 8049f44:	1c 00                	sbb    $0x0,%al
 8049f46:	00 00                	add    %al,(%eax)
 8049f48:	04 00                	add    $0x0,%al
 8049f4a:	00 00                	add    %al,(%eax)
 8049f4c:	f5                   	cmc    
 8049f4d:	fe                   	(bad)  
 8049f4e:	ff 6f ac             	ljmp   *-0x54(%edi)
 8049f51:	81 04 08 05 00 00 00 	addl   $0x5,(%eax,%ecx,1)
 8049f58:	1c 82                	sbb    $0x82,%al
 8049f5a:	04 08                	add    $0x8,%al
 8049f5c:	06                   	push   %es
 8049f5d:	00 00                	add    %al,(%eax)
 8049f5f:	00 cc                	add    %cl,%ah
 8049f61:	81 04 08 0a 00 00 00 	addl   $0xa,(%eax,%ecx,1)
 8049f68:	4c                   	dec    %esp
 8049f69:	00 00                	add    %al,(%eax)
 8049f6b:	00 0b                	add    %cl,(%ebx)
 8049f6d:	00 00                	add    %al,(%eax)
 8049f6f:	00 10                	add    %dl,(%eax)
 8049f71:	00 00                	add    %al,(%eax)
 8049f73:	00 15 00 00 00 00    	add    %dl,0x0
 8049f79:	00 00                	add    %al,(%eax)
 8049f7b:	00 03                	add    %al,(%ebx)
 8049f7d:	00 00                	add    %al,(%eax)
 8049f7f:	00 00                	add    %al,(%eax)
 8049f81:	a0 04 08 02 00       	mov    0x20804,%al
 8049f86:	00 00                	add    %al,(%eax)
 8049f88:	18 00                	sbb    %al,(%eax)
 8049f8a:	00 00                	add    %al,(%eax)
 8049f8c:	14 00                	adc    $0x0,%al
 8049f8e:	00 00                	add    %al,(%eax)
 8049f90:	11 00                	adc    %eax,(%eax)
 8049f92:	00 00                	add    %al,(%eax)
 8049f94:	17                   	pop    %ss
 8049f95:	00 00                	add    %al,(%eax)
 8049f97:	00 9c 82 04 08 11 00 	add    %bl,0x110804(%edx,%eax,4)
 8049f9e:	00 00                	add    %al,(%eax)
 8049fa0:	94                   	xchg   %eax,%esp
 8049fa1:	82                   	(bad)  
 8049fa2:	04 08                	add    $0x8,%al
 8049fa4:	12 00                	adc    (%eax),%al
 8049fa6:	00 00                	add    %al,(%eax)
 8049fa8:	08 00                	or     %al,(%eax)
 8049faa:	00 00                	add    %al,(%eax)
 8049fac:	13 00                	adc    (%eax),%eax
 8049fae:	00 00                	add    %al,(%eax)
 8049fb0:	08 00                	or     %al,(%eax)
 8049fb2:	00 00                	add    %al,(%eax)
 8049fb4:	fe                   	(bad)  
 8049fb5:	ff                   	(bad)  
 8049fb6:	ff 6f 74             	ljmp   *0x74(%edi)
 8049fb9:	82                   	(bad)  
 8049fba:	04 08                	add    $0x8,%al
 8049fbc:	ff                   	(bad)  
 8049fbd:	ff                   	(bad)  
 8049fbe:	ff 6f 01             	ljmp   *0x1(%edi)
 8049fc1:	00 00                	add    %al,(%eax)
 8049fc3:	00 f0                	add    %dh,%al
 8049fc5:	ff                   	(bad)  
 8049fc6:	ff 6f 68             	ljmp   *0x68(%edi)
 8049fc9:	82                   	(bad)  
 8049fca:	04 08                	add    $0x8,%al
	...

Disassembly of section .got:

08049ffc <.got>:
 8049ffc:	00 00                	add    %al,(%eax)
	...

Disassembly of section .got.plt:

0804a000 <_GLOBAL_OFFSET_TABLE_>:
 804a000:	14 9f                	adc    $0x9f,%al
 804a002:	04 08                	add    $0x8,%al
	...
 804a00c:	f6 82 04 08 06 83 04 	testb  $0x4,-0x7cf9f7fc(%edx)
 804a013:	08 16                	or     %dl,(%esi)
 804a015:	83                   	.byte 0x83
 804a016:	04 08                	add    $0x8,%al

Disassembly of section .data:

0804a018 <__data_start>:
 804a018:	00 00                	add    %al,(%eax)
	...

0804a01c <__dso_handle>:
 804a01c:	00 00                	add    %al,(%eax)
	...

0804a020 <b>:
 804a020:	20 00                	and    %al,(%eax)
	...

0804a024 <a>:
 804a024:	68 65 6c 6c 6f       	push   $0x6f6c6c65
 804a029:	00 00                	add    %al,(%eax)
	...

Disassembly of section .bss:

0804a02c <__bss_start>:
 804a02c:	00 00                	add    %al,(%eax)
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	47                   	inc    %edi
   1:	43                   	inc    %ebx
   2:	43                   	inc    %ebx
   3:	3a 20                	cmp    (%eax),%ah
   5:	28 55 62             	sub    %dl,0x62(%ebp)
   8:	75 6e                	jne    78 <_init-0x804823c>
   a:	74 75                	je     81 <_init-0x8048233>
   c:	2f                   	das    
   d:	4c                   	dec    %esp
   e:	69 6e 61 72 6f 20 34 	imul   $0x34206f72,0x61(%esi),%ebp
  15:	2e                   	cs
  16:	37                   	aaa    
  17:	2e 33 2d 31 75 62 75 	xor    %cs:0x75627531,%ebp
  1e:	6e                   	outsb  %ds:(%esi),(%dx)
  1f:	74 75                	je     96 <_init-0x804821e>
  21:	31 29                	xor    %ebp,(%ecx)
  23:	20 34 2e             	and    %dh,(%esi,%ebp,1)
  26:	37                   	aaa    
  27:	2e 33 00             	xor    %cs:(%eax),%eax
