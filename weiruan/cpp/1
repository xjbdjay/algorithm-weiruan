
a.out:     file format elf32-i386


Disassembly of section .interp:

08048154 <.interp>:
 8048154:	2f                   	das    
 8048155:	6c                   	insb   (%dx),%es:(%edi)
 8048156:	69 62 2f 6c 64 2d 6c 	imul   $0x6c2d646c,0x2f(%edx),%esp
 804815d:	69 6e 75 78 2e 73 6f 	imul   $0x6f732e78,0x75(%esi),%ebp
 8048164:	2e 32 00             	xor    %cs:(%eax),%al

Disassembly of section .note.ABI-tag:

08048168 <.note.ABI-tag>:
 8048168:	04 00                	add    $0x0,%al
 804816a:	00 00                	add    %al,(%eax)
 804816c:	10 00                	adc    %al,(%eax)
 804816e:	00 00                	add    %al,(%eax)
 8048170:	01 00                	add    %eax,(%eax)
 8048172:	00 00                	add    %al,(%eax)
 8048174:	47                   	inc    %edi
 8048175:	4e                   	dec    %esi
 8048176:	55                   	push   %ebp
 8048177:	00 00                	add    %al,(%eax)
 8048179:	00 00                	add    %al,(%eax)
 804817b:	00 02                	add    %al,(%edx)
 804817d:	00 00                	add    %al,(%eax)
 804817f:	00 06                	add    %al,(%esi)
 8048181:	00 00                	add    %al,(%eax)
 8048183:	00 18                	add    %bl,(%eax)
 8048185:	00 00                	add    %al,(%eax)
	...

Disassembly of section .note.gnu.build-id:

08048188 <.note.gnu.build-id>:
 8048188:	04 00                	add    $0x0,%al
 804818a:	00 00                	add    %al,(%eax)
 804818c:	14 00                	adc    $0x0,%al
 804818e:	00 00                	add    %al,(%eax)
 8048190:	03 00                	add    (%eax),%eax
 8048192:	00 00                	add    %al,(%eax)
 8048194:	47                   	inc    %edi
 8048195:	4e                   	dec    %esi
 8048196:	55                   	push   %ebp
 8048197:	00 3d 46 71 af 9c    	add    %bh,0x9caf7146
 804819d:	1d 30 b2 f9 f2       	sbb    $0xf2f9b230,%eax
 80481a2:	63 cb                	arpl   %cx,%bx
 80481a4:	57                   	push   %edi
 80481a5:	72 88                	jb     804812f <_init-0x4bd>
 80481a7:	63 c9                	arpl   %cx,%cx
 80481a9:	0d                   	.byte 0xd
 80481aa:	65                   	gs
 80481ab:	c6                   	.byte 0xc6

Disassembly of section .gnu.hash:

080481ac <.gnu.hash>:
 80481ac:	03 00                	add    (%eax),%eax
 80481ae:	00 00                	add    %al,(%eax)
 80481b0:	0d 00 00 00 01       	or     $0x1000000,%eax
 80481b5:	00 00                	add    %al,(%eax)
 80481b7:	00 05 00 00 00 01    	add    %al,0x1000000
 80481bd:	2b 10                	sub    (%eax),%edx
 80481bf:	21 00                	and    %eax,(%eax)
 80481c1:	00 00                	add    %al,(%eax)
 80481c3:	00 0d 00 00 00 0f    	add    %cl,0xf000000
 80481c9:	00 00                	add    %al,(%eax)
 80481cb:	00 ac 4b e3 c0 21 fd 	add    %ch,-0x2de3f1d(%ebx,%ecx,2)
 80481d2:	f4                   	hlt    
 80481d3:	09 28                	or     %ebp,(%eax)
 80481d5:	45                   	inc    %ebp
 80481d6:	d5 4c                	aad    $0x4c
 80481d8:	14 98                	adc    $0x98,%al
 80481da:	0c 43                	or     $0x43,%al
 80481dc:	79 49                	jns    8048227 <_init-0x3c5>
 80481de:	6b                   	.byte 0x6b
 80481df:	b6                   	.byte 0xb6

Disassembly of section .dynsym:

080481e0 <.dynsym>:
	...
 80481f0:	ae                   	scas   %es:(%edi),%al
	...
 80481f9:	00 00                	add    %al,(%eax)
 80481fb:	00 12                	add    %dl,(%edx)
 80481fd:	00 00                	add    %al,(%eax)
 80481ff:	00 83 01 00 00 00    	add    %al,0x1(%ebx)
 8048205:	00 00                	add    %al,(%eax)
 8048207:	00 00                	add    %al,(%eax)
 8048209:	00 00                	add    %al,(%eax)
 804820b:	00 12                	add    %dl,(%edx)
 804820d:	00 00                	add    %al,(%eax)
 804820f:	00 10                	add    %dl,(%eax)
	...
 8048219:	00 00                	add    %al,(%eax)
 804821b:	00 20                	add    %ah,(%eax)
 804821d:	00 00                	add    %al,(%eax)
 804821f:	00 1f                	add    %bl,(%edi)
	...
 8048229:	00 00                	add    %al,(%eax)
 804822b:	00 20                	add    %ah,(%eax)
 804822d:	00 00                	add    %al,(%eax)
 804822f:	00 f0                	add    %dh,%al
	...
 8048239:	00 00                	add    %al,(%eax)
 804823b:	00 12                	add    %dl,(%edx)
 804823d:	00 00                	add    %al,(%eax)
 804823f:	00 90 01 00 00 00    	add    %dl,0x1(%eax)
 8048245:	00 00                	add    %al,(%eax)
 8048247:	00 00                	add    %al,(%eax)
 8048249:	00 00                	add    %al,(%eax)
 804824b:	00 12                	add    %dl,(%edx)
 804824d:	00 00                	add    %al,(%eax)
 804824f:	00 33                	add    %dh,(%ebx)
	...
 8048259:	00 00                	add    %al,(%eax)
 804825b:	00 20                	add    %ah,(%eax)
 804825d:	00 00                	add    %al,(%eax)
 804825f:	00 b8 00 00 00 00    	add    %bh,0x0(%eax)
 8048265:	00 00                	add    %al,(%eax)
 8048267:	00 00                	add    %al,(%eax)
 8048269:	00 00                	add    %al,(%eax)
 804826b:	00 12                	add    %dl,(%edx)
 804826d:	00 00                	add    %al,(%eax)
 804826f:	00 4f 00             	add    %cl,0x0(%edi)
	...
 804827a:	00 00                	add    %al,(%eax)
 804827c:	20 00                	and    %al,(%eax)
 804827e:	00 00                	add    %al,(%eax)
 8048280:	7c 01                	jl     8048283 <_init-0x369>
	...
 804828a:	00 00                	add    %al,(%eax)
 804828c:	12 00                	adc    (%eax),%al
 804828e:	00 00                	add    %al,(%eax)
 8048290:	20 01                	and    %al,(%ecx)
	...
 804829a:	00 00                	add    %al,(%eax)
 804829c:	12 00                	adc    (%eax),%al
 804829e:	00 00                	add    %al,(%eax)
 80482a0:	54                   	push   %esp
 80482a1:	01 00                	add    %eax,(%eax)
	...
 80482ab:	00 12                	add    %dl,(%edx)
 80482ad:	00 00                	add    %al,(%eax)
 80482af:	00 6d 01             	add    %ch,0x1(%ebp)
 80482b2:	00 00                	add    %al,(%eax)
 80482b4:	8c 8c 04 08 04 00 00 	mov    %cs,0x408(%esp,%eax,1)
 80482bb:	00 11                	add    %dl,(%ecx)
 80482bd:	00 0f                	add    %cl,(%edi)
 80482bf:	00 69 00             	add    %ch,0x0(%ecx)
 80482c2:	00 00                	add    %al,(%eax)
 80482c4:	b0 86                	mov    $0x86,%al
 80482c6:	04 08                	add    $0x8,%al
 80482c8:	00 00                	add    %al,(%eax)
 80482ca:	00 00                	add    %al,(%eax)
 80482cc:	12 00                	adc    (%eax),%al
 80482ce:	00 00                	add    %al,(%eax)
 80482d0:	08 01                	or     %al,(%ecx)
 80482d2:	00 00                	add    %al,(%eax)
 80482d4:	70 86                	jo     804825c <_init-0x390>
 80482d6:	04 08                	add    $0x8,%al
 80482d8:	00 00                	add    %al,(%eax)
 80482da:	00 00                	add    %al,(%eax)
 80482dc:	12 00                	adc    (%eax),%al
 80482de:	00 00                	add    %al,(%eax)
 80482e0:	a4                   	movsb  %ds:(%esi),%es:(%edi)
 80482e1:	00 00                	add    %al,(%eax)
 80482e3:	00 60 a0             	add    %ah,-0x60(%eax)
 80482e6:	04 08                	add    $0x8,%al
 80482e8:	8c 00                	mov    %es,(%eax)
 80482ea:	00 00                	add    %al,(%eax)
 80482ec:	11 00                	adc    %eax,(%eax)
 80482ee:	1a 00                	sbb    (%eax),%al
 80482f0:	31 01                	xor    %eax,(%ecx)
 80482f2:	00 00                	add    %al,(%eax)
 80482f4:	c0 86 04 08 00 00 00 	rolb   $0x0,0x804(%esi)
 80482fb:	00 12                	add    %dl,(%edx)
 80482fd:	00 00                	add    %al,(%eax)
	...

Disassembly of section .dynstr:

08048300 <.dynstr>:
 8048300:	00 6c 69 62          	add    %ch,0x62(%ecx,%ebp,2)
 8048304:	73 74                	jae    804837a <_init-0x272>
 8048306:	64 63 2b             	arpl   %bp,%fs:(%ebx)
 8048309:	2b 2e                	sub    (%esi),%ebp
 804830b:	73 6f                	jae    804837c <_init-0x270>
 804830d:	2e 36 00 5f 5f       	cs add %bl,%cs:%ss:0x5f(%edi)
 8048312:	67 6d                	insl   (%dx),%es:(%di)
 8048314:	6f                   	outsl  %ds:(%esi),(%dx)
 8048315:	6e                   	outsb  %ds:(%esi),(%dx)
 8048316:	5f                   	pop    %edi
 8048317:	73 74                	jae    804838d <_init-0x25f>
 8048319:	61                   	popa   
 804831a:	72 74                	jb     8048390 <_init-0x25c>
 804831c:	5f                   	pop    %edi
 804831d:	5f                   	pop    %edi
 804831e:	00 5f 4a             	add    %bl,0x4a(%edi)
 8048321:	76 5f                	jbe    8048382 <_init-0x26a>
 8048323:	52                   	push   %edx
 8048324:	65 67 69 73 74 65 72 	imul   $0x6c437265,%gs:0x74(%bp,%di),%esi
 804832b:	43 6c 
 804832d:	61                   	popa   
 804832e:	73 73                	jae    80483a3 <_init-0x249>
 8048330:	65                   	gs
 8048331:	73 00                	jae    8048333 <_init-0x2b9>
 8048333:	5f                   	pop    %edi
 8048334:	49                   	dec    %ecx
 8048335:	54                   	push   %esp
 8048336:	4d                   	dec    %ebp
 8048337:	5f                   	pop    %edi
 8048338:	64                   	fs
 8048339:	65                   	gs
 804833a:	72 65                	jb     80483a1 <_init-0x24b>
 804833c:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%bp,%di),%esi
 8048343:	4d 
 8048344:	43                   	inc    %ebx
 8048345:	6c                   	insb   (%dx),%es:(%edi)
 8048346:	6f                   	outsl  %ds:(%esi),(%dx)
 8048347:	6e                   	outsb  %ds:(%esi),(%dx)
 8048348:	65                   	gs
 8048349:	54                   	push   %esp
 804834a:	61                   	popa   
 804834b:	62 6c 65 00          	bound  %ebp,0x0(%ebp,%eiz,2)
 804834f:	5f                   	pop    %edi
 8048350:	49                   	dec    %ecx
 8048351:	54                   	push   %esp
 8048352:	4d                   	dec    %ebp
 8048353:	5f                   	pop    %edi
 8048354:	72 65                	jb     80483bb <_init-0x231>
 8048356:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%bp,%di),%esi
 804835d:	4d 
 804835e:	43                   	inc    %ebx
 804835f:	6c                   	insb   (%dx),%es:(%edi)
 8048360:	6f                   	outsl  %ds:(%esi),(%dx)
 8048361:	6e                   	outsb  %ds:(%esi),(%dx)
 8048362:	65                   	gs
 8048363:	54                   	push   %esp
 8048364:	61                   	popa   
 8048365:	62 6c 65 00          	bound  %ebp,0x0(%ebp,%eiz,2)
 8048369:	5f                   	pop    %edi
 804836a:	5a                   	pop    %edx
 804836b:	53                   	push   %ebx
 804836c:	74 34                	je     80483a2 <_init-0x24a>
 804836e:	65 6e                	outsb  %gs:(%esi),(%dx)
 8048370:	64                   	fs
 8048371:	6c                   	insb   (%dx),%es:(%edi)
 8048372:	49                   	dec    %ecx
 8048373:	63 53 74             	arpl   %dx,0x74(%ebx)
 8048376:	31 31                	xor    %esi,(%ecx)
 8048378:	63 68 61             	arpl   %bp,0x61(%eax)
 804837b:	72 5f                	jb     80483dc <_init-0x210>
 804837d:	74 72                	je     80483f1 <_init-0x1fb>
 804837f:	61                   	popa   
 8048380:	69 74 73 49 63 45 45 	imul   $0x52454563,0x49(%ebx,%esi,2),%esi
 8048387:	52 
 8048388:	53                   	push   %ebx
 8048389:	74 31                	je     80483bc <_init-0x230>
 804838b:	33 62 61             	xor    0x61(%edx),%esp
 804838e:	73 69                	jae    80483f9 <_init-0x1f3>
 8048390:	63 5f 6f             	arpl   %bx,0x6f(%edi)
 8048393:	73 74                	jae    8048409 <_init-0x1e3>
 8048395:	72 65                	jb     80483fc <_init-0x1f0>
 8048397:	61                   	popa   
 8048398:	6d                   	insl   (%dx),%es:(%edi)
 8048399:	49                   	dec    %ecx
 804839a:	54                   	push   %esp
 804839b:	5f                   	pop    %edi
 804839c:	54                   	push   %esp
 804839d:	30 5f 45             	xor    %bl,0x45(%edi)
 80483a0:	53                   	push   %ebx
 80483a1:	36                   	ss
 80483a2:	5f                   	pop    %edi
 80483a3:	00 5f 5a             	add    %bl,0x5a(%edi)
 80483a6:	53                   	push   %ebx
 80483a7:	74 34                	je     80483dd <_init-0x20f>
 80483a9:	63 6f 75             	arpl   %bp,0x75(%edi)
 80483ac:	74 00                	je     80483ae <_init-0x23e>
 80483ae:	5f                   	pop    %edi
 80483af:	5a                   	pop    %edx
 80483b0:	4e                   	dec    %esi
 80483b1:	53                   	push   %ebx
 80483b2:	6f                   	outsl  %ds:(%esi),(%dx)
 80483b3:	6c                   	insb   (%dx),%es:(%edi)
 80483b4:	73 45                	jae    80483fb <_init-0x1f1>
 80483b6:	69 00 5f 5a 53 74    	imul   $0x74535a5f,(%eax),%eax
 80483bc:	6c                   	insb   (%dx),%es:(%edi)
 80483bd:	73 49                	jae    8048408 <_init-0x1e4>
 80483bf:	53                   	push   %ebx
 80483c0:	74 31                	je     80483f3 <_init-0x1f9>
 80483c2:	31 63 68             	xor    %esp,0x68(%ebx)
 80483c5:	61                   	popa   
 80483c6:	72 5f                	jb     8048427 <_init-0x1c5>
 80483c8:	74 72                	je     804843c <_init-0x1b0>
 80483ca:	61                   	popa   
 80483cb:	69 74 73 49 63 45 45 	imul   $0x52454563,0x49(%ebx,%esi,2),%esi
 80483d2:	52 
 80483d3:	53                   	push   %ebx
 80483d4:	74 31                	je     8048407 <_init-0x1e5>
 80483d6:	33 62 61             	xor    0x61(%edx),%esp
 80483d9:	73 69                	jae    8048444 <_init-0x1a8>
 80483db:	63 5f 6f             	arpl   %bx,0x6f(%edi)
 80483de:	73 74                	jae    8048454 <_init-0x198>
 80483e0:	72 65                	jb     8048447 <_init-0x1a5>
 80483e2:	61                   	popa   
 80483e3:	6d                   	insl   (%dx),%es:(%edi)
 80483e4:	49                   	dec    %ecx
 80483e5:	63 54 5f 45          	arpl   %dx,0x45(%edi,%ebx,2)
 80483e9:	53                   	push   %ebx
 80483ea:	35 5f 50 4b 63       	xor    $0x634b505f,%eax
 80483ef:	00 5f 5a             	add    %bl,0x5a(%edi)
 80483f2:	4e                   	dec    %esi
 80483f3:	53                   	push   %ebx
 80483f4:	74 38                	je     804842e <_init-0x1be>
 80483f6:	69 6f 73 5f 62 61 73 	imul   $0x7361625f,0x73(%edi),%ebp
 80483fd:	65                   	gs
 80483fe:	34 49                	xor    $0x49,%al
 8048400:	6e                   	outsb  %ds:(%esi),(%dx)
 8048401:	69 74 43 31 45 76 00 	imul   $0x5f007645,0x31(%ebx,%eax,2),%esi
 8048408:	5f 
 8048409:	5a                   	pop    %edx
 804840a:	4e                   	dec    %esi
 804840b:	53                   	push   %ebx
 804840c:	74 38                	je     8048446 <_init-0x1a6>
 804840e:	69 6f 73 5f 62 61 73 	imul   $0x7361625f,0x73(%edi),%ebp
 8048415:	65                   	gs
 8048416:	34 49                	xor    $0x49,%al
 8048418:	6e                   	outsb  %ds:(%esi),(%dx)
 8048419:	69 74 44 31 45 76 00 	imul   $0x5f007645,0x31(%esp,%eax,2),%esi
 8048420:	5f 
 8048421:	5a                   	pop    %edx
 8048422:	4e                   	dec    %esi
 8048423:	53                   	push   %ebx
 8048424:	6f                   	outsl  %ds:(%esi),(%dx)
 8048425:	6c                   	insb   (%dx),%es:(%edi)
 8048426:	73 45                	jae    804846d <_init-0x17f>
 8048428:	50                   	push   %eax
 8048429:	46                   	inc    %esi
 804842a:	52                   	push   %edx
 804842b:	53                   	push   %ebx
 804842c:	6f                   	outsl  %ds:(%esi),(%dx)
 804842d:	53                   	push   %ebx
 804842e:	5f                   	pop    %edi
 804842f:	45                   	inc    %ebp
 8048430:	00 5f 5f             	add    %bl,0x5f(%edi)
 8048433:	67 78 78             	addr16 js 80484ae <_init-0x13e>
 8048436:	5f                   	pop    %edi
 8048437:	70 65                	jo     804849e <_init-0x14e>
 8048439:	72 73                	jb     80484ae <_init-0x13e>
 804843b:	6f                   	outsl  %ds:(%esi),(%dx)
 804843c:	6e                   	outsb  %ds:(%esi),(%dx)
 804843d:	61                   	popa   
 804843e:	6c                   	insb   (%dx),%es:(%edi)
 804843f:	69 74 79 5f 76 30 00 	imul   $0x6c003076,0x5f(%ecx,%edi,2),%esi
 8048446:	6c 
 8048447:	69 62 67 63 63 5f 73 	imul   $0x735f6363,0x67(%edx),%esp
 804844e:	2e 73 6f             	jae,pn 80484c0 <_init-0x12c>
 8048451:	2e 31 00             	xor    %eax,%cs:(%eax)
 8048454:	5f                   	pop    %edi
 8048455:	55                   	push   %ebp
 8048456:	6e                   	outsb  %ds:(%esi),(%dx)
 8048457:	77 69                	ja     80484c2 <_init-0x12a>
 8048459:	6e                   	outsb  %ds:(%esi),(%dx)
 804845a:	64                   	fs
 804845b:	5f                   	pop    %edi
 804845c:	52                   	push   %edx
 804845d:	65                   	gs
 804845e:	73 75                	jae    80484d5 <_init-0x117>
 8048460:	6d                   	insl   (%dx),%es:(%edi)
 8048461:	65 00 6c 69 62       	add    %ch,%gs:0x62(%ecx,%ebp,2)
 8048466:	63 2e                	arpl   %bp,(%esi)
 8048468:	73 6f                	jae    80484d9 <_init-0x113>
 804846a:	2e 36 00 5f 49       	cs add %bl,%cs:%ss:0x49(%edi)
 804846f:	4f                   	dec    %edi
 8048470:	5f                   	pop    %edi
 8048471:	73 74                	jae    80484e7 <_init-0x105>
 8048473:	64 69 6e 5f 75 73 65 	imul   $0x64657375,%fs:0x5f(%esi),%ebp
 804847a:	64 
 804847b:	00 70 72             	add    %dh,0x72(%eax)
 804847e:	69 6e 74 66 00 5f 5f 	imul   $0x5f5f0066,0x74(%esi),%ebp
 8048485:	63 78 61             	arpl   %di,0x61(%eax)
 8048488:	5f                   	pop    %edi
 8048489:	61                   	popa   
 804848a:	74 65                	je     80484f1 <_init-0xfb>
 804848c:	78 69                	js     80484f7 <_init-0xf5>
 804848e:	74 00                	je     8048490 <_init-0x15c>
 8048490:	5f                   	pop    %edi
 8048491:	5f                   	pop    %edi
 8048492:	6c                   	insb   (%dx),%es:(%edi)
 8048493:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%edx),%esp
 804849a:	72 74                	jb     8048510 <_init-0xdc>
 804849c:	5f                   	pop    %edi
 804849d:	6d                   	insl   (%dx),%es:(%edi)
 804849e:	61                   	popa   
 804849f:	69 6e 00 47 43 43 5f 	imul   $0x5f434347,0x0(%esi),%ebp
 80484a6:	33 2e                	xor    (%esi),%ebp
 80484a8:	30 00                	xor    %al,(%eax)
 80484aa:	47                   	inc    %edi
 80484ab:	4c                   	dec    %esp
 80484ac:	49                   	dec    %ecx
 80484ad:	42                   	inc    %edx
 80484ae:	43                   	inc    %ebx
 80484af:	5f                   	pop    %edi
 80484b0:	32 2e                	xor    (%esi),%ch
 80484b2:	30 00                	xor    %al,(%eax)
 80484b4:	47                   	inc    %edi
 80484b5:	4c                   	dec    %esp
 80484b6:	49                   	dec    %ecx
 80484b7:	42                   	inc    %edx
 80484b8:	43                   	inc    %ebx
 80484b9:	5f                   	pop    %edi
 80484ba:	32 2e                	xor    (%esi),%ch
 80484bc:	31 2e                	xor    %ebp,(%esi)
 80484be:	33 00                	xor    (%eax),%eax
 80484c0:	43                   	inc    %ebx
 80484c1:	58                   	pop    %eax
 80484c2:	58                   	pop    %eax
 80484c3:	41                   	inc    %ecx
 80484c4:	42                   	inc    %edx
 80484c5:	49                   	dec    %ecx
 80484c6:	5f                   	pop    %edi
 80484c7:	31 2e                	xor    %ebp,(%esi)
 80484c9:	33 00                	xor    (%eax),%eax
 80484cb:	47                   	inc    %edi
 80484cc:	4c                   	dec    %esp
 80484cd:	49                   	dec    %ecx
 80484ce:	42                   	inc    %edx
 80484cf:	43                   	inc    %ebx
 80484d0:	58                   	pop    %eax
 80484d1:	58                   	pop    %eax
 80484d2:	5f                   	pop    %edi
 80484d3:	33 2e                	xor    (%esi),%ebp
 80484d5:	34 00                	xor    $0x0,%al

Disassembly of section .gnu.version:

080484d8 <.gnu.version>:
 80484d8:	00 00                	add    %al,(%eax)
 80484da:	02 00                	add    (%eax),%al
 80484dc:	03 00                	add    (%eax),%eax
 80484de:	00 00                	add    %al,(%eax)
 80484e0:	00 00                	add    %al,(%eax)
 80484e2:	02 00                	add    (%eax),%al
 80484e4:	04 00                	add    $0x0,%al
 80484e6:	00 00                	add    %al,(%eax)
 80484e8:	02 00                	add    (%eax),%al
 80484ea:	00 00                	add    %al,(%eax)
 80484ec:	04 00                	add    $0x0,%al
 80484ee:	02 00                	add    (%eax),%al
 80484f0:	06                   	push   %es
 80484f1:	00 01                	add    %al,(%ecx)
 80484f3:	00 02                	add    %al,(%edx)
 80484f5:	00 02                	add    %al,(%edx)
 80484f7:	00 02                	add    %al,(%edx)
 80484f9:	00                   	.byte 0x0
 80484fa:	05                   	.byte 0x5
	...

Disassembly of section .gnu.version_r:

080484fc <.gnu.version_r>:
 80484fc:	01 00                	add    %eax,(%eax)
 80484fe:	01 00                	add    %eax,(%eax)
 8048500:	46                   	inc    %esi
 8048501:	01 00                	add    %eax,(%eax)
 8048503:	00 10                	add    %dl,(%eax)
 8048505:	00 00                	add    %al,(%eax)
 8048507:	00 20                	add    %ah,(%eax)
 8048509:	00 00                	add    %al,(%eax)
 804850b:	00 50 26             	add    %dl,0x26(%eax)
 804850e:	79 0b                	jns    804851b <_init-0xd1>
 8048510:	00 00                	add    %al,(%eax)
 8048512:	06                   	push   %es
 8048513:	00 a2 01 00 00 00    	add    %ah,0x1(%edx)
 8048519:	00 00                	add    %al,(%eax)
 804851b:	00 01                	add    %al,(%ecx)
 804851d:	00 02                	add    %al,(%edx)
 804851f:	00 63 01             	add    %ah,0x1(%ebx)
 8048522:	00 00                	add    %al,(%eax)
 8048524:	10 00                	adc    %al,(%eax)
 8048526:	00 00                	add    %al,(%eax)
 8048528:	30 00                	xor    %al,(%eax)
 804852a:	00 00                	add    %al,(%eax)
 804852c:	10 69 69             	adc    %ch,0x69(%ecx)
 804852f:	0d 00 00 04 00       	or     $0x40000,%eax
 8048534:	aa                   	stos   %al,%es:(%edi)
 8048535:	01 00                	add    %eax,(%eax)
 8048537:	00 10                	add    %dl,(%eax)
 8048539:	00 00                	add    %al,(%eax)
 804853b:	00 73 1f             	add    %dh,0x1f(%ebx)
 804853e:	69 09 00 00 03 00    	imul   $0x30000,(%ecx),%ecx
 8048544:	b4 01                	mov    $0x1,%ah
 8048546:	00 00                	add    %al,(%eax)
 8048548:	00 00                	add    %al,(%eax)
 804854a:	00 00                	add    %al,(%eax)
 804854c:	01 00                	add    %eax,(%eax)
 804854e:	02 00                	add    (%eax),%al
 8048550:	01 00                	add    %eax,(%eax)
 8048552:	00 00                	add    %al,(%eax)
 8048554:	10 00                	adc    %al,(%eax)
 8048556:	00 00                	add    %al,(%eax)
 8048558:	00 00                	add    %al,(%eax)
 804855a:	00 00                	add    %al,(%eax)
 804855c:	d3 af 6b 05 00 00    	shrl   %cl,0x56b(%edi)
 8048562:	05 00 c0 01 00       	add    $0x1c000,%eax
 8048567:	00 10                	add    %dl,(%eax)
 8048569:	00 00                	add    %al,(%eax)
 804856b:	00 74 29 92          	add    %dh,-0x6e(%ecx,%ebp,1)
 804856f:	08 00                	or     %al,(%eax)
 8048571:	00 02                	add    %al,(%edx)
 8048573:	00 cb                	add    %cl,%bl
 8048575:	01 00                	add    %eax,(%eax)
 8048577:	00 00                	add    %al,(%eax)
 8048579:	00 00                	add    %al,(%eax)
	...

Disassembly of section .rel.dyn:

0804857c <.rel.dyn>:
 804857c:	fc                   	cld    
 804857d:	9f                   	lahf   
 804857e:	04 08                	add    $0x8,%al
 8048580:	06                   	push   %es
 8048581:	03 00                	add    (%eax),%eax
 8048583:	00 60 a0             	add    %ah,-0x60(%eax)
 8048586:	04 08                	add    $0x8,%al
 8048588:	05                   	.byte 0x5
 8048589:	10 00                	adc    %al,(%eax)
	...

Disassembly of section .rel.plt:

0804858c <.rel.plt>:
 804858c:	0c a0                	or     $0xa0,%al
 804858e:	04 08                	add    $0x8,%al
 8048590:	07                   	pop    %es
 8048591:	01 00                	add    %eax,(%eax)
 8048593:	00 10                	add    %dl,(%eax)
 8048595:	a0 04 08 07 02       	mov    0x2070804,%al
 804859a:	00 00                	add    %al,(%eax)
 804859c:	14 a0                	adc    $0xa0,%al
 804859e:	04 08                	add    $0x8,%al
 80485a0:	07                   	pop    %es
 80485a1:	03 00                	add    (%eax),%eax
 80485a3:	00 18                	add    %bl,(%eax)
 80485a5:	a0 04 08 07 05       	mov    0x5070804,%al
 80485aa:	00 00                	add    %al,(%eax)
 80485ac:	1c a0                	sbb    $0xa0,%al
 80485ae:	04 08                	add    $0x8,%al
 80485b0:	07                   	pop    %es
 80485b1:	06                   	push   %es
 80485b2:	00 00                	add    %al,(%eax)
 80485b4:	20 a0 04 08 07 0f    	and    %ah,0xf070804(%eax)
 80485ba:	00 00                	add    %al,(%eax)
 80485bc:	24 a0                	and    $0xa0,%al
 80485be:	04 08                	add    $0x8,%al
 80485c0:	07                   	pop    %es
 80485c1:	08 00                	or     %al,(%eax)
 80485c3:	00 28                	add    %ch,(%eax)
 80485c5:	a0 04 08 07 0a       	mov    0xa070804,%al
 80485ca:	00 00                	add    %al,(%eax)
 80485cc:	2c a0                	sub    $0xa0,%al
 80485ce:	04 08                	add    $0x8,%al
 80485d0:	07                   	pop    %es
 80485d1:	0b 00                	or     (%eax),%eax
 80485d3:	00 30                	add    %dh,(%eax)
 80485d5:	a0 04 08 07 0e       	mov    0xe070804,%al
 80485da:	00 00                	add    %al,(%eax)
 80485dc:	34 a0                	xor    $0xa0,%al
 80485de:	04 08                	add    $0x8,%al
 80485e0:	07                   	pop    %es
 80485e1:	11 00                	adc    %eax,(%eax)
 80485e3:	00 38                	add    %bh,(%eax)
 80485e5:	a0 04 08 07 0c       	mov    0xc070804,%al
	...

Disassembly of section .init:

080485ec <_init>:
 80485ec:	53                   	push   %ebx
 80485ed:	83 ec 08             	sub    $0x8,%esp
 80485f0:	e8 1b 01 00 00       	call   8048710 <__x86.get_pc_thunk.bx>
 80485f5:	81 c3 0b 1a 00 00    	add    $0x1a0b,%ebx
 80485fb:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 8048601:	85 c0                	test   %eax,%eax
 8048603:	74 05                	je     804860a <_init+0x1e>
 8048605:	e8 36 00 00 00       	call   8048640 <__gmon_start__@plt>
 804860a:	83 c4 08             	add    $0x8,%esp
 804860d:	5b                   	pop    %ebx
 804860e:	c3                   	ret    

Disassembly of section .plt:

08048610 <_ZNSolsEi@plt-0x10>:
 8048610:	ff 35 04 a0 04 08    	pushl  0x804a004
 8048616:	ff 25 08 a0 04 08    	jmp    *0x804a008
 804861c:	00 00                	add    %al,(%eax)
	...

08048620 <_ZNSolsEi@plt>:
 8048620:	ff 25 0c a0 04 08    	jmp    *0x804a00c
 8048626:	68 00 00 00 00       	push   $0x0
 804862b:	e9 e0 ff ff ff       	jmp    8048610 <_init+0x24>

08048630 <__cxa_atexit@plt>:
 8048630:	ff 25 10 a0 04 08    	jmp    *0x804a010
 8048636:	68 08 00 00 00       	push   $0x8
 804863b:	e9 d0 ff ff ff       	jmp    8048610 <_init+0x24>

08048640 <__gmon_start__@plt>:
 8048640:	ff 25 14 a0 04 08    	jmp    *0x804a014
 8048646:	68 10 00 00 00       	push   $0x10
 804864b:	e9 c0 ff ff ff       	jmp    8048610 <_init+0x24>

08048650 <_ZNSt8ios_base4InitC1Ev@plt>:
 8048650:	ff 25 18 a0 04 08    	jmp    *0x804a018
 8048656:	68 18 00 00 00       	push   $0x18
 804865b:	e9 b0 ff ff ff       	jmp    8048610 <_init+0x24>

08048660 <__libc_start_main@plt>:
 8048660:	ff 25 1c a0 04 08    	jmp    *0x804a01c
 8048666:	68 20 00 00 00       	push   $0x20
 804866b:	e9 a0 ff ff ff       	jmp    8048610 <_init+0x24>

08048670 <_ZNSt8ios_base4InitD1Ev@plt>:
 8048670:	ff 25 20 a0 04 08    	jmp    *0x804a020
 8048676:	68 28 00 00 00       	push   $0x28
 804867b:	e9 90 ff ff ff       	jmp    8048610 <_init+0x24>

08048680 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>:
 8048680:	ff 25 24 a0 04 08    	jmp    *0x804a024
 8048686:	68 30 00 00 00       	push   $0x30
 804868b:	e9 80 ff ff ff       	jmp    8048610 <_init+0x24>

08048690 <printf@plt>:
 8048690:	ff 25 28 a0 04 08    	jmp    *0x804a028
 8048696:	68 38 00 00 00       	push   $0x38
 804869b:	e9 70 ff ff ff       	jmp    8048610 <_init+0x24>

080486a0 <_ZNSolsEPFRSoS_E@plt>:
 80486a0:	ff 25 2c a0 04 08    	jmp    *0x804a02c
 80486a6:	68 40 00 00 00       	push   $0x40
 80486ab:	e9 60 ff ff ff       	jmp    8048610 <_init+0x24>

080486b0 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@plt>:
 80486b0:	ff 25 30 a0 04 08    	jmp    *0x804a030
 80486b6:	68 48 00 00 00       	push   $0x48
 80486bb:	e9 50 ff ff ff       	jmp    8048610 <_init+0x24>

080486c0 <__gxx_personality_v0@plt>:
 80486c0:	ff 25 34 a0 04 08    	jmp    *0x804a034
 80486c6:	68 50 00 00 00       	push   $0x50
 80486cb:	e9 40 ff ff ff       	jmp    8048610 <_init+0x24>

080486d0 <_Unwind_Resume@plt>:
 80486d0:	ff 25 38 a0 04 08    	jmp    *0x804a038
 80486d6:	68 58 00 00 00       	push   $0x58
 80486db:	e9 30 ff ff ff       	jmp    8048610 <_init+0x24>

Disassembly of section .text:

080486e0 <_start>:
 80486e0:	31 ed                	xor    %ebp,%ebp
 80486e2:	5e                   	pop    %esi
 80486e3:	89 e1                	mov    %esp,%ecx
 80486e5:	83 e4 f0             	and    $0xfffffff0,%esp
 80486e8:	50                   	push   %eax
 80486e9:	54                   	push   %esp
 80486ea:	52                   	push   %edx
 80486eb:	68 70 8c 04 08       	push   $0x8048c70
 80486f0:	68 00 8c 04 08       	push   $0x8048c00
 80486f5:	51                   	push   %ecx
 80486f6:	56                   	push   %esi
 80486f7:	68 dc 87 04 08       	push   $0x80487dc
 80486fc:	e8 5f ff ff ff       	call   8048660 <__libc_start_main@plt>
 8048701:	f4                   	hlt    
 8048702:	66 90                	xchg   %ax,%ax
 8048704:	66 90                	xchg   %ax,%ax
 8048706:	66 90                	xchg   %ax,%ax
 8048708:	66 90                	xchg   %ax,%ax
 804870a:	66 90                	xchg   %ax,%ax
 804870c:	66 90                	xchg   %ax,%ax
 804870e:	66 90                	xchg   %ax,%ax

08048710 <__x86.get_pc_thunk.bx>:
 8048710:	8b 1c 24             	mov    (%esp),%ebx
 8048713:	c3                   	ret    
 8048714:	66 90                	xchg   %ax,%ax
 8048716:	66 90                	xchg   %ax,%ax
 8048718:	66 90                	xchg   %ax,%ax
 804871a:	66 90                	xchg   %ax,%ax
 804871c:	66 90                	xchg   %ax,%ax
 804871e:	66 90                	xchg   %ax,%ax

08048720 <deregister_tm_clones>:
 8048720:	b8 47 a0 04 08       	mov    $0x804a047,%eax
 8048725:	2d 44 a0 04 08       	sub    $0x804a044,%eax
 804872a:	83 f8 06             	cmp    $0x6,%eax
 804872d:	77 02                	ja     8048731 <deregister_tm_clones+0x11>
 804872f:	f3 c3                	repz ret 
 8048731:	b8 00 00 00 00       	mov    $0x0,%eax
 8048736:	85 c0                	test   %eax,%eax
 8048738:	74 f5                	je     804872f <deregister_tm_clones+0xf>
 804873a:	55                   	push   %ebp
 804873b:	89 e5                	mov    %esp,%ebp
 804873d:	83 ec 18             	sub    $0x18,%esp
 8048740:	c7 04 24 44 a0 04 08 	movl   $0x804a044,(%esp)
 8048747:	ff d0                	call   *%eax
 8048749:	c9                   	leave  
 804874a:	c3                   	ret    
 804874b:	90                   	nop
 804874c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

08048750 <register_tm_clones>:
 8048750:	b8 44 a0 04 08       	mov    $0x804a044,%eax
 8048755:	2d 44 a0 04 08       	sub    $0x804a044,%eax
 804875a:	c1 f8 02             	sar    $0x2,%eax
 804875d:	89 c2                	mov    %eax,%edx
 804875f:	c1 ea 1f             	shr    $0x1f,%edx
 8048762:	01 d0                	add    %edx,%eax
 8048764:	d1 f8                	sar    %eax
 8048766:	75 02                	jne    804876a <register_tm_clones+0x1a>
 8048768:	f3 c3                	repz ret 
 804876a:	ba 00 00 00 00       	mov    $0x0,%edx
 804876f:	85 d2                	test   %edx,%edx
 8048771:	74 f5                	je     8048768 <register_tm_clones+0x18>
 8048773:	55                   	push   %ebp
 8048774:	89 e5                	mov    %esp,%ebp
 8048776:	83 ec 18             	sub    $0x18,%esp
 8048779:	89 44 24 04          	mov    %eax,0x4(%esp)
 804877d:	c7 04 24 44 a0 04 08 	movl   $0x804a044,(%esp)
 8048784:	ff d2                	call   *%edx
 8048786:	c9                   	leave  
 8048787:	c3                   	ret    
 8048788:	90                   	nop
 8048789:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

08048790 <__do_global_dtors_aux>:
 8048790:	80 3d ec a0 04 08 00 	cmpb   $0x0,0x804a0ec
 8048797:	75 13                	jne    80487ac <__do_global_dtors_aux+0x1c>
 8048799:	55                   	push   %ebp
 804879a:	89 e5                	mov    %esp,%ebp
 804879c:	83 ec 08             	sub    $0x8,%esp
 804879f:	e8 7c ff ff ff       	call   8048720 <deregister_tm_clones>
 80487a4:	c6 05 ec a0 04 08 01 	movb   $0x1,0x804a0ec
 80487ab:	c9                   	leave  
 80487ac:	f3 c3                	repz ret 
 80487ae:	66 90                	xchg   %ax,%ax

080487b0 <frame_dummy>:
 80487b0:	a1 00 9f 04 08       	mov    0x8049f00,%eax
 80487b5:	85 c0                	test   %eax,%eax
 80487b7:	74 1e                	je     80487d7 <frame_dummy+0x27>
 80487b9:	b8 00 00 00 00       	mov    $0x0,%eax
 80487be:	85 c0                	test   %eax,%eax
 80487c0:	74 15                	je     80487d7 <frame_dummy+0x27>
 80487c2:	55                   	push   %ebp
 80487c3:	89 e5                	mov    %esp,%ebp
 80487c5:	83 ec 18             	sub    $0x18,%esp
 80487c8:	c7 04 24 00 9f 04 08 	movl   $0x8049f00,(%esp)
 80487cf:	ff d0                	call   *%eax
 80487d1:	c9                   	leave  
 80487d2:	e9 79 ff ff ff       	jmp    8048750 <register_tm_clones>
 80487d7:	e9 74 ff ff ff       	jmp    8048750 <register_tm_clones>

080487dc <main>:
 80487dc:	55                   	push   %ebp
 80487dd:	89 e5                	mov    %esp,%ebp
 80487df:	53                   	push   %ebx
 80487e0:	83 e4 f0             	and    $0xfffffff0,%esp
 80487e3:	83 ec 40             	sub    $0x40,%esp
 80487e6:	c7 44 24 10 02 00 00 	movl   $0x2,0x10(%esp)
 80487ed:	00 
 80487ee:	8d 44 24 10          	lea    0x10(%esp),%eax
 80487f2:	89 44 24 14          	mov    %eax,0x14(%esp)
 80487f6:	8d 44 24 10          	lea    0x10(%esp),%eax
 80487fa:	89 44 24 18          	mov    %eax,0x18(%esp)
 80487fe:	8b 44 24 18          	mov    0x18(%esp),%eax
 8048802:	c7 00 04 00 00 00    	movl   $0x4,(%eax)
 8048808:	8b 44 24 14          	mov    0x14(%esp),%eax
 804880c:	8b 10                	mov    (%eax),%edx
 804880e:	8b 44 24 10          	mov    0x10(%esp),%eax
 8048812:	89 54 24 08          	mov    %edx,0x8(%esp)
 8048816:	89 44 24 04          	mov    %eax,0x4(%esp)
 804881a:	c7 04 24 c5 8c 04 08 	movl   $0x8048cc5,(%esp)
 8048821:	e8 6a fe ff ff       	call   8048690 <printf@plt>
 8048826:	c7 44 24 08 02 00 00 	movl   $0x2,0x8(%esp)
 804882d:	00 
 804882e:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 8048835:	00 
 8048836:	8d 44 24 20          	lea    0x20(%esp),%eax
 804883a:	89 04 24             	mov    %eax,(%esp)
 804883d:	e8 1c 02 00 00       	call   8048a5e <_ZN1tC1Eii>
 8048842:	c7 44 24 08 04 00 00 	movl   $0x4,0x8(%esp)
 8048849:	00 
 804884a:	c7 44 24 04 03 00 00 	movl   $0x3,0x4(%esp)
 8048851:	00 
 8048852:	8d 44 24 28          	lea    0x28(%esp),%eax
 8048856:	89 04 24             	mov    %eax,(%esp)
 8048859:	e8 00 02 00 00       	call   8048a5e <_ZN1tC1Eii>
 804885e:	8d 44 24 20          	lea    0x20(%esp),%eax
 8048862:	89 44 24 1c          	mov    %eax,0x1c(%esp)
 8048866:	8b 44 24 1c          	mov    0x1c(%esp),%eax
 804886a:	89 04 24             	mov    %eax,(%esp)
 804886d:	e8 36 03 00 00       	call   8048ba8 <_ZN1t7printabEv>
 8048872:	8d 44 24 28          	lea    0x28(%esp),%eax
 8048876:	89 44 24 04          	mov    %eax,0x4(%esp)
 804887a:	8d 44 24 20          	lea    0x20(%esp),%eax
 804887e:	89 04 24             	mov    %eax,(%esp)
 8048881:	e8 f2 02 00 00       	call   8048b78 <_ZN1tltERS_>
 8048886:	84 c0                	test   %al,%al
 8048888:	74 26                	je     80488b0 <main+0xd4>
 804888a:	c7 44 24 04 d6 8c 04 	movl   $0x8048cd6,0x4(%esp)
 8048891:	08 
 8048892:	c7 04 24 60 a0 04 08 	movl   $0x804a060,(%esp)
 8048899:	e8 e2 fd ff ff       	call   8048680 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
 804889e:	c7 44 24 04 b0 86 04 	movl   $0x80486b0,0x4(%esp)
 80488a5:	08 
 80488a6:	89 04 24             	mov    %eax,(%esp)
 80488a9:	e8 f2 fd ff ff       	call   80486a0 <_ZNSolsEPFRSoS_E@plt>
 80488ae:	eb 24                	jmp    80488d4 <main+0xf8>
 80488b0:	c7 44 24 04 da 8c 04 	movl   $0x8048cda,0x4(%esp)
 80488b7:	08 
 80488b8:	c7 04 24 60 a0 04 08 	movl   $0x804a060,(%esp)
 80488bf:	e8 bc fd ff ff       	call   8048680 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
 80488c4:	c7 44 24 04 b0 86 04 	movl   $0x80486b0,0x4(%esp)
 80488cb:	08 
 80488cc:	89 04 24             	mov    %eax,(%esp)
 80488cf:	e8 cc fd ff ff       	call   80486a0 <_ZNSolsEPFRSoS_E@plt>
 80488d4:	8d 44 24 20          	lea    0x20(%esp),%eax
 80488d8:	89 04 24             	mov    %eax,(%esp)
 80488db:	e8 c8 02 00 00       	call   8048ba8 <_ZN1t7printabEv>
 80488e0:	8d 44 24 28          	lea    0x28(%esp),%eax
 80488e4:	89 04 24             	mov    %eax,(%esp)
 80488e7:	e8 bc 02 00 00       	call   8048ba8 <_ZN1t7printabEv>
 80488ec:	8d 44 24 28          	lea    0x28(%esp),%eax
 80488f0:	89 44 24 04          	mov    %eax,0x4(%esp)
 80488f4:	8d 44 24 20          	lea    0x20(%esp),%eax
 80488f8:	89 04 24             	mov    %eax,(%esp)
 80488fb:	e8 e2 01 00 00       	call   8048ae2 <_ZN1taSERS_>
 8048900:	8d 44 24 20          	lea    0x20(%esp),%eax
 8048904:	89 04 24             	mov    %eax,(%esp)
 8048907:	e8 9c 02 00 00       	call   8048ba8 <_ZN1t7printabEv>
 804890c:	8d 44 24 20          	lea    0x20(%esp),%eax
 8048910:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048914:	8d 44 24 30          	lea    0x30(%esp),%eax
 8048918:	89 04 24             	mov    %eax,(%esp)
 804891b:	e8 80 01 00 00       	call   8048aa0 <_ZN1tC1ERS_>
 8048920:	8d 44 24 30          	lea    0x30(%esp),%eax
 8048924:	89 04 24             	mov    %eax,(%esp)
 8048927:	e8 7c 02 00 00       	call   8048ba8 <_ZN1t7printabEv>
 804892c:	8d 44 24 30          	lea    0x30(%esp),%eax
 8048930:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048934:	8d 44 24 38          	lea    0x38(%esp),%eax
 8048938:	89 04 24             	mov    %eax,(%esp)
 804893b:	e8 60 01 00 00       	call   8048aa0 <_ZN1tC1ERS_>
 8048940:	8d 44 24 28          	lea    0x28(%esp),%eax
 8048944:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048948:	8d 44 24 20          	lea    0x20(%esp),%eax
 804894c:	89 04 24             	mov    %eax,(%esp)
 804894f:	e8 d0 01 00 00       	call   8048b24 <_ZN1tplERS_>
 8048954:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048958:	8d 44 24 38          	lea    0x38(%esp),%eax
 804895c:	89 04 24             	mov    %eax,(%esp)
 804895f:	e8 7e 01 00 00       	call   8048ae2 <_ZN1taSERS_>
 8048964:	8d 44 24 20          	lea    0x20(%esp),%eax
 8048968:	89 04 24             	mov    %eax,(%esp)
 804896b:	e8 38 02 00 00       	call   8048ba8 <_ZN1t7printabEv>
 8048970:	8d 44 24 38          	lea    0x38(%esp),%eax
 8048974:	89 04 24             	mov    %eax,(%esp)
 8048977:	e8 2c 02 00 00       	call   8048ba8 <_ZN1t7printabEv>
 804897c:	8d 44 24 38          	lea    0x38(%esp),%eax
 8048980:	89 04 24             	mov    %eax,(%esp)
 8048983:	e8 ec 00 00 00       	call   8048a74 <_ZN1tD1Ev>
 8048988:	8d 44 24 30          	lea    0x30(%esp),%eax
 804898c:	89 04 24             	mov    %eax,(%esp)
 804898f:	e8 e0 00 00 00       	call   8048a74 <_ZN1tD1Ev>
 8048994:	8d 44 24 28          	lea    0x28(%esp),%eax
 8048998:	89 04 24             	mov    %eax,(%esp)
 804899b:	e8 d4 00 00 00       	call   8048a74 <_ZN1tD1Ev>
 80489a0:	8d 44 24 20          	lea    0x20(%esp),%eax
 80489a4:	89 04 24             	mov    %eax,(%esp)
 80489a7:	e8 c8 00 00 00       	call   8048a74 <_ZN1tD1Ev>
 80489ac:	b8 00 00 00 00       	mov    $0x0,%eax
 80489b1:	eb 4a                	jmp    80489fd <main+0x221>
 80489b3:	89 c3                	mov    %eax,%ebx
 80489b5:	8d 44 24 38          	lea    0x38(%esp),%eax
 80489b9:	89 04 24             	mov    %eax,(%esp)
 80489bc:	e8 b3 00 00 00       	call   8048a74 <_ZN1tD1Ev>
 80489c1:	eb 02                	jmp    80489c5 <main+0x1e9>
 80489c3:	89 c3                	mov    %eax,%ebx
 80489c5:	8d 44 24 30          	lea    0x30(%esp),%eax
 80489c9:	89 04 24             	mov    %eax,(%esp)
 80489cc:	e8 a3 00 00 00       	call   8048a74 <_ZN1tD1Ev>
 80489d1:	eb 02                	jmp    80489d5 <main+0x1f9>
 80489d3:	89 c3                	mov    %eax,%ebx
 80489d5:	8d 44 24 28          	lea    0x28(%esp),%eax
 80489d9:	89 04 24             	mov    %eax,(%esp)
 80489dc:	e8 93 00 00 00       	call   8048a74 <_ZN1tD1Ev>
 80489e1:	eb 02                	jmp    80489e5 <main+0x209>
 80489e3:	89 c3                	mov    %eax,%ebx
 80489e5:	8d 44 24 20          	lea    0x20(%esp),%eax
 80489e9:	89 04 24             	mov    %eax,(%esp)
 80489ec:	e8 83 00 00 00       	call   8048a74 <_ZN1tD1Ev>
 80489f1:	89 d8                	mov    %ebx,%eax
 80489f3:	eb 00                	jmp    80489f5 <main+0x219>
 80489f5:	89 04 24             	mov    %eax,(%esp)
 80489f8:	e8 d3 fc ff ff       	call   80486d0 <_Unwind_Resume@plt>
 80489fd:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 8048a00:	c9                   	leave  
 8048a01:	c3                   	ret    

08048a02 <_Z41__static_initialization_and_destruction_0ii>:
 8048a02:	55                   	push   %ebp
 8048a03:	89 e5                	mov    %esp,%ebp
 8048a05:	83 ec 18             	sub    $0x18,%esp
 8048a08:	83 7d 08 01          	cmpl   $0x1,0x8(%ebp)
 8048a0c:	75 31                	jne    8048a3f <_Z41__static_initialization_and_destruction_0ii+0x3d>
 8048a0e:	81 7d 0c ff ff 00 00 	cmpl   $0xffff,0xc(%ebp)
 8048a15:	75 28                	jne    8048a3f <_Z41__static_initialization_and_destruction_0ii+0x3d>
 8048a17:	c7 04 24 f0 a0 04 08 	movl   $0x804a0f0,(%esp)
 8048a1e:	e8 2d fc ff ff       	call   8048650 <_ZNSt8ios_base4InitC1Ev@plt>
 8048a23:	c7 44 24 08 40 a0 04 	movl   $0x804a040,0x8(%esp)
 8048a2a:	08 
 8048a2b:	c7 44 24 04 f0 a0 04 	movl   $0x804a0f0,0x4(%esp)
 8048a32:	08 
 8048a33:	c7 04 24 70 86 04 08 	movl   $0x8048670,(%esp)
 8048a3a:	e8 f1 fb ff ff       	call   8048630 <__cxa_atexit@plt>
 8048a3f:	c9                   	leave  
 8048a40:	c3                   	ret    

08048a41 <_GLOBAL__sub_I_main>:
 8048a41:	55                   	push   %ebp
 8048a42:	89 e5                	mov    %esp,%ebp
 8048a44:	83 ec 18             	sub    $0x18,%esp
 8048a47:	c7 44 24 04 ff ff 00 	movl   $0xffff,0x4(%esp)
 8048a4e:	00 
 8048a4f:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8048a56:	e8 a7 ff ff ff       	call   8048a02 <_Z41__static_initialization_and_destruction_0ii>
 8048a5b:	c9                   	leave  
 8048a5c:	c3                   	ret    
 8048a5d:	90                   	nop

08048a5e <_ZN1tC1Eii>:
 8048a5e:	55                   	push   %ebp
 8048a5f:	89 e5                	mov    %esp,%ebp
 8048a61:	8b 45 08             	mov    0x8(%ebp),%eax
 8048a64:	8b 55 0c             	mov    0xc(%ebp),%edx
 8048a67:	89 10                	mov    %edx,(%eax)
 8048a69:	8b 45 08             	mov    0x8(%ebp),%eax
 8048a6c:	8b 55 10             	mov    0x10(%ebp),%edx
 8048a6f:	89 50 04             	mov    %edx,0x4(%eax)
 8048a72:	5d                   	pop    %ebp
 8048a73:	c3                   	ret    

08048a74 <_ZN1tD1Ev>:
 8048a74:	55                   	push   %ebp
 8048a75:	89 e5                	mov    %esp,%ebp
 8048a77:	83 ec 18             	sub    $0x18,%esp
 8048a7a:	c7 44 24 04 90 8c 04 	movl   $0x8048c90,0x4(%esp)
 8048a81:	08 
 8048a82:	c7 04 24 60 a0 04 08 	movl   $0x804a060,(%esp)
 8048a89:	e8 f2 fb ff ff       	call   8048680 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
 8048a8e:	c7 44 24 04 b0 86 04 	movl   $0x80486b0,0x4(%esp)
 8048a95:	08 
 8048a96:	89 04 24             	mov    %eax,(%esp)
 8048a99:	e8 02 fc ff ff       	call   80486a0 <_ZNSolsEPFRSoS_E@plt>
 8048a9e:	c9                   	leave  
 8048a9f:	c3                   	ret    

08048aa0 <_ZN1tC1ERS_>:
 8048aa0:	55                   	push   %ebp
 8048aa1:	89 e5                	mov    %esp,%ebp
 8048aa3:	83 ec 18             	sub    $0x18,%esp
 8048aa6:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048aa9:	8b 10                	mov    (%eax),%edx
 8048aab:	8b 45 08             	mov    0x8(%ebp),%eax
 8048aae:	89 10                	mov    %edx,(%eax)
 8048ab0:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048ab3:	8b 50 04             	mov    0x4(%eax),%edx
 8048ab6:	8b 45 08             	mov    0x8(%ebp),%eax
 8048ab9:	89 50 04             	mov    %edx,0x4(%eax)
 8048abc:	c7 44 24 04 9b 8c 04 	movl   $0x8048c9b,0x4(%esp)
 8048ac3:	08 
 8048ac4:	c7 04 24 60 a0 04 08 	movl   $0x804a060,(%esp)
 8048acb:	e8 b0 fb ff ff       	call   8048680 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
 8048ad0:	c7 44 24 04 b0 86 04 	movl   $0x80486b0,0x4(%esp)
 8048ad7:	08 
 8048ad8:	89 04 24             	mov    %eax,(%esp)
 8048adb:	e8 c0 fb ff ff       	call   80486a0 <_ZNSolsEPFRSoS_E@plt>
 8048ae0:	c9                   	leave  
 8048ae1:	c3                   	ret    

08048ae2 <_ZN1taSERS_>:
 8048ae2:	55                   	push   %ebp
 8048ae3:	89 e5                	mov    %esp,%ebp
 8048ae5:	83 ec 18             	sub    $0x18,%esp
 8048ae8:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048aeb:	8b 10                	mov    (%eax),%edx
 8048aed:	8b 45 08             	mov    0x8(%ebp),%eax
 8048af0:	89 10                	mov    %edx,(%eax)
 8048af2:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048af5:	8b 50 04             	mov    0x4(%eax),%edx
 8048af8:	8b 45 08             	mov    0x8(%ebp),%eax
 8048afb:	89 50 04             	mov    %edx,0x4(%eax)
 8048afe:	c7 44 24 04 ac 8c 04 	movl   $0x8048cac,0x4(%esp)
 8048b05:	08 
 8048b06:	c7 04 24 60 a0 04 08 	movl   $0x804a060,(%esp)
 8048b0d:	e8 6e fb ff ff       	call   8048680 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
 8048b12:	c7 44 24 04 b0 86 04 	movl   $0x80486b0,0x4(%esp)
 8048b19:	08 
 8048b1a:	89 04 24             	mov    %eax,(%esp)
 8048b1d:	e8 7e fb ff ff       	call   80486a0 <_ZNSolsEPFRSoS_E@plt>
 8048b22:	c9                   	leave  
 8048b23:	c3                   	ret    

08048b24 <_ZN1tplERS_>:
 8048b24:	55                   	push   %ebp
 8048b25:	89 e5                	mov    %esp,%ebp
 8048b27:	83 ec 18             	sub    $0x18,%esp
 8048b2a:	8b 45 08             	mov    0x8(%ebp),%eax
 8048b2d:	8b 10                	mov    (%eax),%edx
 8048b2f:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048b32:	8b 00                	mov    (%eax),%eax
 8048b34:	01 c2                	add    %eax,%edx
 8048b36:	8b 45 08             	mov    0x8(%ebp),%eax
 8048b39:	89 10                	mov    %edx,(%eax)
 8048b3b:	8b 45 08             	mov    0x8(%ebp),%eax
 8048b3e:	8b 50 04             	mov    0x4(%eax),%edx
 8048b41:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048b44:	8b 40 04             	mov    0x4(%eax),%eax
 8048b47:	01 c2                	add    %eax,%edx
 8048b49:	8b 45 08             	mov    0x8(%ebp),%eax
 8048b4c:	89 50 04             	mov    %edx,0x4(%eax)
 8048b4f:	c7 44 24 04 b7 8c 04 	movl   $0x8048cb7,0x4(%esp)
 8048b56:	08 
 8048b57:	c7 04 24 60 a0 04 08 	movl   $0x804a060,(%esp)
 8048b5e:	e8 1d fb ff ff       	call   8048680 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
 8048b63:	c7 44 24 04 b0 86 04 	movl   $0x80486b0,0x4(%esp)
 8048b6a:	08 
 8048b6b:	89 04 24             	mov    %eax,(%esp)
 8048b6e:	e8 2d fb ff ff       	call   80486a0 <_ZNSolsEPFRSoS_E@plt>
 8048b73:	8b 45 08             	mov    0x8(%ebp),%eax
 8048b76:	c9                   	leave  
 8048b77:	c3                   	ret    

08048b78 <_ZN1tltERS_>:
 8048b78:	55                   	push   %ebp
 8048b79:	89 e5                	mov    %esp,%ebp
 8048b7b:	8b 45 08             	mov    0x8(%ebp),%eax
 8048b7e:	8b 10                	mov    (%eax),%edx
 8048b80:	8b 45 08             	mov    0x8(%ebp),%eax
 8048b83:	8b 40 04             	mov    0x4(%eax),%eax
 8048b86:	8d 0c 02             	lea    (%edx,%eax,1),%ecx
 8048b89:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048b8c:	8b 10                	mov    (%eax),%edx
 8048b8e:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048b91:	8b 40 04             	mov    0x4(%eax),%eax
 8048b94:	01 d0                	add    %edx,%eax
 8048b96:	39 c1                	cmp    %eax,%ecx
 8048b98:	7d 07                	jge    8048ba1 <_ZN1tltERS_+0x29>
 8048b9a:	b8 01 00 00 00       	mov    $0x1,%eax
 8048b9f:	eb 05                	jmp    8048ba6 <_ZN1tltERS_+0x2e>
 8048ba1:	b8 00 00 00 00       	mov    $0x0,%eax
 8048ba6:	5d                   	pop    %ebp
 8048ba7:	c3                   	ret    

08048ba8 <_ZN1t7printabEv>:
 8048ba8:	55                   	push   %ebp
 8048ba9:	89 e5                	mov    %esp,%ebp
 8048bab:	53                   	push   %ebx
 8048bac:	83 ec 14             	sub    $0x14,%esp
 8048baf:	8b 45 08             	mov    0x8(%ebp),%eax
 8048bb2:	8b 58 04             	mov    0x4(%eax),%ebx
 8048bb5:	8b 45 08             	mov    0x8(%ebp),%eax
 8048bb8:	8b 00                	mov    (%eax),%eax
 8048bba:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048bbe:	c7 04 24 60 a0 04 08 	movl   $0x804a060,(%esp)
 8048bc5:	e8 56 fa ff ff       	call   8048620 <_ZNSolsEi@plt>
 8048bca:	c7 44 24 04 c2 8c 04 	movl   $0x8048cc2,0x4(%esp)
 8048bd1:	08 
 8048bd2:	89 04 24             	mov    %eax,(%esp)
 8048bd5:	e8 a6 fa ff ff       	call   8048680 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
 8048bda:	89 5c 24 04          	mov    %ebx,0x4(%esp)
 8048bde:	89 04 24             	mov    %eax,(%esp)
 8048be1:	e8 3a fa ff ff       	call   8048620 <_ZNSolsEi@plt>
 8048be6:	c7 44 24 04 b0 86 04 	movl   $0x80486b0,0x4(%esp)
 8048bed:	08 
 8048bee:	89 04 24             	mov    %eax,(%esp)
 8048bf1:	e8 aa fa ff ff       	call   80486a0 <_ZNSolsEPFRSoS_E@plt>
 8048bf6:	83 c4 14             	add    $0x14,%esp
 8048bf9:	5b                   	pop    %ebx
 8048bfa:	5d                   	pop    %ebp
 8048bfb:	c3                   	ret    
 8048bfc:	66 90                	xchg   %ax,%ax
 8048bfe:	66 90                	xchg   %ax,%ax

08048c00 <__libc_csu_init>:
 8048c00:	55                   	push   %ebp
 8048c01:	57                   	push   %edi
 8048c02:	31 ff                	xor    %edi,%edi
 8048c04:	56                   	push   %esi
 8048c05:	53                   	push   %ebx
 8048c06:	e8 05 fb ff ff       	call   8048710 <__x86.get_pc_thunk.bx>
 8048c0b:	81 c3 f5 13 00 00    	add    $0x13f5,%ebx
 8048c11:	83 ec 1c             	sub    $0x1c,%esp
 8048c14:	8b 6c 24 30          	mov    0x30(%esp),%ebp
 8048c18:	8d b3 fc fe ff ff    	lea    -0x104(%ebx),%esi
 8048c1e:	e8 c9 f9 ff ff       	call   80485ec <_init>
 8048c23:	8d 83 f4 fe ff ff    	lea    -0x10c(%ebx),%eax
 8048c29:	29 c6                	sub    %eax,%esi
 8048c2b:	c1 fe 02             	sar    $0x2,%esi
 8048c2e:	85 f6                	test   %esi,%esi
 8048c30:	74 27                	je     8048c59 <__libc_csu_init+0x59>
 8048c32:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8048c38:	8b 44 24 38          	mov    0x38(%esp),%eax
 8048c3c:	89 2c 24             	mov    %ebp,(%esp)
 8048c3f:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048c43:	8b 44 24 34          	mov    0x34(%esp),%eax
 8048c47:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048c4b:	ff 94 bb f4 fe ff ff 	call   *-0x10c(%ebx,%edi,4)
 8048c52:	83 c7 01             	add    $0x1,%edi
 8048c55:	39 f7                	cmp    %esi,%edi
 8048c57:	75 df                	jne    8048c38 <__libc_csu_init+0x38>
 8048c59:	83 c4 1c             	add    $0x1c,%esp
 8048c5c:	5b                   	pop    %ebx
 8048c5d:	5e                   	pop    %esi
 8048c5e:	5f                   	pop    %edi
 8048c5f:	5d                   	pop    %ebp
 8048c60:	c3                   	ret    
 8048c61:	eb 0d                	jmp    8048c70 <__libc_csu_fini>
 8048c63:	90                   	nop
 8048c64:	90                   	nop
 8048c65:	90                   	nop
 8048c66:	90                   	nop
 8048c67:	90                   	nop
 8048c68:	90                   	nop
 8048c69:	90                   	nop
 8048c6a:	90                   	nop
 8048c6b:	90                   	nop
 8048c6c:	90                   	nop
 8048c6d:	90                   	nop
 8048c6e:	90                   	nop
 8048c6f:	90                   	nop

08048c70 <__libc_csu_fini>:
 8048c70:	f3 c3                	repz ret 
 8048c72:	66 90                	xchg   %ax,%ax

Disassembly of section .fini:

08048c74 <_fini>:
 8048c74:	53                   	push   %ebx
 8048c75:	83 ec 08             	sub    $0x8,%esp
 8048c78:	e8 93 fa ff ff       	call   8048710 <__x86.get_pc_thunk.bx>
 8048c7d:	81 c3 83 13 00 00    	add    $0x1383,%ebx
 8048c83:	83 c4 08             	add    $0x8,%esp
 8048c86:	5b                   	pop    %ebx
 8048c87:	c3                   	ret    

Disassembly of section .rodata:

08048c88 <_fp_hw>:
 8048c88:	03 00                	add    (%eax),%eax
	...

08048c8c <_IO_stdin_used>:
 8048c8c:	01 00                	add    %eax,(%eax)
 8048c8e:	02 00                	add    (%eax),%al
 8048c90:	64                   	fs
 8048c91:	65                   	gs
 8048c92:	73 74                	jae    8048d08 <_IO_stdin_used+0x7c>
 8048c94:	72 75                	jb     8048d0b <_IO_stdin_used+0x7f>
 8048c96:	63 74 65 64          	arpl   %si,0x64(%ebp,%eiz,2)
 8048c9a:	00 63 6f             	add    %ah,0x6f(%ebx)
 8048c9d:	70 79                	jo     8048d18 <_IO_stdin_used+0x8c>
 8048c9f:	20 63 6f             	and    %ah,0x6f(%ebx)
 8048ca2:	6e                   	outsb  %ds:(%esi),(%dx)
 8048ca3:	73 74                	jae    8048d19 <_IO_stdin_used+0x8d>
 8048ca5:	72 75                	jb     8048d1c <_IO_stdin_used+0x90>
 8048ca7:	63 74 65 64          	arpl   %si,0x64(%ebp,%eiz,2)
 8048cab:	00 3d 20 6f 70 65    	add    %bh,0x65706f20
 8048cb1:	72 61                	jb     8048d14 <_IO_stdin_used+0x88>
 8048cb3:	74 6f                	je     8048d24 <_IO_stdin_used+0x98>
 8048cb5:	72 00                	jb     8048cb7 <_IO_stdin_used+0x2b>
 8048cb7:	2b 20                	sub    (%eax),%esp
 8048cb9:	6f                   	outsl  %ds:(%esi),(%dx)
 8048cba:	70 65                	jo     8048d21 <_IO_stdin_used+0x95>
 8048cbc:	72 61                	jb     8048d1f <_IO_stdin_used+0x93>
 8048cbe:	74 6f                	je     8048d2f <_IO_stdin_used+0xa3>
 8048cc0:	72 00                	jb     8048cc2 <_IO_stdin_used+0x36>
 8048cc2:	20 20                	and    %ah,(%eax)
 8048cc4:	00 61 20             	add    %ah,0x20(%ecx)
 8048cc7:	69 73 20 25 64 20 62 	imul   $0x62206425,0x20(%ebx),%esi
 8048cce:	20 69 73             	and    %ch,0x73(%ecx)
 8048cd1:	20 25 64 0a 00 6d    	and    %ah,0x6d000a64
 8048cd7:	3c 6e                	cmp    $0x6e,%al
 8048cd9:	00 6e 6f             	add    %ch,0x6f(%esi)
 8048cdc:	20 3c 00             	and    %bh,(%eax,%eax,1)

Disassembly of section .eh_frame_hdr:

08048ce0 <.eh_frame_hdr>:
 8048ce0:	01 1b                	add    %ebx,(%ebx)
 8048ce2:	03 3b                	add    (%ebx),%edi
 8048ce4:	70 00                	jo     8048ce6 <_IO_stdin_used+0x5a>
 8048ce6:	00 00                	add    %al,(%eax)
 8048ce8:	0d 00 00 00 30       	or     $0x30000000,%eax
 8048ced:	f9                   	stc    
 8048cee:	ff                   	(bad)  
 8048cef:	ff 8c 00 00 00 fc fa 	decl   -0x5040000(%eax,%eax,1)
 8048cf6:	ff                   	(bad)  
 8048cf7:	ff b4 01 00 00 22 fd 	pushl  -0x2de0000(%ecx,%eax,1)
 8048cfe:	ff                   	(bad)  
 8048cff:	ff dc                	lcall  *<internal disassembler error>
 8048d01:	01 00                	add    %eax,(%eax)
 8048d03:	00 61 fd             	add    %ah,-0x3(%ecx)
 8048d06:	ff                   	(bad)  
 8048d07:	ff                   	(bad)  
 8048d08:	fc                   	cld    
 8048d09:	01 00                	add    %eax,(%eax)
 8048d0b:	00 7e fd             	add    %bh,-0x3(%esi)
 8048d0e:	ff                   	(bad)  
 8048d0f:	ff b0 00 00 00 94    	pushl  -0x6c000000(%eax)
 8048d15:	fd                   	std    
 8048d16:	ff                   	(bad)  
 8048d17:	ff d0                	call   *%eax
 8048d19:	00 00                	add    %al,(%eax)
 8048d1b:	00 c0                	add    %al,%al
 8048d1d:	fd                   	std    
 8048d1e:	ff                   	(bad)  
 8048d1f:	ff f0                	push   %eax
 8048d21:	00 00                	add    %al,(%eax)
 8048d23:	00 02                	add    %al,(%edx)
 8048d25:	fe                   	(bad)  
 8048d26:	ff                   	(bad)  
 8048d27:	ff 10                	call   *(%eax)
 8048d29:	01 00                	add    %eax,(%eax)
 8048d2b:	00 44 fe ff          	add    %al,-0x1(%esi,%edi,8)
 8048d2f:	ff 30                	pushl  (%eax)
 8048d31:	01 00                	add    %eax,(%eax)
 8048d33:	00 98 fe ff ff 50    	add    %bl,0x50fffffe(%eax)
 8048d39:	01 00                	add    %eax,(%eax)
 8048d3b:	00 c8                	add    %cl,%al
 8048d3d:	fe                   	(bad)  
 8048d3e:	ff                   	(bad)  
 8048d3f:	ff 70 01             	pushl  0x1(%eax)
 8048d42:	00 00                	add    %al,(%eax)
 8048d44:	20 ff                	and    %bh,%bh
 8048d46:	ff                   	(bad)  
 8048d47:	ff 1c 02             	lcall  *(%edx,%eax,1)
 8048d4a:	00 00                	add    %al,(%eax)
 8048d4c:	90                   	nop
 8048d4d:	ff                   	(bad)  
 8048d4e:	ff                   	(bad)  
 8048d4f:	ff 58 02             	lcall  *0x2(%eax)
	...

Disassembly of section .eh_frame:

08048d54 <__FRAME_END__-0x1f8>:
 8048d54:	14 00                	adc    $0x0,%al
 8048d56:	00 00                	add    %al,(%eax)
 8048d58:	00 00                	add    %al,(%eax)
 8048d5a:	00 00                	add    %al,(%eax)
 8048d5c:	01 7a 52             	add    %edi,0x52(%edx)
 8048d5f:	00 01                	add    %al,(%ecx)
 8048d61:	7c 08                	jl     8048d6b <_IO_stdin_used+0xdf>
 8048d63:	01 1b                	add    %ebx,(%ebx)
 8048d65:	0c 04                	or     $0x4,%al
 8048d67:	04 88                	add    $0x88,%al
 8048d69:	01 00                	add    %eax,(%eax)
 8048d6b:	00 20                	add    %ah,(%eax)
 8048d6d:	00 00                	add    %al,(%eax)
 8048d6f:	00 1c 00             	add    %bl,(%eax,%eax,1)
 8048d72:	00 00                	add    %al,(%eax)
 8048d74:	9c                   	pushf  
 8048d75:	f8                   	clc    
 8048d76:	ff                   	(bad)  
 8048d77:	ff d0                	call   *%eax
 8048d79:	00 00                	add    %al,(%eax)
 8048d7b:	00 00                	add    %al,(%eax)
 8048d7d:	0e                   	push   %cs
 8048d7e:	08 46 0e             	or     %al,0xe(%esi)
 8048d81:	0c 4a                	or     $0x4a,%al
 8048d83:	0f 0b                	ud2    
 8048d85:	74 04                	je     8048d8b <_IO_stdin_used+0xff>
 8048d87:	78 00                	js     8048d89 <_IO_stdin_used+0xfd>
 8048d89:	3f                   	aas    
 8048d8a:	1a 3b                	sbb    (%ebx),%bh
 8048d8c:	2a 32                	sub    (%edx),%dh
 8048d8e:	24 22                	and    $0x22,%al
 8048d90:	1c 00                	sbb    $0x0,%al
 8048d92:	00 00                	add    %al,(%eax)
 8048d94:	40                   	inc    %eax
 8048d95:	00 00                	add    %al,(%eax)
 8048d97:	00 c6                	add    %al,%dh
 8048d99:	fc                   	cld    
 8048d9a:	ff                   	(bad)  
 8048d9b:	ff 16                	call   *(%esi)
 8048d9d:	00 00                	add    %al,(%eax)
 8048d9f:	00 00                	add    %al,(%eax)
 8048da1:	41                   	inc    %ecx
 8048da2:	0e                   	push   %cs
 8048da3:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 8048da9:	52                   	push   %edx
 8048daa:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
 8048dad:	04 00                	add    $0x0,%al
 8048daf:	00 1c 00             	add    %bl,(%eax,%eax,1)
 8048db2:	00 00                	add    %al,(%eax)
 8048db4:	60                   	pusha  
 8048db5:	00 00                	add    %al,(%eax)
 8048db7:	00 bc fc ff ff 2c 00 	add    %bh,0x2cffff(%esp,%edi,8)
 8048dbe:	00 00                	add    %al,(%eax)
 8048dc0:	00 41 0e             	add    %al,0xe(%ecx)
 8048dc3:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 8048dc9:	68 c5 0c 04 04       	push   $0x4040cc5
 8048dce:	00 00                	add    %al,(%eax)
 8048dd0:	1c 00                	sbb    $0x0,%al
 8048dd2:	00 00                	add    %al,(%eax)
 8048dd4:	80 00 00             	addb   $0x0,(%eax)
 8048dd7:	00 c8                	add    %cl,%al
 8048dd9:	fc                   	cld    
 8048dda:	ff                   	(bad)  
 8048ddb:	ff 42 00             	incl   0x0(%edx)
 8048dde:	00 00                	add    %al,(%eax)
 8048de0:	00 41 0e             	add    %al,0xe(%ecx)
 8048de3:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 8048de9:	7e c5                	jle    8048db0 <_IO_stdin_used+0x124>
 8048deb:	0c 04                	or     $0x4,%al
 8048ded:	04 00                	add    $0x0,%al
 8048def:	00 1c 00             	add    %bl,(%eax,%eax,1)
 8048df2:	00 00                	add    %al,(%eax)
 8048df4:	a0 00 00 00 ea       	mov    0xea000000,%al
 8048df9:	fc                   	cld    
 8048dfa:	ff                   	(bad)  
 8048dfb:	ff 42 00             	incl   0x0(%edx)
 8048dfe:	00 00                	add    %al,(%eax)
 8048e00:	00 41 0e             	add    %al,0xe(%ecx)
 8048e03:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 8048e09:	7e c5                	jle    8048dd0 <_IO_stdin_used+0x144>
 8048e0b:	0c 04                	or     $0x4,%al
 8048e0d:	04 00                	add    $0x0,%al
 8048e0f:	00 1c 00             	add    %bl,(%eax,%eax,1)
 8048e12:	00 00                	add    %al,(%eax)
 8048e14:	c0 00 00             	rolb   $0x0,(%eax)
 8048e17:	00 0c fd ff ff 54 00 	add    %cl,0x54ffff(,%edi,8)
 8048e1e:	00 00                	add    %al,(%eax)
 8048e20:	00 41 0e             	add    %al,0xe(%ecx)
 8048e23:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 8048e29:	02 50 c5             	add    -0x3b(%eax),%dl
 8048e2c:	0c 04                	or     $0x4,%al
 8048e2e:	04 00                	add    $0x0,%al
 8048e30:	1c 00                	sbb    $0x0,%al
 8048e32:	00 00                	add    %al,(%eax)
 8048e34:	e0 00                	loopne 8048e36 <_IO_stdin_used+0x1aa>
 8048e36:	00 00                	add    %al,(%eax)
 8048e38:	40                   	inc    %eax
 8048e39:	fd                   	std    
 8048e3a:	ff                   	(bad)  
 8048e3b:	ff 30                	pushl  (%eax)
 8048e3d:	00 00                	add    %al,(%eax)
 8048e3f:	00 00                	add    %al,(%eax)
 8048e41:	41                   	inc    %ecx
 8048e42:	0e                   	push   %cs
 8048e43:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 8048e49:	6c                   	insb   (%dx),%es:(%edi)
 8048e4a:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
 8048e4d:	04 00                	add    $0x0,%al
 8048e4f:	00 20                	add    %ah,(%eax)
 8048e51:	00 00                	add    %al,(%eax)
 8048e53:	00 00                	add    %al,(%eax)
 8048e55:	01 00                	add    %eax,(%eax)
 8048e57:	00 50 fd             	add    %dl,-0x3(%eax)
 8048e5a:	ff                   	(bad)  
 8048e5b:	ff 54 00 00          	call   *0x0(%eax,%eax,1)
 8048e5f:	00 00                	add    %al,(%eax)
 8048e61:	41                   	inc    %ecx
 8048e62:	0e                   	push   %cs
 8048e63:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 8048e69:	44                   	inc    %esp
 8048e6a:	83 03 02             	addl   $0x2,(%ebx)
 8048e6d:	4b                   	dec    %ebx
 8048e6e:	c3                   	ret    
 8048e6f:	41                   	inc    %ecx
 8048e70:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
 8048e73:	04 1c                	add    $0x1c,%al
 8048e75:	00 00                	add    %al,(%eax)
 8048e77:	00 00                	add    %al,(%eax)
 8048e79:	00 00                	add    %al,(%eax)
 8048e7b:	00 01                	add    %al,(%ecx)
 8048e7d:	7a 50                	jp     8048ecf <_IO_stdin_used+0x243>
 8048e7f:	4c                   	dec    %esp
 8048e80:	52                   	push   %edx
 8048e81:	00 01                	add    %al,(%ecx)
 8048e83:	7c 08                	jl     8048e8d <_IO_stdin_used+0x201>
 8048e85:	07                   	pop    %es
 8048e86:	00 c0                	add    %al,%al
 8048e88:	86 04 08             	xchg   %al,(%eax,%ecx,1)
 8048e8b:	00 1b                	add    %bl,(%ebx)
 8048e8d:	0c 04                	or     $0x4,%al
 8048e8f:	04 88                	add    $0x88,%al
 8048e91:	01 00                	add    %eax,(%eax)
 8048e93:	00 24 00             	add    %ah,(%eax,%eax,1)
 8048e96:	00 00                	add    %al,(%eax)
 8048e98:	24 00                	and    $0x0,%al
 8048e9a:	00 00                	add    %al,(%eax)
 8048e9c:	40                   	inc    %eax
 8048e9d:	f9                   	stc    
 8048e9e:	ff                   	(bad)  
 8048e9f:	ff 26                	jmp    *(%esi)
 8048ea1:	02 00                	add    (%eax),%al
 8048ea3:	00 04 50             	add    %al,(%eax,%edx,2)
 8048ea6:	8f 04 08             	popl   (%eax,%ecx,1)
 8048ea9:	41                   	inc    %ecx
 8048eaa:	0e                   	push   %cs
 8048eab:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 8048eb1:	47                   	inc    %edi
 8048eb2:	83 03 03             	addl   $0x3,(%ebx)
 8048eb5:	1b 02                	sbb    (%edx),%eax
 8048eb7:	c5 c3 0c             	(bad)  
 8048eba:	04 04                	add    $0x4,%al
 8048ebc:	1c 00                	sbb    $0x0,%al
 8048ebe:	00 00                	add    %al,(%eax)
 8048ec0:	6c                   	insb   (%dx),%es:(%edi)
 8048ec1:	01 00                	add    %eax,(%eax)
 8048ec3:	00 3e                	add    %bh,(%esi)
 8048ec5:	fb                   	sti    
 8048ec6:	ff                   	(bad)  
 8048ec7:	ff                   	(bad)  
 8048ec8:	3f                   	aas    
 8048ec9:	00 00                	add    %al,(%eax)
 8048ecb:	00 00                	add    %al,(%eax)
 8048ecd:	41                   	inc    %ecx
 8048ece:	0e                   	push   %cs
 8048ecf:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 8048ed5:	7b c5                	jnp    8048e9c <_IO_stdin_used+0x210>
 8048ed7:	0c 04                	or     $0x4,%al
 8048ed9:	04 00                	add    $0x0,%al
 8048edb:	00 1c 00             	add    %bl,(%eax,%eax,1)
 8048ede:	00 00                	add    %al,(%eax)
 8048ee0:	8c 01                	mov    %es,(%ecx)
 8048ee2:	00 00                	add    %al,(%eax)
 8048ee4:	5d                   	pop    %ebp
 8048ee5:	fb                   	sti    
 8048ee6:	ff                   	(bad)  
 8048ee7:	ff 1c 00             	lcall  *(%eax,%eax,1)
 8048eea:	00 00                	add    %al,(%eax)
 8048eec:	00 41 0e             	add    %al,0xe(%ecx)
 8048eef:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 8048ef5:	58                   	pop    %eax
 8048ef6:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
 8048ef9:	04 00                	add    $0x0,%al
 8048efb:	00 38                	add    %bh,(%eax)
 8048efd:	00 00                	add    %al,(%eax)
 8048eff:	00 ac 01 00 00 fc fc 	add    %ch,-0x3040000(%ecx,%eax,1)
 8048f06:	ff                   	(bad)  
 8048f07:	ff 61 00             	jmp    *0x0(%ecx)
 8048f0a:	00 00                	add    %al,(%eax)
 8048f0c:	00 41 0e             	add    %al,0xe(%ecx)
 8048f0f:	08 85 02 41 0e 0c    	or     %al,0xc0e4102(%ebp)
 8048f15:	87 03                	xchg   %eax,(%ebx)
 8048f17:	43                   	inc    %ebx
 8048f18:	0e                   	push   %cs
 8048f19:	10 86 04 41 0e 14    	adc    %al,0x140e4104(%esi)
 8048f1f:	83 05 4e 0e 30 02 48 	addl   $0x48,0x2300e4e
 8048f26:	0e                   	push   %cs
 8048f27:	14 41                	adc    $0x41,%al
 8048f29:	c3                   	ret    
 8048f2a:	0e                   	push   %cs
 8048f2b:	10 41 c6             	adc    %al,-0x3a(%ecx)
 8048f2e:	0e                   	push   %cs
 8048f2f:	0c 41                	or     $0x41,%al
 8048f31:	c7                   	(bad)  
 8048f32:	0e                   	push   %cs
 8048f33:	08 41 c5             	or     %al,-0x3b(%ecx)
 8048f36:	0e                   	push   %cs
 8048f37:	04 10                	add    $0x10,%al
 8048f39:	00 00                	add    %al,(%eax)
 8048f3b:	00 e8                	add    %ch,%al
 8048f3d:	01 00                	add    %eax,(%eax)
 8048f3f:	00 30                	add    %dh,(%eax)
 8048f41:	fd                   	std    
 8048f42:	ff                   	(bad)  
 8048f43:	ff 02                	incl   (%edx)
 8048f45:	00 00                	add    %al,(%eax)
 8048f47:	00 00                	add    %al,(%eax)
 8048f49:	00 00                	add    %al,(%eax)
	...

08048f4c <__FRAME_END__>:
 8048f4c:	00 00                	add    %al,(%eax)
	...

Disassembly of section .gcc_except_table:

08048f50 <.gcc_except_table>:
 8048f50:	ff                   	(bad)  
 8048f51:	ff 01                	incl   (%ecx)
 8048f53:	35 45 05 99 04       	xor    $0x4990545,%eax
 8048f58:	00 91 01 b3 01 f7    	add    %dl,-0x8fe4cff(%ecx)
 8048f5e:	03 00                	add    (%eax),%eax
 8048f60:	cb                   	lret   
 8048f61:	02 19                	add    (%ecx),%bl
 8048f63:	e7 03                	out    %eax,$0x3
 8048f65:	00 f3                	add    %dh,%bl
 8048f67:	02 2d d7 03 00 a7    	add    0xa70003d7,%ch
 8048f6d:	03 05 e7 03 00 b3    	add    0xb30003e7,%eax
 8048f73:	03 05 f7 03 00 bf    	add    0xbf0003f7,%eax
 8048f79:	03 05 87 04 00 cb    	add    0xcb000487,%eax
 8048f7f:	03 05 99 04 00 9c    	add    0x9c000499,%eax
 8048f85:	04 05                	add    $0x5,%al
	...

Disassembly of section .init_array:

08049ef4 <__frame_dummy_init_array_entry>:
 8049ef4:	b0 87                	mov    $0x87,%al
 8049ef6:	04 08                	add    $0x8,%al
 8049ef8:	41                   	inc    %ecx
 8049ef9:	8a 04 08             	mov    (%eax,%ecx,1),%al

Disassembly of section .fini_array:

08049efc <__do_global_dtors_aux_fini_array_entry>:
 8049efc:	90                   	nop
 8049efd:	87 04 08             	xchg   %eax,(%eax,%ecx,1)

Disassembly of section .jcr:

08049f00 <__JCR_END__>:
 8049f00:	00 00                	add    %al,(%eax)
	...

Disassembly of section .dynamic:

08049f04 <_DYNAMIC>:
 8049f04:	01 00                	add    %eax,(%eax)
 8049f06:	00 00                	add    %al,(%eax)
 8049f08:	01 00                	add    %eax,(%eax)
 8049f0a:	00 00                	add    %al,(%eax)
 8049f0c:	01 00                	add    %eax,(%eax)
 8049f0e:	00 00                	add    %al,(%eax)
 8049f10:	46                   	inc    %esi
 8049f11:	01 00                	add    %eax,(%eax)
 8049f13:	00 01                	add    %al,(%ecx)
 8049f15:	00 00                	add    %al,(%eax)
 8049f17:	00 63 01             	add    %ah,0x1(%ebx)
 8049f1a:	00 00                	add    %al,(%eax)
 8049f1c:	0c 00                	or     $0x0,%al
 8049f1e:	00 00                	add    %al,(%eax)
 8049f20:	ec                   	in     (%dx),%al
 8049f21:	85 04 08             	test   %eax,(%eax,%ecx,1)
 8049f24:	0d 00 00 00 74       	or     $0x74000000,%eax
 8049f29:	8c 04 08             	mov    %es,(%eax,%ecx,1)
 8049f2c:	19 00                	sbb    %eax,(%eax)
 8049f2e:	00 00                	add    %al,(%eax)
 8049f30:	f4                   	hlt    
 8049f31:	9e                   	sahf   
 8049f32:	04 08                	add    $0x8,%al
 8049f34:	1b 00                	sbb    (%eax),%eax
 8049f36:	00 00                	add    %al,(%eax)
 8049f38:	08 00                	or     %al,(%eax)
 8049f3a:	00 00                	add    %al,(%eax)
 8049f3c:	1a 00                	sbb    (%eax),%al
 8049f3e:	00 00                	add    %al,(%eax)
 8049f40:	fc                   	cld    
 8049f41:	9e                   	sahf   
 8049f42:	04 08                	add    $0x8,%al
 8049f44:	1c 00                	sbb    $0x0,%al
 8049f46:	00 00                	add    %al,(%eax)
 8049f48:	04 00                	add    $0x0,%al
 8049f4a:	00 00                	add    %al,(%eax)
 8049f4c:	f5                   	cmc    
 8049f4d:	fe                   	(bad)  
 8049f4e:	ff 6f ac             	ljmp   *-0x54(%edi)
 8049f51:	81 04 08 05 00 00 00 	addl   $0x5,(%eax,%ecx,1)
 8049f58:	00 83 04 08 06 00    	add    %al,0x60804(%ebx)
 8049f5e:	00 00                	add    %al,(%eax)
 8049f60:	e0 81                	loopne 8049ee3 <__FRAME_END__+0xf97>
 8049f62:	04 08                	add    $0x8,%al
 8049f64:	0a 00                	or     (%eax),%al
 8049f66:	00 00                	add    %al,(%eax)
 8049f68:	d7                   	xlat   %ds:(%ebx)
 8049f69:	01 00                	add    %eax,(%eax)
 8049f6b:	00 0b                	add    %cl,(%ebx)
 8049f6d:	00 00                	add    %al,(%eax)
 8049f6f:	00 10                	add    %dl,(%eax)
 8049f71:	00 00                	add    %al,(%eax)
 8049f73:	00 15 00 00 00 00    	add    %dl,0x0
 8049f79:	00 00                	add    %al,(%eax)
 8049f7b:	00 03                	add    %al,(%ebx)
 8049f7d:	00 00                	add    %al,(%eax)
 8049f7f:	00 00                	add    %al,(%eax)
 8049f81:	a0 04 08 02 00       	mov    0x20804,%al
 8049f86:	00 00                	add    %al,(%eax)
 8049f88:	60                   	pusha  
 8049f89:	00 00                	add    %al,(%eax)
 8049f8b:	00 14 00             	add    %dl,(%eax,%eax,1)
 8049f8e:	00 00                	add    %al,(%eax)
 8049f90:	11 00                	adc    %eax,(%eax)
 8049f92:	00 00                	add    %al,(%eax)
 8049f94:	17                   	pop    %ss
 8049f95:	00 00                	add    %al,(%eax)
 8049f97:	00 8c 85 04 08 11 00 	add    %cl,0x110804(%ebp,%eax,4)
 8049f9e:	00 00                	add    %al,(%eax)
 8049fa0:	7c 85                	jl     8049f27 <_DYNAMIC+0x23>
 8049fa2:	04 08                	add    $0x8,%al
 8049fa4:	12 00                	adc    (%eax),%al
 8049fa6:	00 00                	add    %al,(%eax)
 8049fa8:	10 00                	adc    %al,(%eax)
 8049faa:	00 00                	add    %al,(%eax)
 8049fac:	13 00                	adc    (%eax),%eax
 8049fae:	00 00                	add    %al,(%eax)
 8049fb0:	08 00                	or     %al,(%eax)
 8049fb2:	00 00                	add    %al,(%eax)
 8049fb4:	fe                   	(bad)  
 8049fb5:	ff                   	(bad)  
 8049fb6:	ff 6f fc             	ljmp   *-0x4(%edi)
 8049fb9:	84 04 08             	test   %al,(%eax,%ecx,1)
 8049fbc:	ff                   	(bad)  
 8049fbd:	ff                   	(bad)  
 8049fbe:	ff 6f 03             	ljmp   *0x3(%edi)
 8049fc1:	00 00                	add    %al,(%eax)
 8049fc3:	00 f0                	add    %dh,%al
 8049fc5:	ff                   	(bad)  
 8049fc6:	ff 6f d8             	ljmp   *-0x28(%edi)
 8049fc9:	84 04 08             	test   %al,(%eax,%ecx,1)
	...

Disassembly of section .got:

08049ffc <.got>:
 8049ffc:	00 00                	add    %al,(%eax)
	...

Disassembly of section .got.plt:

0804a000 <_GLOBAL_OFFSET_TABLE_>:
 804a000:	04 9f                	add    $0x9f,%al
 804a002:	04 08                	add    $0x8,%al
	...
 804a00c:	26 86 04 08          	xchg   %al,%es:(%eax,%ecx,1)
 804a010:	36 86 04 08          	xchg   %al,%ss:(%eax,%ecx,1)
 804a014:	46                   	inc    %esi
 804a015:	86 04 08             	xchg   %al,(%eax,%ecx,1)
 804a018:	56                   	push   %esi
 804a019:	86 04 08             	xchg   %al,(%eax,%ecx,1)
 804a01c:	66                   	data16
 804a01d:	86 04 08             	xchg   %al,(%eax,%ecx,1)
 804a020:	76 86                	jbe    8049fa8 <_DYNAMIC+0xa4>
 804a022:	04 08                	add    $0x8,%al
 804a024:	86 86 04 08 96 86    	xchg   %al,-0x7969f7fc(%esi)
 804a02a:	04 08                	add    $0x8,%al
 804a02c:	a6                   	cmpsb  %es:(%edi),%ds:(%esi)
 804a02d:	86 04 08             	xchg   %al,(%eax,%ecx,1)
 804a030:	b6 86                	mov    $0x86,%dh
 804a032:	04 08                	add    $0x8,%al
 804a034:	c6 86 04 08 d6 86 04 	movb   $0x4,-0x7929f7fc(%esi)
 804a03b:	08                   	.byte 0x8

Disassembly of section .data:

0804a03c <__data_start>:
 804a03c:	00 00                	add    %al,(%eax)
	...

0804a040 <__dso_handle>:
 804a040:	00 00                	add    %al,(%eax)
	...

Disassembly of section .bss:

0804a060 <_ZSt4cout@@GLIBCXX_3.4>:
	...

0804a0ec <completed.6339>:
 804a0ec:	00 00                	add    %al,(%eax)
	...

0804a0f0 <_ZStL8__ioinit>:
 804a0f0:	00 00                	add    %al,(%eax)
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	47                   	inc    %edi
   1:	43                   	inc    %ebx
   2:	43                   	inc    %ebx
   3:	3a 20                	cmp    (%eax),%ah
   5:	28 55 62             	sub    %dl,0x62(%ebp)
   8:	75 6e                	jne    78 <_init-0x8048574>
   a:	74 75                	je     81 <_init-0x804856b>
   c:	2f                   	das    
   d:	4c                   	dec    %esp
   e:	69 6e 61 72 6f 20 34 	imul   $0x34206f72,0x61(%esi),%ebp
  15:	2e                   	cs
  16:	37                   	aaa    
  17:	2e 33 2d 31 75 62 75 	xor    %cs:0x75627531,%ebp
  1e:	6e                   	outsb  %ds:(%esi),(%dx)
  1f:	74 75                	je     96 <_init-0x8048556>
  21:	31 29                	xor    %ebp,(%ecx)
  23:	20 34 2e             	and    %dh,(%esi,%ebp,1)
  26:	37                   	aaa    
  27:	2e 33 00             	xor    %cs:(%eax),%eax
