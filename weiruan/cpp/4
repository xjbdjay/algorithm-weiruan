
a.out:     file format elf32-i386


Disassembly of section .interp:

08048154 <.interp>:
 8048154:	2f                   	das    
 8048155:	6c                   	insb   (%dx),%es:(%edi)
 8048156:	69 62 2f 6c 64 2d 6c 	imul   $0x6c2d646c,0x2f(%edx),%esp
 804815d:	69 6e 75 78 2e 73 6f 	imul   $0x6f732e78,0x75(%esi),%ebp
 8048164:	2e 32 00             	xor    %cs:(%eax),%al

Disassembly of section .note.ABI-tag:

08048168 <.note.ABI-tag>:
 8048168:	04 00                	add    $0x0,%al
 804816a:	00 00                	add    %al,(%eax)
 804816c:	10 00                	adc    %al,(%eax)
 804816e:	00 00                	add    %al,(%eax)
 8048170:	01 00                	add    %eax,(%eax)
 8048172:	00 00                	add    %al,(%eax)
 8048174:	47                   	inc    %edi
 8048175:	4e                   	dec    %esi
 8048176:	55                   	push   %ebp
 8048177:	00 00                	add    %al,(%eax)
 8048179:	00 00                	add    %al,(%eax)
 804817b:	00 02                	add    %al,(%edx)
 804817d:	00 00                	add    %al,(%eax)
 804817f:	00 06                	add    %al,(%esi)
 8048181:	00 00                	add    %al,(%eax)
 8048183:	00 18                	add    %bl,(%eax)
 8048185:	00 00                	add    %al,(%eax)
	...

Disassembly of section .note.gnu.build-id:

08048188 <.note.gnu.build-id>:
 8048188:	04 00                	add    $0x0,%al
 804818a:	00 00                	add    %al,(%eax)
 804818c:	14 00                	adc    $0x0,%al
 804818e:	00 00                	add    %al,(%eax)
 8048190:	03 00                	add    (%eax),%eax
 8048192:	00 00                	add    %al,(%eax)
 8048194:	47                   	inc    %edi
 8048195:	4e                   	dec    %esi
 8048196:	55                   	push   %ebp
 8048197:	00 1f                	add    %bl,(%edi)
 8048199:	04 56                	add    $0x56,%al
 804819b:	2e                   	cs
 804819c:	4b                   	dec    %ebx
 804819d:	fd                   	std    
 804819e:	fe                   	(bad)  
 804819f:	a5                   	movsl  %ds:(%esi),%es:(%edi)
 80481a0:	ba bc 3d 5f 6f       	mov    $0x6f5f3dbc,%edx
 80481a5:	96                   	xchg   %eax,%esi
 80481a6:	6b 68 cc e4          	imul   $0xffffffe4,-0x34(%eax),%ebp
 80481aa:	c3                   	ret    
 80481ab:	ce                   	into   

Disassembly of section .gnu.hash:

080481ac <.gnu.hash>:
 80481ac:	03 00                	add    (%eax),%eax
 80481ae:	00 00                	add    %al,(%eax)
 80481b0:	0c 00                	or     $0x0,%al
 80481b2:	00 00                	add    %al,(%eax)
 80481b4:	01 00                	add    %eax,(%eax)
 80481b6:	00 00                	add    %al,(%eax)
 80481b8:	05 00 00 00 01       	add    $0x1000000,%eax
 80481bd:	2b 10                	sub    (%eax),%edx
 80481bf:	21 00                	and    %eax,(%eax)
 80481c1:	00 00                	add    %al,(%eax)
 80481c3:	00 0c 00             	add    %cl,(%eax,%eax,1)
 80481c6:	00 00                	add    %al,(%eax)
 80481c8:	0e                   	push   %cs
 80481c9:	00 00                	add    %al,(%eax)
 80481cb:	00 ac 4b e3 c0 21 fd 	add    %ch,-0x2de3f1d(%ebx,%ecx,2)
 80481d2:	f4                   	hlt    
 80481d3:	09 28                	or     %ebp,(%eax)
 80481d5:	45                   	inc    %ebp
 80481d6:	d5 4c                	aad    $0x4c
 80481d8:	14 98                	adc    $0x98,%al
 80481da:	0c 43                	or     $0x43,%al
 80481dc:	79 49                	jns    8048227 <_init-0x3a5>
 80481de:	6b                   	.byte 0x6b
 80481df:	b6                   	.byte 0xb6

Disassembly of section .dynsym:

080481e0 <.dynsym>:
	...
 80481f0:	ae                   	scas   %es:(%edi),%al
	...
 80481f9:	00 00                	add    %al,(%eax)
 80481fb:	00 12                	add    %dl,(%edx)
 80481fd:	00 00                	add    %al,(%eax)
 80481ff:	00 7c 01 00          	add    %bh,0x0(%ecx,%eax,1)
	...
 804820b:	00 12                	add    %dl,(%edx)
 804820d:	00 00                	add    %al,(%eax)
 804820f:	00 10                	add    %dl,(%eax)
	...
 8048219:	00 00                	add    %al,(%eax)
 804821b:	00 20                	add    %ah,(%eax)
 804821d:	00 00                	add    %al,(%eax)
 804821f:	00 1f                	add    %bl,(%edi)
	...
 8048229:	00 00                	add    %al,(%eax)
 804822b:	00 20                	add    %ah,(%eax)
 804822d:	00 00                	add    %al,(%eax)
 804822f:	00 f0                	add    %dh,%al
	...
 8048239:	00 00                	add    %al,(%eax)
 804823b:	00 12                	add    %dl,(%edx)
 804823d:	00 00                	add    %al,(%eax)
 804823f:	00 89 01 00 00 00    	add    %cl,0x1(%ecx)
 8048245:	00 00                	add    %al,(%eax)
 8048247:	00 00                	add    %al,(%eax)
 8048249:	00 00                	add    %al,(%eax)
 804824b:	00 12                	add    %dl,(%edx)
 804824d:	00 00                	add    %al,(%eax)
 804824f:	00 33                	add    %dh,(%ebx)
	...
 8048259:	00 00                	add    %al,(%eax)
 804825b:	00 20                	add    %ah,(%eax)
 804825d:	00 00                	add    %al,(%eax)
 804825f:	00 b8 00 00 00 00    	add    %bh,0x0(%eax)
 8048265:	00 00                	add    %al,(%eax)
 8048267:	00 00                	add    %al,(%eax)
 8048269:	00 00                	add    %al,(%eax)
 804826b:	00 12                	add    %dl,(%edx)
 804826d:	00 00                	add    %al,(%eax)
 804826f:	00 4f 00             	add    %cl,0x0(%edi)
	...
 804827a:	00 00                	add    %al,(%eax)
 804827c:	20 00                	and    %al,(%eax)
 804827e:	00 00                	add    %al,(%eax)
 8048280:	20 01                	and    %al,(%ecx)
	...
 804828a:	00 00                	add    %al,(%eax)
 804828c:	12 00                	adc    (%eax),%al
 804828e:	00 00                	add    %al,(%eax)
 8048290:	54                   	push   %esp
 8048291:	01 00                	add    %eax,(%eax)
	...
 804829b:	00 12                	add    %dl,(%edx)
 804829d:	00 00                	add    %al,(%eax)
 804829f:	00 6d 01             	add    %ch,0x1(%ebp)
 80482a2:	00 00                	add    %al,(%eax)
 80482a4:	3c 8a                	cmp    $0x8a,%al
 80482a6:	04 08                	add    $0x8,%al
 80482a8:	04 00                	add    $0x0,%al
 80482aa:	00 00                	add    %al,(%eax)
 80482ac:	11 00                	adc    %eax,(%eax)
 80482ae:	0f 00 69 00          	verw   0x0(%ecx)
 80482b2:	00 00                	add    %al,(%eax)
 80482b4:	80 86 04 08 00 00 00 	addb   $0x0,0x804(%esi)
 80482bb:	00 12                	add    %dl,(%edx)
 80482bd:	00 00                	add    %al,(%eax)
 80482bf:	00 08                	add    %cl,(%eax)
 80482c1:	01 00                	add    %eax,(%eax)
 80482c3:	00 50 86             	add    %dl,-0x7a(%eax)
 80482c6:	04 08                	add    $0x8,%al
 80482c8:	00 00                	add    %al,(%eax)
 80482ca:	00 00                	add    %al,(%eax)
 80482cc:	12 00                	adc    (%eax),%al
 80482ce:	00 00                	add    %al,(%eax)
 80482d0:	a4                   	movsb  %ds:(%esi),%es:(%edi)
 80482d1:	00 00                	add    %al,(%eax)
 80482d3:	00 40 a0             	add    %al,-0x60(%eax)
 80482d6:	04 08                	add    $0x8,%al
 80482d8:	8c 00                	mov    %es,(%eax)
 80482da:	00 00                	add    %al,(%eax)
 80482dc:	11 00                	adc    %eax,(%eax)
 80482de:	1a 00                	sbb    (%eax),%al
 80482e0:	31 01                	xor    %eax,(%ecx)
 80482e2:	00 00                	add    %al,(%eax)
 80482e4:	90                   	nop
 80482e5:	86 04 08             	xchg   %al,(%eax,%ecx,1)
 80482e8:	00 00                	add    %al,(%eax)
 80482ea:	00 00                	add    %al,(%eax)
 80482ec:	12 00                	adc    (%eax),%al
	...

Disassembly of section .dynstr:

080482f0 <.dynstr>:
 80482f0:	00 6c 69 62          	add    %ch,0x62(%ecx,%ebp,2)
 80482f4:	73 74                	jae    804836a <_init-0x262>
 80482f6:	64 63 2b             	arpl   %bp,%fs:(%ebx)
 80482f9:	2b 2e                	sub    (%esi),%ebp
 80482fb:	73 6f                	jae    804836c <_init-0x260>
 80482fd:	2e 36 00 5f 5f       	cs add %bl,%cs:%ss:0x5f(%edi)
 8048302:	67 6d                	insl   (%dx),%es:(%di)
 8048304:	6f                   	outsl  %ds:(%esi),(%dx)
 8048305:	6e                   	outsb  %ds:(%esi),(%dx)
 8048306:	5f                   	pop    %edi
 8048307:	73 74                	jae    804837d <_init-0x24f>
 8048309:	61                   	popa   
 804830a:	72 74                	jb     8048380 <_init-0x24c>
 804830c:	5f                   	pop    %edi
 804830d:	5f                   	pop    %edi
 804830e:	00 5f 4a             	add    %bl,0x4a(%edi)
 8048311:	76 5f                	jbe    8048372 <_init-0x25a>
 8048313:	52                   	push   %edx
 8048314:	65 67 69 73 74 65 72 	imul   $0x6c437265,%gs:0x74(%bp,%di),%esi
 804831b:	43 6c 
 804831d:	61                   	popa   
 804831e:	73 73                	jae    8048393 <_init-0x239>
 8048320:	65                   	gs
 8048321:	73 00                	jae    8048323 <_init-0x2a9>
 8048323:	5f                   	pop    %edi
 8048324:	49                   	dec    %ecx
 8048325:	54                   	push   %esp
 8048326:	4d                   	dec    %ebp
 8048327:	5f                   	pop    %edi
 8048328:	64                   	fs
 8048329:	65                   	gs
 804832a:	72 65                	jb     8048391 <_init-0x23b>
 804832c:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%bp,%di),%esi
 8048333:	4d 
 8048334:	43                   	inc    %ebx
 8048335:	6c                   	insb   (%dx),%es:(%edi)
 8048336:	6f                   	outsl  %ds:(%esi),(%dx)
 8048337:	6e                   	outsb  %ds:(%esi),(%dx)
 8048338:	65                   	gs
 8048339:	54                   	push   %esp
 804833a:	61                   	popa   
 804833b:	62 6c 65 00          	bound  %ebp,0x0(%ebp,%eiz,2)
 804833f:	5f                   	pop    %edi
 8048340:	49                   	dec    %ecx
 8048341:	54                   	push   %esp
 8048342:	4d                   	dec    %ebp
 8048343:	5f                   	pop    %edi
 8048344:	72 65                	jb     80483ab <_init-0x221>
 8048346:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%bp,%di),%esi
 804834d:	4d 
 804834e:	43                   	inc    %ebx
 804834f:	6c                   	insb   (%dx),%es:(%edi)
 8048350:	6f                   	outsl  %ds:(%esi),(%dx)
 8048351:	6e                   	outsb  %ds:(%esi),(%dx)
 8048352:	65                   	gs
 8048353:	54                   	push   %esp
 8048354:	61                   	popa   
 8048355:	62 6c 65 00          	bound  %ebp,0x0(%ebp,%eiz,2)
 8048359:	5f                   	pop    %edi
 804835a:	5a                   	pop    %edx
 804835b:	53                   	push   %ebx
 804835c:	74 34                	je     8048392 <_init-0x23a>
 804835e:	65 6e                	outsb  %gs:(%esi),(%dx)
 8048360:	64                   	fs
 8048361:	6c                   	insb   (%dx),%es:(%edi)
 8048362:	49                   	dec    %ecx
 8048363:	63 53 74             	arpl   %dx,0x74(%ebx)
 8048366:	31 31                	xor    %esi,(%ecx)
 8048368:	63 68 61             	arpl   %bp,0x61(%eax)
 804836b:	72 5f                	jb     80483cc <_init-0x200>
 804836d:	74 72                	je     80483e1 <_init-0x1eb>
 804836f:	61                   	popa   
 8048370:	69 74 73 49 63 45 45 	imul   $0x52454563,0x49(%ebx,%esi,2),%esi
 8048377:	52 
 8048378:	53                   	push   %ebx
 8048379:	74 31                	je     80483ac <_init-0x220>
 804837b:	33 62 61             	xor    0x61(%edx),%esp
 804837e:	73 69                	jae    80483e9 <_init-0x1e3>
 8048380:	63 5f 6f             	arpl   %bx,0x6f(%edi)
 8048383:	73 74                	jae    80483f9 <_init-0x1d3>
 8048385:	72 65                	jb     80483ec <_init-0x1e0>
 8048387:	61                   	popa   
 8048388:	6d                   	insl   (%dx),%es:(%edi)
 8048389:	49                   	dec    %ecx
 804838a:	54                   	push   %esp
 804838b:	5f                   	pop    %edi
 804838c:	54                   	push   %esp
 804838d:	30 5f 45             	xor    %bl,0x45(%edi)
 8048390:	53                   	push   %ebx
 8048391:	36                   	ss
 8048392:	5f                   	pop    %edi
 8048393:	00 5f 5a             	add    %bl,0x5a(%edi)
 8048396:	53                   	push   %ebx
 8048397:	74 34                	je     80483cd <_init-0x1ff>
 8048399:	63 6f 75             	arpl   %bp,0x75(%edi)
 804839c:	74 00                	je     804839e <_init-0x22e>
 804839e:	5f                   	pop    %edi
 804839f:	5a                   	pop    %edx
 80483a0:	4e                   	dec    %esi
 80483a1:	53                   	push   %ebx
 80483a2:	6f                   	outsl  %ds:(%esi),(%dx)
 80483a3:	6c                   	insb   (%dx),%es:(%edi)
 80483a4:	73 45                	jae    80483eb <_init-0x1e1>
 80483a6:	69 00 5f 5a 53 74    	imul   $0x74535a5f,(%eax),%eax
 80483ac:	6c                   	insb   (%dx),%es:(%edi)
 80483ad:	73 49                	jae    80483f8 <_init-0x1d4>
 80483af:	53                   	push   %ebx
 80483b0:	74 31                	je     80483e3 <_init-0x1e9>
 80483b2:	31 63 68             	xor    %esp,0x68(%ebx)
 80483b5:	61                   	popa   
 80483b6:	72 5f                	jb     8048417 <_init-0x1b5>
 80483b8:	74 72                	je     804842c <_init-0x1a0>
 80483ba:	61                   	popa   
 80483bb:	69 74 73 49 63 45 45 	imul   $0x52454563,0x49(%ebx,%esi,2),%esi
 80483c2:	52 
 80483c3:	53                   	push   %ebx
 80483c4:	74 31                	je     80483f7 <_init-0x1d5>
 80483c6:	33 62 61             	xor    0x61(%edx),%esp
 80483c9:	73 69                	jae    8048434 <_init-0x198>
 80483cb:	63 5f 6f             	arpl   %bx,0x6f(%edi)
 80483ce:	73 74                	jae    8048444 <_init-0x188>
 80483d0:	72 65                	jb     8048437 <_init-0x195>
 80483d2:	61                   	popa   
 80483d3:	6d                   	insl   (%dx),%es:(%edi)
 80483d4:	49                   	dec    %ecx
 80483d5:	63 54 5f 45          	arpl   %dx,0x45(%edi,%ebx,2)
 80483d9:	53                   	push   %ebx
 80483da:	35 5f 50 4b 63       	xor    $0x634b505f,%eax
 80483df:	00 5f 5a             	add    %bl,0x5a(%edi)
 80483e2:	4e                   	dec    %esi
 80483e3:	53                   	push   %ebx
 80483e4:	74 38                	je     804841e <_init-0x1ae>
 80483e6:	69 6f 73 5f 62 61 73 	imul   $0x7361625f,0x73(%edi),%ebp
 80483ed:	65                   	gs
 80483ee:	34 49                	xor    $0x49,%al
 80483f0:	6e                   	outsb  %ds:(%esi),(%dx)
 80483f1:	69 74 43 31 45 76 00 	imul   $0x5f007645,0x31(%ebx,%eax,2),%esi
 80483f8:	5f 
 80483f9:	5a                   	pop    %edx
 80483fa:	4e                   	dec    %esi
 80483fb:	53                   	push   %ebx
 80483fc:	74 38                	je     8048436 <_init-0x196>
 80483fe:	69 6f 73 5f 62 61 73 	imul   $0x7361625f,0x73(%edi),%ebp
 8048405:	65                   	gs
 8048406:	34 49                	xor    $0x49,%al
 8048408:	6e                   	outsb  %ds:(%esi),(%dx)
 8048409:	69 74 44 31 45 76 00 	imul   $0x5f007645,0x31(%esp,%eax,2),%esi
 8048410:	5f 
 8048411:	5a                   	pop    %edx
 8048412:	4e                   	dec    %esi
 8048413:	53                   	push   %ebx
 8048414:	6f                   	outsl  %ds:(%esi),(%dx)
 8048415:	6c                   	insb   (%dx),%es:(%edi)
 8048416:	73 45                	jae    804845d <_init-0x16f>
 8048418:	50                   	push   %eax
 8048419:	46                   	inc    %esi
 804841a:	52                   	push   %edx
 804841b:	53                   	push   %ebx
 804841c:	6f                   	outsl  %ds:(%esi),(%dx)
 804841d:	53                   	push   %ebx
 804841e:	5f                   	pop    %edi
 804841f:	45                   	inc    %ebp
 8048420:	00 5f 5f             	add    %bl,0x5f(%edi)
 8048423:	67 78 78             	addr16 js 804849e <_init-0x12e>
 8048426:	5f                   	pop    %edi
 8048427:	70 65                	jo     804848e <_init-0x13e>
 8048429:	72 73                	jb     804849e <_init-0x12e>
 804842b:	6f                   	outsl  %ds:(%esi),(%dx)
 804842c:	6e                   	outsb  %ds:(%esi),(%dx)
 804842d:	61                   	popa   
 804842e:	6c                   	insb   (%dx),%es:(%edi)
 804842f:	69 74 79 5f 76 30 00 	imul   $0x6c003076,0x5f(%ecx,%edi,2),%esi
 8048436:	6c 
 8048437:	69 62 67 63 63 5f 73 	imul   $0x735f6363,0x67(%edx),%esp
 804843e:	2e 73 6f             	jae,pn 80484b0 <_init-0x11c>
 8048441:	2e 31 00             	xor    %eax,%cs:(%eax)
 8048444:	5f                   	pop    %edi
 8048445:	55                   	push   %ebp
 8048446:	6e                   	outsb  %ds:(%esi),(%dx)
 8048447:	77 69                	ja     80484b2 <_init-0x11a>
 8048449:	6e                   	outsb  %ds:(%esi),(%dx)
 804844a:	64                   	fs
 804844b:	5f                   	pop    %edi
 804844c:	52                   	push   %edx
 804844d:	65                   	gs
 804844e:	73 75                	jae    80484c5 <_init-0x107>
 8048450:	6d                   	insl   (%dx),%es:(%edi)
 8048451:	65 00 6c 69 62       	add    %ch,%gs:0x62(%ecx,%ebp,2)
 8048456:	63 2e                	arpl   %bp,(%esi)
 8048458:	73 6f                	jae    80484c9 <_init-0x103>
 804845a:	2e 36 00 5f 49       	cs add %bl,%cs:%ss:0x49(%edi)
 804845f:	4f                   	dec    %edi
 8048460:	5f                   	pop    %edi
 8048461:	73 74                	jae    80484d7 <_init-0xf5>
 8048463:	64 69 6e 5f 75 73 65 	imul   $0x64657375,%fs:0x5f(%esi),%ebp
 804846a:	64 
 804846b:	00 5f 5f             	add    %bl,0x5f(%edi)
 804846e:	63 78 61             	arpl   %di,0x61(%eax)
 8048471:	5f                   	pop    %edi
 8048472:	61                   	popa   
 8048473:	74 65                	je     80484da <_init-0xf2>
 8048475:	78 69                	js     80484e0 <_init-0xec>
 8048477:	74 00                	je     8048479 <_init-0x153>
 8048479:	5f                   	pop    %edi
 804847a:	5f                   	pop    %edi
 804847b:	6c                   	insb   (%dx),%es:(%edi)
 804847c:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%edx),%esp
 8048483:	72 74                	jb     80484f9 <_init-0xd3>
 8048485:	5f                   	pop    %edi
 8048486:	6d                   	insl   (%dx),%es:(%edi)
 8048487:	61                   	popa   
 8048488:	69 6e 00 47 43 43 5f 	imul   $0x5f434347,0x0(%esi),%ebp
 804848f:	33 2e                	xor    (%esi),%ebp
 8048491:	30 00                	xor    %al,(%eax)
 8048493:	47                   	inc    %edi
 8048494:	4c                   	dec    %esp
 8048495:	49                   	dec    %ecx
 8048496:	42                   	inc    %edx
 8048497:	43                   	inc    %ebx
 8048498:	5f                   	pop    %edi
 8048499:	32 2e                	xor    (%esi),%ch
 804849b:	30 00                	xor    %al,(%eax)
 804849d:	47                   	inc    %edi
 804849e:	4c                   	dec    %esp
 804849f:	49                   	dec    %ecx
 80484a0:	42                   	inc    %edx
 80484a1:	43                   	inc    %ebx
 80484a2:	5f                   	pop    %edi
 80484a3:	32 2e                	xor    (%esi),%ch
 80484a5:	31 2e                	xor    %ebp,(%esi)
 80484a7:	33 00                	xor    (%eax),%eax
 80484a9:	43                   	inc    %ebx
 80484aa:	58                   	pop    %eax
 80484ab:	58                   	pop    %eax
 80484ac:	41                   	inc    %ecx
 80484ad:	42                   	inc    %edx
 80484ae:	49                   	dec    %ecx
 80484af:	5f                   	pop    %edi
 80484b0:	31 2e                	xor    %ebp,(%esi)
 80484b2:	33 00                	xor    (%eax),%eax
 80484b4:	47                   	inc    %edi
 80484b5:	4c                   	dec    %esp
 80484b6:	49                   	dec    %ecx
 80484b7:	42                   	inc    %edx
 80484b8:	43                   	inc    %ebx
 80484b9:	58                   	pop    %eax
 80484ba:	58                   	pop    %eax
 80484bb:	5f                   	pop    %edi
 80484bc:	33 2e                	xor    (%esi),%ebp
 80484be:	34 00                	xor    $0x0,%al

Disassembly of section .gnu.version:

080484c0 <.gnu.version>:
 80484c0:	00 00                	add    %al,(%eax)
 80484c2:	02 00                	add    (%eax),%al
 80484c4:	03 00                	add    (%eax),%eax
 80484c6:	00 00                	add    %al,(%eax)
 80484c8:	00 00                	add    %al,(%eax)
 80484ca:	02 00                	add    (%eax),%al
 80484cc:	04 00                	add    $0x0,%al
 80484ce:	00 00                	add    %al,(%eax)
 80484d0:	02 00                	add    (%eax),%al
 80484d2:	00 00                	add    %al,(%eax)
 80484d4:	02 00                	add    (%eax),%al
 80484d6:	06                   	push   %es
 80484d7:	00 01                	add    %al,(%ecx)
 80484d9:	00 02                	add    %al,(%edx)
 80484db:	00 02                	add    %al,(%edx)
 80484dd:	00 02                	add    %al,(%edx)
 80484df:	00                   	.byte 0x0
 80484e0:	05                   	.byte 0x5
	...

Disassembly of section .gnu.version_r:

080484e4 <.gnu.version_r>:
 80484e4:	01 00                	add    %eax,(%eax)
 80484e6:	01 00                	add    %eax,(%eax)
 80484e8:	46                   	inc    %esi
 80484e9:	01 00                	add    %eax,(%eax)
 80484eb:	00 10                	add    %dl,(%eax)
 80484ed:	00 00                	add    %al,(%eax)
 80484ef:	00 20                	add    %ah,(%eax)
 80484f1:	00 00                	add    %al,(%eax)
 80484f3:	00 50 26             	add    %dl,0x26(%eax)
 80484f6:	79 0b                	jns    8048503 <_init-0xc9>
 80484f8:	00 00                	add    %al,(%eax)
 80484fa:	06                   	push   %es
 80484fb:	00 9b 01 00 00 00    	add    %bl,0x1(%ebx)
 8048501:	00 00                	add    %al,(%eax)
 8048503:	00 01                	add    %al,(%ecx)
 8048505:	00 02                	add    %al,(%edx)
 8048507:	00 63 01             	add    %ah,0x1(%ebx)
 804850a:	00 00                	add    %al,(%eax)
 804850c:	10 00                	adc    %al,(%eax)
 804850e:	00 00                	add    %al,(%eax)
 8048510:	30 00                	xor    %al,(%eax)
 8048512:	00 00                	add    %al,(%eax)
 8048514:	10 69 69             	adc    %ch,0x69(%ecx)
 8048517:	0d 00 00 04 00       	or     $0x40000,%eax
 804851c:	a3 01 00 00 10       	mov    %eax,0x10000001
 8048521:	00 00                	add    %al,(%eax)
 8048523:	00 73 1f             	add    %dh,0x1f(%ebx)
 8048526:	69 09 00 00 03 00    	imul   $0x30000,(%ecx),%ecx
 804852c:	ad                   	lods   %ds:(%esi),%eax
 804852d:	01 00                	add    %eax,(%eax)
 804852f:	00 00                	add    %al,(%eax)
 8048531:	00 00                	add    %al,(%eax)
 8048533:	00 01                	add    %al,(%ecx)
 8048535:	00 02                	add    %al,(%edx)
 8048537:	00 01                	add    %al,(%ecx)
 8048539:	00 00                	add    %al,(%eax)
 804853b:	00 10                	add    %dl,(%eax)
 804853d:	00 00                	add    %al,(%eax)
 804853f:	00 00                	add    %al,(%eax)
 8048541:	00 00                	add    %al,(%eax)
 8048543:	00 d3                	add    %dl,%bl
 8048545:	af                   	scas   %es:(%edi),%eax
 8048546:	6b 05 00 00 05 00 b9 	imul   $0xffffffb9,0x50000,%eax
 804854d:	01 00                	add    %eax,(%eax)
 804854f:	00 10                	add    %dl,(%eax)
 8048551:	00 00                	add    %al,(%eax)
 8048553:	00 74 29 92          	add    %dh,-0x6e(%ecx,%ebp,1)
 8048557:	08 00                	or     %al,(%eax)
 8048559:	00 02                	add    %al,(%edx)
 804855b:	00 c4                	add    %al,%ah
 804855d:	01 00                	add    %eax,(%eax)
 804855f:	00 00                	add    %al,(%eax)
 8048561:	00 00                	add    %al,(%eax)
	...

Disassembly of section .rel.dyn:

08048564 <.rel.dyn>:
 8048564:	fc                   	cld    
 8048565:	9f                   	lahf   
 8048566:	04 08                	add    $0x8,%al
 8048568:	06                   	push   %es
 8048569:	03 00                	add    (%eax),%eax
 804856b:	00 40 a0             	add    %al,-0x60(%eax)
 804856e:	04 08                	add    $0x8,%al
 8048570:	05                   	.byte 0x5
 8048571:	0f 00 00             	sldt   (%eax)

Disassembly of section .rel.plt:

08048574 <.rel.plt>:
 8048574:	0c a0                	or     $0xa0,%al
 8048576:	04 08                	add    $0x8,%al
 8048578:	07                   	pop    %es
 8048579:	01 00                	add    %eax,(%eax)
 804857b:	00 10                	add    %dl,(%eax)
 804857d:	a0 04 08 07 02       	mov    0x2070804,%al
 8048582:	00 00                	add    %al,(%eax)
 8048584:	14 a0                	adc    $0xa0,%al
 8048586:	04 08                	add    $0x8,%al
 8048588:	07                   	pop    %es
 8048589:	03 00                	add    (%eax),%eax
 804858b:	00 18                	add    %bl,(%eax)
 804858d:	a0 04 08 07 05       	mov    0x5070804,%al
 8048592:	00 00                	add    %al,(%eax)
 8048594:	1c a0                	sbb    $0xa0,%al
 8048596:	04 08                	add    $0x8,%al
 8048598:	07                   	pop    %es
 8048599:	06                   	push   %es
 804859a:	00 00                	add    %al,(%eax)
 804859c:	20 a0 04 08 07 0e    	and    %ah,0xe070804(%eax)
 80485a2:	00 00                	add    %al,(%eax)
 80485a4:	24 a0                	and    $0xa0,%al
 80485a6:	04 08                	add    $0x8,%al
 80485a8:	07                   	pop    %es
 80485a9:	08 00                	or     %al,(%eax)
 80485ab:	00 28                	add    %ch,(%eax)
 80485ad:	a0 04 08 07 0a       	mov    0xa070804,%al
 80485b2:	00 00                	add    %al,(%eax)
 80485b4:	2c a0                	sub    $0xa0,%al
 80485b6:	04 08                	add    $0x8,%al
 80485b8:	07                   	pop    %es
 80485b9:	0d 00 00 30 a0       	or     $0xa0300000,%eax
 80485be:	04 08                	add    $0x8,%al
 80485c0:	07                   	pop    %es
 80485c1:	10 00                	adc    %al,(%eax)
 80485c3:	00 34 a0             	add    %dh,(%eax,%eiz,4)
 80485c6:	04 08                	add    $0x8,%al
 80485c8:	07                   	pop    %es
 80485c9:	0b 00                	or     (%eax),%eax
	...

Disassembly of section .init:

080485cc <_init>:
 80485cc:	53                   	push   %ebx
 80485cd:	83 ec 08             	sub    $0x8,%esp
 80485d0:	e8 0b 01 00 00       	call   80486e0 <__x86.get_pc_thunk.bx>
 80485d5:	81 c3 2b 1a 00 00    	add    $0x1a2b,%ebx
 80485db:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 80485e1:	85 c0                	test   %eax,%eax
 80485e3:	74 05                	je     80485ea <_init+0x1e>
 80485e5:	e8 36 00 00 00       	call   8048620 <__gmon_start__@plt>
 80485ea:	83 c4 08             	add    $0x8,%esp
 80485ed:	5b                   	pop    %ebx
 80485ee:	c3                   	ret    

Disassembly of section .plt:

080485f0 <_ZNSolsEi@plt-0x10>:
 80485f0:	ff 35 04 a0 04 08    	pushl  0x804a004
 80485f6:	ff 25 08 a0 04 08    	jmp    *0x804a008
 80485fc:	00 00                	add    %al,(%eax)
	...

08048600 <_ZNSolsEi@plt>:
 8048600:	ff 25 0c a0 04 08    	jmp    *0x804a00c
 8048606:	68 00 00 00 00       	push   $0x0
 804860b:	e9 e0 ff ff ff       	jmp    80485f0 <_init+0x24>

08048610 <__cxa_atexit@plt>:
 8048610:	ff 25 10 a0 04 08    	jmp    *0x804a010
 8048616:	68 08 00 00 00       	push   $0x8
 804861b:	e9 d0 ff ff ff       	jmp    80485f0 <_init+0x24>

08048620 <__gmon_start__@plt>:
 8048620:	ff 25 14 a0 04 08    	jmp    *0x804a014
 8048626:	68 10 00 00 00       	push   $0x10
 804862b:	e9 c0 ff ff ff       	jmp    80485f0 <_init+0x24>

08048630 <_ZNSt8ios_base4InitC1Ev@plt>:
 8048630:	ff 25 18 a0 04 08    	jmp    *0x804a018
 8048636:	68 18 00 00 00       	push   $0x18
 804863b:	e9 b0 ff ff ff       	jmp    80485f0 <_init+0x24>

08048640 <__libc_start_main@plt>:
 8048640:	ff 25 1c a0 04 08    	jmp    *0x804a01c
 8048646:	68 20 00 00 00       	push   $0x20
 804864b:	e9 a0 ff ff ff       	jmp    80485f0 <_init+0x24>

08048650 <_ZNSt8ios_base4InitD1Ev@plt>:
 8048650:	ff 25 20 a0 04 08    	jmp    *0x804a020
 8048656:	68 28 00 00 00       	push   $0x28
 804865b:	e9 90 ff ff ff       	jmp    80485f0 <_init+0x24>

08048660 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>:
 8048660:	ff 25 24 a0 04 08    	jmp    *0x804a024
 8048666:	68 30 00 00 00       	push   $0x30
 804866b:	e9 80 ff ff ff       	jmp    80485f0 <_init+0x24>

08048670 <_ZNSolsEPFRSoS_E@plt>:
 8048670:	ff 25 28 a0 04 08    	jmp    *0x804a028
 8048676:	68 38 00 00 00       	push   $0x38
 804867b:	e9 70 ff ff ff       	jmp    80485f0 <_init+0x24>

08048680 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@plt>:
 8048680:	ff 25 2c a0 04 08    	jmp    *0x804a02c
 8048686:	68 40 00 00 00       	push   $0x40
 804868b:	e9 60 ff ff ff       	jmp    80485f0 <_init+0x24>

08048690 <__gxx_personality_v0@plt>:
 8048690:	ff 25 30 a0 04 08    	jmp    *0x804a030
 8048696:	68 48 00 00 00       	push   $0x48
 804869b:	e9 50 ff ff ff       	jmp    80485f0 <_init+0x24>

080486a0 <_Unwind_Resume@plt>:
 80486a0:	ff 25 34 a0 04 08    	jmp    *0x804a034
 80486a6:	68 50 00 00 00       	push   $0x50
 80486ab:	e9 40 ff ff ff       	jmp    80485f0 <_init+0x24>

Disassembly of section .text:

080486b0 <_start>:
 80486b0:	31 ed                	xor    %ebp,%ebp
 80486b2:	5e                   	pop    %esi
 80486b3:	89 e1                	mov    %esp,%ecx
 80486b5:	83 e4 f0             	and    $0xfffffff0,%esp
 80486b8:	50                   	push   %eax
 80486b9:	54                   	push   %esp
 80486ba:	52                   	push   %edx
 80486bb:	68 20 8a 04 08       	push   $0x8048a20
 80486c0:	68 b0 89 04 08       	push   $0x80489b0
 80486c5:	51                   	push   %ecx
 80486c6:	56                   	push   %esi
 80486c7:	68 ac 87 04 08       	push   $0x80487ac
 80486cc:	e8 6f ff ff ff       	call   8048640 <__libc_start_main@plt>
 80486d1:	f4                   	hlt    
 80486d2:	66 90                	xchg   %ax,%ax
 80486d4:	66 90                	xchg   %ax,%ax
 80486d6:	66 90                	xchg   %ax,%ax
 80486d8:	66 90                	xchg   %ax,%ax
 80486da:	66 90                	xchg   %ax,%ax
 80486dc:	66 90                	xchg   %ax,%ax
 80486de:	66 90                	xchg   %ax,%ax

080486e0 <__x86.get_pc_thunk.bx>:
 80486e0:	8b 1c 24             	mov    (%esp),%ebx
 80486e3:	c3                   	ret    
 80486e4:	66 90                	xchg   %ax,%ax
 80486e6:	66 90                	xchg   %ax,%ax
 80486e8:	66 90                	xchg   %ax,%ax
 80486ea:	66 90                	xchg   %ax,%ax
 80486ec:	66 90                	xchg   %ax,%ax
 80486ee:	66 90                	xchg   %ax,%ax

080486f0 <deregister_tm_clones>:
 80486f0:	b8 43 a0 04 08       	mov    $0x804a043,%eax
 80486f5:	2d 40 a0 04 08       	sub    $0x804a040,%eax
 80486fa:	83 f8 06             	cmp    $0x6,%eax
 80486fd:	77 02                	ja     8048701 <deregister_tm_clones+0x11>
 80486ff:	f3 c3                	repz ret 
 8048701:	b8 00 00 00 00       	mov    $0x0,%eax
 8048706:	85 c0                	test   %eax,%eax
 8048708:	74 f5                	je     80486ff <deregister_tm_clones+0xf>
 804870a:	55                   	push   %ebp
 804870b:	89 e5                	mov    %esp,%ebp
 804870d:	83 ec 18             	sub    $0x18,%esp
 8048710:	c7 04 24 40 a0 04 08 	movl   $0x804a040,(%esp)
 8048717:	ff d0                	call   *%eax
 8048719:	c9                   	leave  
 804871a:	c3                   	ret    
 804871b:	90                   	nop
 804871c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

08048720 <register_tm_clones>:
 8048720:	b8 40 a0 04 08       	mov    $0x804a040,%eax
 8048725:	2d 40 a0 04 08       	sub    $0x804a040,%eax
 804872a:	c1 f8 02             	sar    $0x2,%eax
 804872d:	89 c2                	mov    %eax,%edx
 804872f:	c1 ea 1f             	shr    $0x1f,%edx
 8048732:	01 d0                	add    %edx,%eax
 8048734:	d1 f8                	sar    %eax
 8048736:	75 02                	jne    804873a <register_tm_clones+0x1a>
 8048738:	f3 c3                	repz ret 
 804873a:	ba 00 00 00 00       	mov    $0x0,%edx
 804873f:	85 d2                	test   %edx,%edx
 8048741:	74 f5                	je     8048738 <register_tm_clones+0x18>
 8048743:	55                   	push   %ebp
 8048744:	89 e5                	mov    %esp,%ebp
 8048746:	83 ec 18             	sub    $0x18,%esp
 8048749:	89 44 24 04          	mov    %eax,0x4(%esp)
 804874d:	c7 04 24 40 a0 04 08 	movl   $0x804a040,(%esp)
 8048754:	ff d2                	call   *%edx
 8048756:	c9                   	leave  
 8048757:	c3                   	ret    
 8048758:	90                   	nop
 8048759:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

08048760 <__do_global_dtors_aux>:
 8048760:	80 3d cc a0 04 08 00 	cmpb   $0x0,0x804a0cc
 8048767:	75 13                	jne    804877c <__do_global_dtors_aux+0x1c>
 8048769:	55                   	push   %ebp
 804876a:	89 e5                	mov    %esp,%ebp
 804876c:	83 ec 08             	sub    $0x8,%esp
 804876f:	e8 7c ff ff ff       	call   80486f0 <deregister_tm_clones>
 8048774:	c6 05 cc a0 04 08 01 	movb   $0x1,0x804a0cc
 804877b:	c9                   	leave  
 804877c:	f3 c3                	repz ret 
 804877e:	66 90                	xchg   %ax,%ax

08048780 <frame_dummy>:
 8048780:	a1 00 9f 04 08       	mov    0x8049f00,%eax
 8048785:	85 c0                	test   %eax,%eax
 8048787:	74 1e                	je     80487a7 <frame_dummy+0x27>
 8048789:	b8 00 00 00 00       	mov    $0x0,%eax
 804878e:	85 c0                	test   %eax,%eax
 8048790:	74 15                	je     80487a7 <frame_dummy+0x27>
 8048792:	55                   	push   %ebp
 8048793:	89 e5                	mov    %esp,%ebp
 8048795:	83 ec 18             	sub    $0x18,%esp
 8048798:	c7 04 24 00 9f 04 08 	movl   $0x8049f00,(%esp)
 804879f:	ff d0                	call   *%eax
 80487a1:	c9                   	leave  
 80487a2:	e9 79 ff ff ff       	jmp    8048720 <register_tm_clones>
 80487a7:	e9 74 ff ff ff       	jmp    8048720 <register_tm_clones>

080487ac <main>:
 80487ac:	55                   	push   %ebp
 80487ad:	89 e5                	mov    %esp,%ebp
 80487af:	53                   	push   %ebx
 80487b0:	83 e4 f0             	and    $0xfffffff0,%esp
 80487b3:	83 ec 40             	sub    $0x40,%esp
 80487b6:	c7 44 24 14 0a 00 00 	movl   $0xa,0x14(%esp)
 80487bd:	00 
 80487be:	8d 44 24 14          	lea    0x14(%esp),%eax
 80487c2:	89 44 24 18          	mov    %eax,0x18(%esp)
 80487c6:	8b 44 24 18          	mov    0x18(%esp),%eax
 80487ca:	89 44 24 1c          	mov    %eax,0x1c(%esp)
 80487ce:	8b 44 24 1c          	mov    0x1c(%esp),%eax
 80487d2:	c7 00 05 00 00 00    	movl   $0x5,(%eax)
 80487d8:	c7 44 24 08 02 00 00 	movl   $0x2,0x8(%esp)
 80487df:	00 
 80487e0:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 80487e7:	00 
 80487e8:	8d 44 24 30          	lea    0x30(%esp),%eax
 80487ec:	89 04 24             	mov    %eax,(%esp)
 80487ef:	e8 10 01 00 00       	call   8048904 <_ZN1tC1Eii>
 80487f4:	c7 44 24 08 04 00 00 	movl   $0x4,0x8(%esp)
 80487fb:	00 
 80487fc:	c7 44 24 04 03 00 00 	movl   $0x3,0x4(%esp)
 8048803:	00 
 8048804:	8d 44 24 38          	lea    0x38(%esp),%eax
 8048808:	89 04 24             	mov    %eax,(%esp)
 804880b:	e8 f4 00 00 00       	call   8048904 <_ZN1tC1Eii>
 8048810:	8d 44 24 30          	lea    0x30(%esp),%eax
 8048814:	89 44 24 20          	mov    %eax,0x20(%esp)
 8048818:	8d 44 24 38          	lea    0x38(%esp),%eax
 804881c:	89 44 24 24          	mov    %eax,0x24(%esp)
 8048820:	8b 44 24 20          	mov    0x20(%esp),%eax
 8048824:	89 44 24 28          	mov    %eax,0x28(%esp)
 8048828:	8b 44 24 28          	mov    0x28(%esp),%eax
 804882c:	89 44 24 2c          	mov    %eax,0x2c(%esp)
 8048830:	8b 44 24 2c          	mov    0x2c(%esp),%eax
 8048834:	c7 00 03 00 00 00    	movl   $0x3,(%eax)
 804883a:	c7 44 24 04 14 00 00 	movl   $0x14,0x4(%esp)
 8048841:	00 
 8048842:	8b 44 24 28          	mov    0x28(%esp),%eax
 8048846:	89 04 24             	mov    %eax,(%esp)
 8048849:	e8 4c 01 00 00       	call   804899a <_ZN1t4setaEi>
 804884e:	8b 44 24 2c          	mov    0x2c(%esp),%eax
 8048852:	89 04 24             	mov    %eax,(%esp)
 8048855:	e8 ec 00 00 00       	call   8048946 <_ZN1t7printabEv>
 804885a:	8d 44 24 38          	lea    0x38(%esp),%eax
 804885e:	89 04 24             	mov    %eax,(%esp)
 8048861:	e8 b4 00 00 00       	call   804891a <_ZN1tD1Ev>
 8048866:	8d 44 24 30          	lea    0x30(%esp),%eax
 804886a:	89 04 24             	mov    %eax,(%esp)
 804886d:	e8 a8 00 00 00       	call   804891a <_ZN1tD1Ev>
 8048872:	b8 00 00 00 00       	mov    $0x0,%eax
 8048877:	eb 2a                	jmp    80488a3 <main+0xf7>
 8048879:	89 c3                	mov    %eax,%ebx
 804887b:	8d 44 24 38          	lea    0x38(%esp),%eax
 804887f:	89 04 24             	mov    %eax,(%esp)
 8048882:	e8 93 00 00 00       	call   804891a <_ZN1tD1Ev>
 8048887:	eb 02                	jmp    804888b <main+0xdf>
 8048889:	89 c3                	mov    %eax,%ebx
 804888b:	8d 44 24 30          	lea    0x30(%esp),%eax
 804888f:	89 04 24             	mov    %eax,(%esp)
 8048892:	e8 83 00 00 00       	call   804891a <_ZN1tD1Ev>
 8048897:	89 d8                	mov    %ebx,%eax
 8048899:	eb 00                	jmp    804889b <main+0xef>
 804889b:	89 04 24             	mov    %eax,(%esp)
 804889e:	e8 fd fd ff ff       	call   80486a0 <_Unwind_Resume@plt>
 80488a3:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 80488a6:	c9                   	leave  
 80488a7:	c3                   	ret    

080488a8 <_Z41__static_initialization_and_destruction_0ii>:
 80488a8:	55                   	push   %ebp
 80488a9:	89 e5                	mov    %esp,%ebp
 80488ab:	83 ec 18             	sub    $0x18,%esp
 80488ae:	83 7d 08 01          	cmpl   $0x1,0x8(%ebp)
 80488b2:	75 31                	jne    80488e5 <_Z41__static_initialization_and_destruction_0ii+0x3d>
 80488b4:	81 7d 0c ff ff 00 00 	cmpl   $0xffff,0xc(%ebp)
 80488bb:	75 28                	jne    80488e5 <_Z41__static_initialization_and_destruction_0ii+0x3d>
 80488bd:	c7 04 24 d0 a0 04 08 	movl   $0x804a0d0,(%esp)
 80488c4:	e8 67 fd ff ff       	call   8048630 <_ZNSt8ios_base4InitC1Ev@plt>
 80488c9:	c7 44 24 08 3c a0 04 	movl   $0x804a03c,0x8(%esp)
 80488d0:	08 
 80488d1:	c7 44 24 04 d0 a0 04 	movl   $0x804a0d0,0x4(%esp)
 80488d8:	08 
 80488d9:	c7 04 24 50 86 04 08 	movl   $0x8048650,(%esp)
 80488e0:	e8 2b fd ff ff       	call   8048610 <__cxa_atexit@plt>
 80488e5:	c9                   	leave  
 80488e6:	c3                   	ret    

080488e7 <_GLOBAL__sub_I_main>:
 80488e7:	55                   	push   %ebp
 80488e8:	89 e5                	mov    %esp,%ebp
 80488ea:	83 ec 18             	sub    $0x18,%esp
 80488ed:	c7 44 24 04 ff ff 00 	movl   $0xffff,0x4(%esp)
 80488f4:	00 
 80488f5:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 80488fc:	e8 a7 ff ff ff       	call   80488a8 <_Z41__static_initialization_and_destruction_0ii>
 8048901:	c9                   	leave  
 8048902:	c3                   	ret    
 8048903:	90                   	nop

08048904 <_ZN1tC1Eii>:
 8048904:	55                   	push   %ebp
 8048905:	89 e5                	mov    %esp,%ebp
 8048907:	8b 45 08             	mov    0x8(%ebp),%eax
 804890a:	8b 55 0c             	mov    0xc(%ebp),%edx
 804890d:	89 10                	mov    %edx,(%eax)
 804890f:	8b 45 08             	mov    0x8(%ebp),%eax
 8048912:	8b 55 10             	mov    0x10(%ebp),%edx
 8048915:	89 50 04             	mov    %edx,0x4(%eax)
 8048918:	5d                   	pop    %ebp
 8048919:	c3                   	ret    

0804891a <_ZN1tD1Ev>:
 804891a:	55                   	push   %ebp
 804891b:	89 e5                	mov    %esp,%ebp
 804891d:	83 ec 18             	sub    $0x18,%esp
 8048920:	c7 44 24 04 40 8a 04 	movl   $0x8048a40,0x4(%esp)
 8048927:	08 
 8048928:	c7 04 24 40 a0 04 08 	movl   $0x804a040,(%esp)
 804892f:	e8 2c fd ff ff       	call   8048660 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
 8048934:	c7 44 24 04 80 86 04 	movl   $0x8048680,0x4(%esp)
 804893b:	08 
 804893c:	89 04 24             	mov    %eax,(%esp)
 804893f:	e8 2c fd ff ff       	call   8048670 <_ZNSolsEPFRSoS_E@plt>
 8048944:	c9                   	leave  
 8048945:	c3                   	ret    

08048946 <_ZN1t7printabEv>:
 8048946:	55                   	push   %ebp
 8048947:	89 e5                	mov    %esp,%ebp
 8048949:	53                   	push   %ebx
 804894a:	83 ec 14             	sub    $0x14,%esp
 804894d:	8b 45 08             	mov    0x8(%ebp),%eax
 8048950:	8b 58 04             	mov    0x4(%eax),%ebx
 8048953:	8b 45 08             	mov    0x8(%ebp),%eax
 8048956:	8b 00                	mov    (%eax),%eax
 8048958:	89 44 24 04          	mov    %eax,0x4(%esp)
 804895c:	c7 04 24 40 a0 04 08 	movl   $0x804a040,(%esp)
 8048963:	e8 98 fc ff ff       	call   8048600 <_ZNSolsEi@plt>
 8048968:	c7 44 24 04 4b 8a 04 	movl   $0x8048a4b,0x4(%esp)
 804896f:	08 
 8048970:	89 04 24             	mov    %eax,(%esp)
 8048973:	e8 e8 fc ff ff       	call   8048660 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
 8048978:	89 5c 24 04          	mov    %ebx,0x4(%esp)
 804897c:	89 04 24             	mov    %eax,(%esp)
 804897f:	e8 7c fc ff ff       	call   8048600 <_ZNSolsEi@plt>
 8048984:	c7 44 24 04 80 86 04 	movl   $0x8048680,0x4(%esp)
 804898b:	08 
 804898c:	89 04 24             	mov    %eax,(%esp)
 804898f:	e8 dc fc ff ff       	call   8048670 <_ZNSolsEPFRSoS_E@plt>
 8048994:	83 c4 14             	add    $0x14,%esp
 8048997:	5b                   	pop    %ebx
 8048998:	5d                   	pop    %ebp
 8048999:	c3                   	ret    

0804899a <_ZN1t4setaEi>:
 804899a:	55                   	push   %ebp
 804899b:	89 e5                	mov    %esp,%ebp
 804899d:	8b 45 08             	mov    0x8(%ebp),%eax
 80489a0:	8b 55 0c             	mov    0xc(%ebp),%edx
 80489a3:	89 10                	mov    %edx,(%eax)
 80489a5:	5d                   	pop    %ebp
 80489a6:	c3                   	ret    
 80489a7:	66 90                	xchg   %ax,%ax
 80489a9:	66 90                	xchg   %ax,%ax
 80489ab:	66 90                	xchg   %ax,%ax
 80489ad:	66 90                	xchg   %ax,%ax
 80489af:	90                   	nop

080489b0 <__libc_csu_init>:
 80489b0:	55                   	push   %ebp
 80489b1:	57                   	push   %edi
 80489b2:	31 ff                	xor    %edi,%edi
 80489b4:	56                   	push   %esi
 80489b5:	53                   	push   %ebx
 80489b6:	e8 25 fd ff ff       	call   80486e0 <__x86.get_pc_thunk.bx>
 80489bb:	81 c3 45 16 00 00    	add    $0x1645,%ebx
 80489c1:	83 ec 1c             	sub    $0x1c,%esp
 80489c4:	8b 6c 24 30          	mov    0x30(%esp),%ebp
 80489c8:	8d b3 fc fe ff ff    	lea    -0x104(%ebx),%esi
 80489ce:	e8 f9 fb ff ff       	call   80485cc <_init>
 80489d3:	8d 83 f4 fe ff ff    	lea    -0x10c(%ebx),%eax
 80489d9:	29 c6                	sub    %eax,%esi
 80489db:	c1 fe 02             	sar    $0x2,%esi
 80489de:	85 f6                	test   %esi,%esi
 80489e0:	74 27                	je     8048a09 <__libc_csu_init+0x59>
 80489e2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 80489e8:	8b 44 24 38          	mov    0x38(%esp),%eax
 80489ec:	89 2c 24             	mov    %ebp,(%esp)
 80489ef:	89 44 24 08          	mov    %eax,0x8(%esp)
 80489f3:	8b 44 24 34          	mov    0x34(%esp),%eax
 80489f7:	89 44 24 04          	mov    %eax,0x4(%esp)
 80489fb:	ff 94 bb f4 fe ff ff 	call   *-0x10c(%ebx,%edi,4)
 8048a02:	83 c7 01             	add    $0x1,%edi
 8048a05:	39 f7                	cmp    %esi,%edi
 8048a07:	75 df                	jne    80489e8 <__libc_csu_init+0x38>
 8048a09:	83 c4 1c             	add    $0x1c,%esp
 8048a0c:	5b                   	pop    %ebx
 8048a0d:	5e                   	pop    %esi
 8048a0e:	5f                   	pop    %edi
 8048a0f:	5d                   	pop    %ebp
 8048a10:	c3                   	ret    
 8048a11:	eb 0d                	jmp    8048a20 <__libc_csu_fini>
 8048a13:	90                   	nop
 8048a14:	90                   	nop
 8048a15:	90                   	nop
 8048a16:	90                   	nop
 8048a17:	90                   	nop
 8048a18:	90                   	nop
 8048a19:	90                   	nop
 8048a1a:	90                   	nop
 8048a1b:	90                   	nop
 8048a1c:	90                   	nop
 8048a1d:	90                   	nop
 8048a1e:	90                   	nop
 8048a1f:	90                   	nop

08048a20 <__libc_csu_fini>:
 8048a20:	f3 c3                	repz ret 
 8048a22:	66 90                	xchg   %ax,%ax

Disassembly of section .fini:

08048a24 <_fini>:
 8048a24:	53                   	push   %ebx
 8048a25:	83 ec 08             	sub    $0x8,%esp
 8048a28:	e8 b3 fc ff ff       	call   80486e0 <__x86.get_pc_thunk.bx>
 8048a2d:	81 c3 d3 15 00 00    	add    $0x15d3,%ebx
 8048a33:	83 c4 08             	add    $0x8,%esp
 8048a36:	5b                   	pop    %ebx
 8048a37:	c3                   	ret    

Disassembly of section .rodata:

08048a38 <_fp_hw>:
 8048a38:	03 00                	add    (%eax),%eax
	...

08048a3c <_IO_stdin_used>:
 8048a3c:	01 00                	add    %eax,(%eax)
 8048a3e:	02 00                	add    (%eax),%al
 8048a40:	64                   	fs
 8048a41:	65                   	gs
 8048a42:	73 74                	jae    8048ab8 <_IO_stdin_used+0x7c>
 8048a44:	72 75                	jb     8048abb <_IO_stdin_used+0x7f>
 8048a46:	63 74 65 64          	arpl   %si,0x64(%ebp,%eiz,2)
 8048a4a:	00 20                	add    %ah,(%eax)
 8048a4c:	20 00                	and    %al,(%eax)

Disassembly of section .eh_frame_hdr:

08048a50 <.eh_frame_hdr>:
 8048a50:	01 1b                	add    %ebx,(%ebx)
 8048a52:	03 3b                	add    (%ebx),%edi
 8048a54:	58                   	pop    %eax
 8048a55:	00 00                	add    %al,(%eax)
 8048a57:	00 0a                	add    %cl,(%edx)
 8048a59:	00 00                	add    %al,(%eax)
 8048a5b:	00 a0 fb ff ff 74    	add    %ah,0x74fffffb(%eax)
 8048a61:	00 00                	add    %al,(%eax)
 8048a63:	00 5c fd ff          	add    %bl,-0x1(%ebp,%edi,8)
 8048a67:	ff                   	(bad)  
 8048a68:	3c 01                	cmp    $0x1,%al
 8048a6a:	00 00                	add    %al,(%eax)
 8048a6c:	58                   	pop    %eax
 8048a6d:	fe                   	(bad)  
 8048a6e:	ff                   	(bad)  
 8048a6f:	ff 64 01 00          	jmp    *0x0(%ecx,%eax,1)
 8048a73:	00 97 fe ff ff 84    	add    %dl,-0x7b000002(%edi)
 8048a79:	01 00                	add    %eax,(%eax)
 8048a7b:	00 b4 fe ff ff 98 00 	add    %dh,0x98ffff(%esi,%edi,8)
 8048a82:	00 00                	add    %al,(%eax)
 8048a84:	ca fe ff             	lret   $0xfffe
 8048a87:	ff                   	(bad)  
 8048a88:	b8 00 00 00 f6       	mov    $0xf6000000,%eax
 8048a8d:	fe                   	(bad)  
 8048a8e:	ff                   	(bad)  
 8048a8f:	ff d8                	lcall  *<internal disassembler error>
 8048a91:	00 00                	add    %al,(%eax)
 8048a93:	00 4a ff             	add    %cl,-0x1(%edx)
 8048a96:	ff                   	(bad)  
 8048a97:	ff                   	(bad)  
 8048a98:	fc                   	cld    
 8048a99:	00 00                	add    %al,(%eax)
 8048a9b:	00 60 ff             	add    %ah,-0x1(%eax)
 8048a9e:	ff                   	(bad)  
 8048a9f:	ff a4 01 00 00 d0 ff 	jmp    *-0x300000(%ecx,%eax,1)
 8048aa6:	ff                   	(bad)  
 8048aa7:	ff e0                	jmp    *%eax
 8048aa9:	01 00                	add    %eax,(%eax)
	...

Disassembly of section .eh_frame:

08048aac <__FRAME_END__-0x198>:
 8048aac:	14 00                	adc    $0x0,%al
 8048aae:	00 00                	add    %al,(%eax)
 8048ab0:	00 00                	add    %al,(%eax)
 8048ab2:	00 00                	add    %al,(%eax)
 8048ab4:	01 7a 52             	add    %edi,0x52(%edx)
 8048ab7:	00 01                	add    %al,(%ecx)
 8048ab9:	7c 08                	jl     8048ac3 <_IO_stdin_used+0x87>
 8048abb:	01 1b                	add    %ebx,(%ebx)
 8048abd:	0c 04                	or     $0x4,%al
 8048abf:	04 88                	add    $0x88,%al
 8048ac1:	01 00                	add    %eax,(%eax)
 8048ac3:	00 20                	add    %ah,(%eax)
 8048ac5:	00 00                	add    %al,(%eax)
 8048ac7:	00 1c 00             	add    %bl,(%eax,%eax,1)
 8048aca:	00 00                	add    %al,(%eax)
 8048acc:	24 fb                	and    $0xfb,%al
 8048ace:	ff                   	(bad)  
 8048acf:	ff c0                	inc    %eax
 8048ad1:	00 00                	add    %al,(%eax)
 8048ad3:	00 00                	add    %al,(%eax)
 8048ad5:	0e                   	push   %cs
 8048ad6:	08 46 0e             	or     %al,0xe(%esi)
 8048ad9:	0c 4a                	or     $0x4a,%al
 8048adb:	0f 0b                	ud2    
 8048add:	74 04                	je     8048ae3 <_IO_stdin_used+0xa7>
 8048adf:	78 00                	js     8048ae1 <_IO_stdin_used+0xa5>
 8048ae1:	3f                   	aas    
 8048ae2:	1a 3b                	sbb    (%ebx),%bh
 8048ae4:	2a 32                	sub    (%edx),%dh
 8048ae6:	24 22                	and    $0x22,%al
 8048ae8:	1c 00                	sbb    $0x0,%al
 8048aea:	00 00                	add    %al,(%eax)
 8048aec:	40                   	inc    %eax
 8048aed:	00 00                	add    %al,(%eax)
 8048aef:	00 14 fe             	add    %dl,(%esi,%edi,8)
 8048af2:	ff                   	(bad)  
 8048af3:	ff 16                	call   *(%esi)
 8048af5:	00 00                	add    %al,(%eax)
 8048af7:	00 00                	add    %al,(%eax)
 8048af9:	41                   	inc    %ecx
 8048afa:	0e                   	push   %cs
 8048afb:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 8048b01:	52                   	push   %edx
 8048b02:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
 8048b05:	04 00                	add    $0x0,%al
 8048b07:	00 1c 00             	add    %bl,(%eax,%eax,1)
 8048b0a:	00 00                	add    %al,(%eax)
 8048b0c:	60                   	pusha  
 8048b0d:	00 00                	add    %al,(%eax)
 8048b0f:	00 0a                	add    %cl,(%edx)
 8048b11:	fe                   	(bad)  
 8048b12:	ff                   	(bad)  
 8048b13:	ff 2c 00             	ljmp   *(%eax,%eax,1)
 8048b16:	00 00                	add    %al,(%eax)
 8048b18:	00 41 0e             	add    %al,0xe(%ecx)
 8048b1b:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 8048b21:	68 c5 0c 04 04       	push   $0x4040cc5
 8048b26:	00 00                	add    %al,(%eax)
 8048b28:	20 00                	and    %al,(%eax)
 8048b2a:	00 00                	add    %al,(%eax)
 8048b2c:	80 00 00             	addb   $0x0,(%eax)
 8048b2f:	00 16                	add    %dl,(%esi)
 8048b31:	fe                   	(bad)  
 8048b32:	ff                   	(bad)  
 8048b33:	ff 54 00 00          	call   *0x0(%eax,%eax,1)
 8048b37:	00 00                	add    %al,(%eax)
 8048b39:	41                   	inc    %ecx
 8048b3a:	0e                   	push   %cs
 8048b3b:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 8048b41:	44                   	inc    %esp
 8048b42:	83 03 02             	addl   $0x2,(%ebx)
 8048b45:	4b                   	dec    %ebx
 8048b46:	c3                   	ret    
 8048b47:	41                   	inc    %ecx
 8048b48:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
 8048b4b:	04 1c                	add    $0x1c,%al
 8048b4d:	00 00                	add    %al,(%eax)
 8048b4f:	00 a4 00 00 00 46 fe 	add    %ah,-0x1ba0000(%eax,%eax,1)
 8048b56:	ff                   	(bad)  
 8048b57:	ff 0d 00 00 00 00    	decl   0x0
 8048b5d:	41                   	inc    %ecx
 8048b5e:	0e                   	push   %cs
 8048b5f:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 8048b65:	49                   	dec    %ecx
 8048b66:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
 8048b69:	04 00                	add    $0x0,%al
 8048b6b:	00 1c 00             	add    %bl,(%eax,%eax,1)
 8048b6e:	00 00                	add    %al,(%eax)
 8048b70:	00 00                	add    %al,(%eax)
 8048b72:	00 00                	add    %al,(%eax)
 8048b74:	01 7a 50             	add    %edi,0x50(%edx)
 8048b77:	4c                   	dec    %esp
 8048b78:	52                   	push   %edx
 8048b79:	00 01                	add    %al,(%ecx)
 8048b7b:	7c 08                	jl     8048b85 <_IO_stdin_used+0x149>
 8048b7d:	07                   	pop    %es
 8048b7e:	00 90 86 04 08 00    	add    %dl,0x80486(%eax)
 8048b84:	1b 0c 04             	sbb    (%esp,%eax,1),%ecx
 8048b87:	04 88                	add    $0x88,%al
 8048b89:	01 00                	add    %eax,(%eax)
 8048b8b:	00 24 00             	add    %ah,(%eax,%eax,1)
 8048b8e:	00 00                	add    %al,(%eax)
 8048b90:	24 00                	and    $0x0,%al
 8048b92:	00 00                	add    %al,(%eax)
 8048b94:	18 fc                	sbb    %bh,%ah
 8048b96:	ff                   	(bad)  
 8048b97:	ff                   	(bad)  
 8048b98:	fc                   	cld    
 8048b99:	00 00                	add    %al,(%eax)
 8048b9b:	00 04 48             	add    %al,(%eax,%ecx,2)
 8048b9e:	8c 04 08             	mov    %es,(%eax,%ecx,1)
 8048ba1:	41                   	inc    %ecx
 8048ba2:	0e                   	push   %cs
 8048ba3:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 8048ba9:	47                   	inc    %edi
 8048baa:	83 03 02             	addl   $0x2,(%ebx)
 8048bad:	f1                   	icebp  
 8048bae:	c5 c3 0c             	(bad)  
 8048bb1:	04 04                	add    $0x4,%al
 8048bb3:	00 1c 00             	add    %bl,(%eax,%eax,1)
 8048bb6:	00 00                	add    %al,(%eax)
 8048bb8:	0c 01                	or     $0x1,%al
 8048bba:	00 00                	add    %al,(%eax)
 8048bbc:	ec                   	in     (%dx),%al
 8048bbd:	fc                   	cld    
 8048bbe:	ff                   	(bad)  
 8048bbf:	ff                   	(bad)  
 8048bc0:	3f                   	aas    
 8048bc1:	00 00                	add    %al,(%eax)
 8048bc3:	00 00                	add    %al,(%eax)
 8048bc5:	41                   	inc    %ecx
 8048bc6:	0e                   	push   %cs
 8048bc7:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 8048bcd:	7b c5                	jnp    8048b94 <_IO_stdin_used+0x158>
 8048bcf:	0c 04                	or     $0x4,%al
 8048bd1:	04 00                	add    $0x0,%al
 8048bd3:	00 1c 00             	add    %bl,(%eax,%eax,1)
 8048bd6:	00 00                	add    %al,(%eax)
 8048bd8:	2c 01                	sub    $0x1,%al
 8048bda:	00 00                	add    %al,(%eax)
 8048bdc:	0b fd                	or     %ebp,%edi
 8048bde:	ff                   	(bad)  
 8048bdf:	ff 1c 00             	lcall  *(%eax,%eax,1)
 8048be2:	00 00                	add    %al,(%eax)
 8048be4:	00 41 0e             	add    %al,0xe(%ecx)
 8048be7:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 8048bed:	58                   	pop    %eax
 8048bee:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
 8048bf1:	04 00                	add    $0x0,%al
 8048bf3:	00 38                	add    %bh,(%eax)
 8048bf5:	00 00                	add    %al,(%eax)
 8048bf7:	00 4c 01 00          	add    %cl,0x0(%ecx,%eax,1)
 8048bfb:	00 b4 fd ff ff 61 00 	add    %dh,0x61ffff(%ebp,%edi,8)
 8048c02:	00 00                	add    %al,(%eax)
 8048c04:	00 41 0e             	add    %al,0xe(%ecx)
 8048c07:	08 85 02 41 0e 0c    	or     %al,0xc0e4102(%ebp)
 8048c0d:	87 03                	xchg   %eax,(%ebx)
 8048c0f:	43                   	inc    %ebx
 8048c10:	0e                   	push   %cs
 8048c11:	10 86 04 41 0e 14    	adc    %al,0x140e4104(%esi)
 8048c17:	83 05 4e 0e 30 02 48 	addl   $0x48,0x2300e4e
 8048c1e:	0e                   	push   %cs
 8048c1f:	14 41                	adc    $0x41,%al
 8048c21:	c3                   	ret    
 8048c22:	0e                   	push   %cs
 8048c23:	10 41 c6             	adc    %al,-0x3a(%ecx)
 8048c26:	0e                   	push   %cs
 8048c27:	0c 41                	or     $0x41,%al
 8048c29:	c7                   	(bad)  
 8048c2a:	0e                   	push   %cs
 8048c2b:	08 41 c5             	or     %al,-0x3b(%ecx)
 8048c2e:	0e                   	push   %cs
 8048c2f:	04 10                	add    $0x10,%al
 8048c31:	00 00                	add    %al,(%eax)
 8048c33:	00 88 01 00 00 e8    	add    %cl,-0x17ffffff(%eax)
 8048c39:	fd                   	std    
 8048c3a:	ff                   	(bad)  
 8048c3b:	ff 02                	incl   (%edx)
 8048c3d:	00 00                	add    %al,(%eax)
 8048c3f:	00 00                	add    %al,(%eax)
 8048c41:	00 00                	add    %al,(%eax)
	...

08048c44 <__FRAME_END__>:
 8048c44:	00 00                	add    %al,(%eax)
	...

Disassembly of section .gcc_except_table:

08048c48 <.gcc_except_table>:
 8048c48:	ff                   	(bad)  
 8048c49:	ff 01                	incl   (%ecx)
 8048c4b:	17                   	pop    %ss
 8048c4c:	a9 01 05 cd 01       	test   $0x1cd0501,%eax
 8048c51:	00 b5 01 05 dd 01    	add    %dh,0x1dd0501(%ebp)
 8048c57:	00 c1                	add    %al,%cl
 8048c59:	01 05 ef 01 00 f2    	add    %eax,0xf20001ef
 8048c5f:	01                   	.byte 0x1
 8048c60:	05                   	.byte 0x5
	...

Disassembly of section .init_array:

08049ef4 <__frame_dummy_init_array_entry>:
 8049ef4:	80 87 04 08 e7 88 04 	addb   $0x4,-0x7718f7fc(%edi)
 8049efb:	08                   	.byte 0x8

Disassembly of section .fini_array:

08049efc <__do_global_dtors_aux_fini_array_entry>:
 8049efc:	60                   	pusha  
 8049efd:	87 04 08             	xchg   %eax,(%eax,%ecx,1)

Disassembly of section .jcr:

08049f00 <__JCR_END__>:
 8049f00:	00 00                	add    %al,(%eax)
	...

Disassembly of section .dynamic:

08049f04 <_DYNAMIC>:
 8049f04:	01 00                	add    %eax,(%eax)
 8049f06:	00 00                	add    %al,(%eax)
 8049f08:	01 00                	add    %eax,(%eax)
 8049f0a:	00 00                	add    %al,(%eax)
 8049f0c:	01 00                	add    %eax,(%eax)
 8049f0e:	00 00                	add    %al,(%eax)
 8049f10:	46                   	inc    %esi
 8049f11:	01 00                	add    %eax,(%eax)
 8049f13:	00 01                	add    %al,(%ecx)
 8049f15:	00 00                	add    %al,(%eax)
 8049f17:	00 63 01             	add    %ah,0x1(%ebx)
 8049f1a:	00 00                	add    %al,(%eax)
 8049f1c:	0c 00                	or     $0x0,%al
 8049f1e:	00 00                	add    %al,(%eax)
 8049f20:	cc                   	int3   
 8049f21:	85 04 08             	test   %eax,(%eax,%ecx,1)
 8049f24:	0d 00 00 00 24       	or     $0x24000000,%eax
 8049f29:	8a 04 08             	mov    (%eax,%ecx,1),%al
 8049f2c:	19 00                	sbb    %eax,(%eax)
 8049f2e:	00 00                	add    %al,(%eax)
 8049f30:	f4                   	hlt    
 8049f31:	9e                   	sahf   
 8049f32:	04 08                	add    $0x8,%al
 8049f34:	1b 00                	sbb    (%eax),%eax
 8049f36:	00 00                	add    %al,(%eax)
 8049f38:	08 00                	or     %al,(%eax)
 8049f3a:	00 00                	add    %al,(%eax)
 8049f3c:	1a 00                	sbb    (%eax),%al
 8049f3e:	00 00                	add    %al,(%eax)
 8049f40:	fc                   	cld    
 8049f41:	9e                   	sahf   
 8049f42:	04 08                	add    $0x8,%al
 8049f44:	1c 00                	sbb    $0x0,%al
 8049f46:	00 00                	add    %al,(%eax)
 8049f48:	04 00                	add    $0x0,%al
 8049f4a:	00 00                	add    %al,(%eax)
 8049f4c:	f5                   	cmc    
 8049f4d:	fe                   	(bad)  
 8049f4e:	ff 6f ac             	ljmp   *-0x54(%edi)
 8049f51:	81 04 08 05 00 00 00 	addl   $0x5,(%eax,%ecx,1)
 8049f58:	f0 82                	lock (bad) 
 8049f5a:	04 08                	add    $0x8,%al
 8049f5c:	06                   	push   %es
 8049f5d:	00 00                	add    %al,(%eax)
 8049f5f:	00 e0                	add    %ah,%al
 8049f61:	81 04 08 0a 00 00 00 	addl   $0xa,(%eax,%ecx,1)
 8049f68:	d0 01                	rolb   (%ecx)
 8049f6a:	00 00                	add    %al,(%eax)
 8049f6c:	0b 00                	or     (%eax),%eax
 8049f6e:	00 00                	add    %al,(%eax)
 8049f70:	10 00                	adc    %al,(%eax)
 8049f72:	00 00                	add    %al,(%eax)
 8049f74:	15 00 00 00 00       	adc    $0x0,%eax
 8049f79:	00 00                	add    %al,(%eax)
 8049f7b:	00 03                	add    %al,(%ebx)
 8049f7d:	00 00                	add    %al,(%eax)
 8049f7f:	00 00                	add    %al,(%eax)
 8049f81:	a0 04 08 02 00       	mov    0x20804,%al
 8049f86:	00 00                	add    %al,(%eax)
 8049f88:	58                   	pop    %eax
 8049f89:	00 00                	add    %al,(%eax)
 8049f8b:	00 14 00             	add    %dl,(%eax,%eax,1)
 8049f8e:	00 00                	add    %al,(%eax)
 8049f90:	11 00                	adc    %eax,(%eax)
 8049f92:	00 00                	add    %al,(%eax)
 8049f94:	17                   	pop    %ss
 8049f95:	00 00                	add    %al,(%eax)
 8049f97:	00 74 85 04          	add    %dh,0x4(%ebp,%eax,4)
 8049f9b:	08 11                	or     %dl,(%ecx)
 8049f9d:	00 00                	add    %al,(%eax)
 8049f9f:	00 64 85 04          	add    %ah,0x4(%ebp,%eax,4)
 8049fa3:	08 12                	or     %dl,(%edx)
 8049fa5:	00 00                	add    %al,(%eax)
 8049fa7:	00 10                	add    %dl,(%eax)
 8049fa9:	00 00                	add    %al,(%eax)
 8049fab:	00 13                	add    %dl,(%ebx)
 8049fad:	00 00                	add    %al,(%eax)
 8049faf:	00 08                	add    %cl,(%eax)
 8049fb1:	00 00                	add    %al,(%eax)
 8049fb3:	00 fe                	add    %bh,%dh
 8049fb5:	ff                   	(bad)  
 8049fb6:	ff 6f e4             	ljmp   *-0x1c(%edi)
 8049fb9:	84 04 08             	test   %al,(%eax,%ecx,1)
 8049fbc:	ff                   	(bad)  
 8049fbd:	ff                   	(bad)  
 8049fbe:	ff 6f 03             	ljmp   *0x3(%edi)
 8049fc1:	00 00                	add    %al,(%eax)
 8049fc3:	00 f0                	add    %dh,%al
 8049fc5:	ff                   	(bad)  
 8049fc6:	ff 6f c0             	ljmp   *-0x40(%edi)
 8049fc9:	84 04 08             	test   %al,(%eax,%ecx,1)
	...

Disassembly of section .got:

08049ffc <.got>:
 8049ffc:	00 00                	add    %al,(%eax)
	...

Disassembly of section .got.plt:

0804a000 <_GLOBAL_OFFSET_TABLE_>:
 804a000:	04 9f                	add    $0x9f,%al
 804a002:	04 08                	add    $0x8,%al
	...
 804a00c:	06                   	push   %es
 804a00d:	86 04 08             	xchg   %al,(%eax,%ecx,1)
 804a010:	16                   	push   %ss
 804a011:	86 04 08             	xchg   %al,(%eax,%ecx,1)
 804a014:	26 86 04 08          	xchg   %al,%es:(%eax,%ecx,1)
 804a018:	36 86 04 08          	xchg   %al,%ss:(%eax,%ecx,1)
 804a01c:	46                   	inc    %esi
 804a01d:	86 04 08             	xchg   %al,(%eax,%ecx,1)
 804a020:	56                   	push   %esi
 804a021:	86 04 08             	xchg   %al,(%eax,%ecx,1)
 804a024:	66                   	data16
 804a025:	86 04 08             	xchg   %al,(%eax,%ecx,1)
 804a028:	76 86                	jbe    8049fb0 <_DYNAMIC+0xac>
 804a02a:	04 08                	add    $0x8,%al
 804a02c:	86 86 04 08 96 86    	xchg   %al,-0x7969f7fc(%esi)
 804a032:	04 08                	add    $0x8,%al
 804a034:	a6                   	cmpsb  %es:(%edi),%ds:(%esi)
 804a035:	86 04 08             	xchg   %al,(%eax,%ecx,1)

Disassembly of section .data:

0804a038 <__data_start>:
 804a038:	00 00                	add    %al,(%eax)
	...

0804a03c <__dso_handle>:
 804a03c:	00 00                	add    %al,(%eax)
	...

Disassembly of section .bss:

0804a040 <_ZSt4cout@@GLIBCXX_3.4>:
	...

0804a0cc <completed.6339>:
 804a0cc:	00 00                	add    %al,(%eax)
	...

0804a0d0 <_ZStL8__ioinit>:
 804a0d0:	00 00                	add    %al,(%eax)
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	47                   	inc    %edi
   1:	43                   	inc    %ebx
   2:	43                   	inc    %ebx
   3:	3a 20                	cmp    (%eax),%ah
   5:	28 55 62             	sub    %dl,0x62(%ebp)
   8:	75 6e                	jne    78 <_init-0x8048554>
   a:	74 75                	je     81 <_init-0x804854b>
   c:	2f                   	das    
   d:	4c                   	dec    %esp
   e:	69 6e 61 72 6f 20 34 	imul   $0x34206f72,0x61(%esi),%ebp
  15:	2e                   	cs
  16:	37                   	aaa    
  17:	2e 33 2d 31 75 62 75 	xor    %cs:0x75627531,%ebp
  1e:	6e                   	outsb  %ds:(%esi),(%dx)
  1f:	74 75                	je     96 <_init-0x8048536>
  21:	31 29                	xor    %ebp,(%ecx)
  23:	20 34 2e             	and    %dh,(%esi,%ebp,1)
  26:	37                   	aaa    
  27:	2e 33 00             	xor    %cs:(%eax),%eax
