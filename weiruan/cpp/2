
a.out:     file format elf32-i386


Disassembly of section .interp:

08048154 <.interp>:
 8048154:	2f                   	das    
 8048155:	6c                   	insb   (%dx),%es:(%edi)
 8048156:	69 62 2f 6c 64 2d 6c 	imul   $0x6c2d646c,0x2f(%edx),%esp
 804815d:	69 6e 75 78 2e 73 6f 	imul   $0x6f732e78,0x75(%esi),%ebp
 8048164:	2e 32 00             	xor    %cs:(%eax),%al

Disassembly of section .note.ABI-tag:

08048168 <.note.ABI-tag>:
 8048168:	04 00                	add    $0x0,%al
 804816a:	00 00                	add    %al,(%eax)
 804816c:	10 00                	adc    %al,(%eax)
 804816e:	00 00                	add    %al,(%eax)
 8048170:	01 00                	add    %eax,(%eax)
 8048172:	00 00                	add    %al,(%eax)
 8048174:	47                   	inc    %edi
 8048175:	4e                   	dec    %esi
 8048176:	55                   	push   %ebp
 8048177:	00 00                	add    %al,(%eax)
 8048179:	00 00                	add    %al,(%eax)
 804817b:	00 02                	add    %al,(%edx)
 804817d:	00 00                	add    %al,(%eax)
 804817f:	00 06                	add    %al,(%esi)
 8048181:	00 00                	add    %al,(%eax)
 8048183:	00 18                	add    %bl,(%eax)
 8048185:	00 00                	add    %al,(%eax)
	...

Disassembly of section .note.gnu.build-id:

08048188 <.note.gnu.build-id>:
 8048188:	04 00                	add    $0x0,%al
 804818a:	00 00                	add    %al,(%eax)
 804818c:	14 00                	adc    $0x0,%al
 804818e:	00 00                	add    %al,(%eax)
 8048190:	03 00                	add    (%eax),%eax
 8048192:	00 00                	add    %al,(%eax)
 8048194:	47                   	inc    %edi
 8048195:	4e                   	dec    %esi
 8048196:	55                   	push   %ebp
 8048197:	00 84 41 bc f6 b5 5d 	add    %al,0x5db5f6bc(%ecx,%eax,2)
 804819e:	2e                   	cs
 804819f:	cf                   	iret   
 80481a0:	af                   	scas   %es:(%edi),%eax
 80481a1:	6d                   	insl   (%dx),%es:(%edi)
 80481a2:	26 85 41 d4          	test   %eax,%es:-0x2c(%ecx)
 80481a6:	33 2b                	xor    (%ebx),%ebp
 80481a8:	77 d8                	ja     8048182 <_init-0x446>
 80481aa:	f4                   	hlt    
 80481ab:	8d                   	.byte 0x8d

Disassembly of section .gnu.hash:

080481ac <.gnu.hash>:
 80481ac:	03 00                	add    (%eax),%eax
 80481ae:	00 00                	add    %al,(%eax)
 80481b0:	0c 00                	or     $0x0,%al
 80481b2:	00 00                	add    %al,(%eax)
 80481b4:	01 00                	add    %eax,(%eax)
 80481b6:	00 00                	add    %al,(%eax)
 80481b8:	05 00 00 00 01       	add    $0x1000000,%eax
 80481bd:	2b 10                	sub    (%eax),%edx
 80481bf:	21 00                	and    %eax,(%eax)
 80481c1:	00 00                	add    %al,(%eax)
 80481c3:	00 0c 00             	add    %cl,(%eax,%eax,1)
 80481c6:	00 00                	add    %al,(%eax)
 80481c8:	0e                   	push   %cs
 80481c9:	00 00                	add    %al,(%eax)
 80481cb:	00 ac 4b e3 c0 21 fd 	add    %ch,-0x2de3f1d(%ebx,%ecx,2)
 80481d2:	f4                   	hlt    
 80481d3:	09 28                	or     %ebp,(%eax)
 80481d5:	45                   	inc    %ebp
 80481d6:	d5 4c                	aad    $0x4c
 80481d8:	14 98                	adc    $0x98,%al
 80481da:	0c 43                	or     $0x43,%al
 80481dc:	79 49                	jns    8048227 <_init-0x3a1>
 80481de:	6b                   	.byte 0x6b
 80481df:	b6                   	.byte 0xb6

Disassembly of section .dynsym:

080481e0 <.dynsym>:
	...
 80481f0:	79 01                	jns    80481f3 <_init-0x3d5>
	...
 80481fa:	00 00                	add    %al,(%eax)
 80481fc:	12 00                	adc    (%eax),%al
 80481fe:	00 00                	add    %al,(%eax)
 8048200:	10 00                	adc    %al,(%eax)
	...
 804820a:	00 00                	add    %al,(%eax)
 804820c:	20 00                	and    %al,(%eax)
 804820e:	00 00                	add    %al,(%eax)
 8048210:	1f                   	pop    %ds
	...
 8048219:	00 00                	add    %al,(%eax)
 804821b:	00 20                	add    %ah,(%eax)
 804821d:	00 00                	add    %al,(%eax)
 804821f:	00 e6                	add    %ah,%dh
	...
 8048229:	00 00                	add    %al,(%eax)
 804822b:	00 12                	add    %dl,(%edx)
 804822d:	00 00                	add    %al,(%eax)
 804822f:	00 86 01 00 00 00    	add    %al,0x1(%esi)
 8048235:	00 00                	add    %al,(%eax)
 8048237:	00 00                	add    %al,(%eax)
 8048239:	00 00                	add    %al,(%eax)
 804823b:	00 12                	add    %dl,(%edx)
 804823d:	00 00                	add    %al,(%eax)
 804823f:	00 33                	add    %dh,(%ebx)
	...
 8048249:	00 00                	add    %al,(%eax)
 804824b:	00 20                	add    %ah,(%eax)
 804824d:	00 00                	add    %al,(%eax)
 804824f:	00 ae 00 00 00 00    	add    %ch,0x0(%esi)
 8048255:	00 00                	add    %al,(%eax)
 8048257:	00 00                	add    %al,(%eax)
 8048259:	00 00                	add    %al,(%eax)
 804825b:	00 12                	add    %dl,(%edx)
 804825d:	00 00                	add    %al,(%eax)
 804825f:	00 4f 00             	add    %cl,0x0(%edi)
	...
 804826a:	00 00                	add    %al,(%eax)
 804826c:	20 00                	and    %al,(%eax)
 804826e:	00 00                	add    %al,(%eax)
 8048270:	72 01                	jb     8048273 <_init-0x355>
	...
 804827a:	00 00                	add    %al,(%eax)
 804827c:	12 00                	adc    (%eax),%al
 804827e:	00 00                	add    %al,(%eax)
 8048280:	16                   	push   %ss
 8048281:	01 00                	add    %eax,(%eax)
	...
 804828b:	00 12                	add    %dl,(%edx)
 804828d:	00 00                	add    %al,(%eax)
 804828f:	00 4a 01             	add    %cl,0x1(%edx)
	...
 804829a:	00 00                	add    %al,(%eax)
 804829c:	12 00                	adc    (%eax),%al
 804829e:	00 00                	add    %al,(%eax)
 80482a0:	63 01                	arpl   %ax,(%ecx)
 80482a2:	00 00                	add    %al,(%eax)
 80482a4:	cc                   	int3   
 80482a5:	89 04 08             	mov    %eax,(%eax,%ecx,1)
 80482a8:	04 00                	add    $0x0,%al
 80482aa:	00 00                	add    %al,(%eax)
 80482ac:	11 00                	adc    %eax,(%eax)
 80482ae:	0f 00 69 00          	verw   0x0(%ecx)
 80482b2:	00 00                	add    %al,(%eax)
 80482b4:	80 86 04 08 00 00 00 	addb   $0x0,0x804(%esi)
 80482bb:	00 12                	add    %dl,(%edx)
 80482bd:	00 00                	add    %al,(%eax)
 80482bf:	00 fe                	add    %bh,%dh
 80482c1:	00 00                	add    %al,(%eax)
 80482c3:	00 40 86             	add    %al,-0x7a(%eax)
 80482c6:	04 08                	add    $0x8,%al
 80482c8:	00 00                	add    %al,(%eax)
 80482ca:	00 00                	add    %al,(%eax)
 80482cc:	12 00                	adc    (%eax),%al
 80482ce:	00 00                	add    %al,(%eax)
 80482d0:	a4                   	movsb  %ds:(%esi),%es:(%edi)
 80482d1:	00 00                	add    %al,(%eax)
 80482d3:	00 40 a0             	add    %al,-0x60(%eax)
 80482d6:	04 08                	add    $0x8,%al
 80482d8:	8c 00                	mov    %es,(%eax)
 80482da:	00 00                	add    %al,(%eax)
 80482dc:	11 00                	adc    %eax,(%eax)
 80482de:	1a 00                	sbb    (%eax),%al
 80482e0:	27                   	daa    
 80482e1:	01 00                	add    %eax,(%eax)
 80482e3:	00 90 86 04 08 00    	add    %dl,0x80486(%eax)
 80482e9:	00 00                	add    %al,(%eax)
 80482eb:	00 12                	add    %dl,(%edx)
 80482ed:	00 00                	add    %al,(%eax)
	...

Disassembly of section .dynstr:

080482f0 <.dynstr>:
 80482f0:	00 6c 69 62          	add    %ch,0x62(%ecx,%ebp,2)
 80482f4:	73 74                	jae    804836a <_init-0x25e>
 80482f6:	64 63 2b             	arpl   %bp,%fs:(%ebx)
 80482f9:	2b 2e                	sub    (%esi),%ebp
 80482fb:	73 6f                	jae    804836c <_init-0x25c>
 80482fd:	2e 36 00 5f 5f       	cs add %bl,%cs:%ss:0x5f(%edi)
 8048302:	67 6d                	insl   (%dx),%es:(%di)
 8048304:	6f                   	outsl  %ds:(%esi),(%dx)
 8048305:	6e                   	outsb  %ds:(%esi),(%dx)
 8048306:	5f                   	pop    %edi
 8048307:	73 74                	jae    804837d <_init-0x24b>
 8048309:	61                   	popa   
 804830a:	72 74                	jb     8048380 <_init-0x248>
 804830c:	5f                   	pop    %edi
 804830d:	5f                   	pop    %edi
 804830e:	00 5f 4a             	add    %bl,0x4a(%edi)
 8048311:	76 5f                	jbe    8048372 <_init-0x256>
 8048313:	52                   	push   %edx
 8048314:	65 67 69 73 74 65 72 	imul   $0x6c437265,%gs:0x74(%bp,%di),%esi
 804831b:	43 6c 
 804831d:	61                   	popa   
 804831e:	73 73                	jae    8048393 <_init-0x235>
 8048320:	65                   	gs
 8048321:	73 00                	jae    8048323 <_init-0x2a5>
 8048323:	5f                   	pop    %edi
 8048324:	49                   	dec    %ecx
 8048325:	54                   	push   %esp
 8048326:	4d                   	dec    %ebp
 8048327:	5f                   	pop    %edi
 8048328:	64                   	fs
 8048329:	65                   	gs
 804832a:	72 65                	jb     8048391 <_init-0x237>
 804832c:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%bp,%di),%esi
 8048333:	4d 
 8048334:	43                   	inc    %ebx
 8048335:	6c                   	insb   (%dx),%es:(%edi)
 8048336:	6f                   	outsl  %ds:(%esi),(%dx)
 8048337:	6e                   	outsb  %ds:(%esi),(%dx)
 8048338:	65                   	gs
 8048339:	54                   	push   %esp
 804833a:	61                   	popa   
 804833b:	62 6c 65 00          	bound  %ebp,0x0(%ebp,%eiz,2)
 804833f:	5f                   	pop    %edi
 8048340:	49                   	dec    %ecx
 8048341:	54                   	push   %esp
 8048342:	4d                   	dec    %ebp
 8048343:	5f                   	pop    %edi
 8048344:	72 65                	jb     80483ab <_init-0x21d>
 8048346:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%bp,%di),%esi
 804834d:	4d 
 804834e:	43                   	inc    %ebx
 804834f:	6c                   	insb   (%dx),%es:(%edi)
 8048350:	6f                   	outsl  %ds:(%esi),(%dx)
 8048351:	6e                   	outsb  %ds:(%esi),(%dx)
 8048352:	65                   	gs
 8048353:	54                   	push   %esp
 8048354:	61                   	popa   
 8048355:	62 6c 65 00          	bound  %ebp,0x0(%ebp,%eiz,2)
 8048359:	5f                   	pop    %edi
 804835a:	5a                   	pop    %edx
 804835b:	53                   	push   %ebx
 804835c:	74 34                	je     8048392 <_init-0x236>
 804835e:	65 6e                	outsb  %gs:(%esi),(%dx)
 8048360:	64                   	fs
 8048361:	6c                   	insb   (%dx),%es:(%edi)
 8048362:	49                   	dec    %ecx
 8048363:	63 53 74             	arpl   %dx,0x74(%ebx)
 8048366:	31 31                	xor    %esi,(%ecx)
 8048368:	63 68 61             	arpl   %bp,0x61(%eax)
 804836b:	72 5f                	jb     80483cc <_init-0x1fc>
 804836d:	74 72                	je     80483e1 <_init-0x1e7>
 804836f:	61                   	popa   
 8048370:	69 74 73 49 63 45 45 	imul   $0x52454563,0x49(%ebx,%esi,2),%esi
 8048377:	52 
 8048378:	53                   	push   %ebx
 8048379:	74 31                	je     80483ac <_init-0x21c>
 804837b:	33 62 61             	xor    0x61(%edx),%esp
 804837e:	73 69                	jae    80483e9 <_init-0x1df>
 8048380:	63 5f 6f             	arpl   %bx,0x6f(%edi)
 8048383:	73 74                	jae    80483f9 <_init-0x1cf>
 8048385:	72 65                	jb     80483ec <_init-0x1dc>
 8048387:	61                   	popa   
 8048388:	6d                   	insl   (%dx),%es:(%edi)
 8048389:	49                   	dec    %ecx
 804838a:	54                   	push   %esp
 804838b:	5f                   	pop    %edi
 804838c:	54                   	push   %esp
 804838d:	30 5f 45             	xor    %bl,0x45(%edi)
 8048390:	53                   	push   %ebx
 8048391:	36                   	ss
 8048392:	5f                   	pop    %edi
 8048393:	00 5f 5a             	add    %bl,0x5a(%edi)
 8048396:	53                   	push   %ebx
 8048397:	74 34                	je     80483cd <_init-0x1fb>
 8048399:	63 6f 75             	arpl   %bp,0x75(%edi)
 804839c:	74 00                	je     804839e <_init-0x22a>
 804839e:	5f                   	pop    %edi
 804839f:	5a                   	pop    %edx
 80483a0:	53                   	push   %ebx
 80483a1:	74 6c                	je     804840f <_init-0x1b9>
 80483a3:	73 49                	jae    80483ee <_init-0x1da>
 80483a5:	53                   	push   %ebx
 80483a6:	74 31                	je     80483d9 <_init-0x1ef>
 80483a8:	31 63 68             	xor    %esp,0x68(%ebx)
 80483ab:	61                   	popa   
 80483ac:	72 5f                	jb     804840d <_init-0x1bb>
 80483ae:	74 72                	je     8048422 <_init-0x1a6>
 80483b0:	61                   	popa   
 80483b1:	69 74 73 49 63 45 45 	imul   $0x52454563,0x49(%ebx,%esi,2),%esi
 80483b8:	52 
 80483b9:	53                   	push   %ebx
 80483ba:	74 31                	je     80483ed <_init-0x1db>
 80483bc:	33 62 61             	xor    0x61(%edx),%esp
 80483bf:	73 69                	jae    804842a <_init-0x19e>
 80483c1:	63 5f 6f             	arpl   %bx,0x6f(%edi)
 80483c4:	73 74                	jae    804843a <_init-0x18e>
 80483c6:	72 65                	jb     804842d <_init-0x19b>
 80483c8:	61                   	popa   
 80483c9:	6d                   	insl   (%dx),%es:(%edi)
 80483ca:	49                   	dec    %ecx
 80483cb:	63 54 5f 45          	arpl   %dx,0x45(%edi,%ebx,2)
 80483cf:	53                   	push   %ebx
 80483d0:	35 5f 50 4b 63       	xor    $0x634b505f,%eax
 80483d5:	00 5f 5a             	add    %bl,0x5a(%edi)
 80483d8:	4e                   	dec    %esi
 80483d9:	53                   	push   %ebx
 80483da:	74 38                	je     8048414 <_init-0x1b4>
 80483dc:	69 6f 73 5f 62 61 73 	imul   $0x7361625f,0x73(%edi),%ebp
 80483e3:	65                   	gs
 80483e4:	34 49                	xor    $0x49,%al
 80483e6:	6e                   	outsb  %ds:(%esi),(%dx)
 80483e7:	69 74 43 31 45 76 00 	imul   $0x5f007645,0x31(%ebx,%eax,2),%esi
 80483ee:	5f 
 80483ef:	5a                   	pop    %edx
 80483f0:	4e                   	dec    %esi
 80483f1:	53                   	push   %ebx
 80483f2:	74 38                	je     804842c <_init-0x19c>
 80483f4:	69 6f 73 5f 62 61 73 	imul   $0x7361625f,0x73(%edi),%ebp
 80483fb:	65                   	gs
 80483fc:	34 49                	xor    $0x49,%al
 80483fe:	6e                   	outsb  %ds:(%esi),(%dx)
 80483ff:	69 74 44 31 45 76 00 	imul   $0x5f007645,0x31(%esp,%eax,2),%esi
 8048406:	5f 
 8048407:	5a                   	pop    %edx
 8048408:	4e                   	dec    %esi
 8048409:	53                   	push   %ebx
 804840a:	6f                   	outsl  %ds:(%esi),(%dx)
 804840b:	6c                   	insb   (%dx),%es:(%edi)
 804840c:	73 45                	jae    8048453 <_init-0x175>
 804840e:	50                   	push   %eax
 804840f:	46                   	inc    %esi
 8048410:	52                   	push   %edx
 8048411:	53                   	push   %ebx
 8048412:	6f                   	outsl  %ds:(%esi),(%dx)
 8048413:	53                   	push   %ebx
 8048414:	5f                   	pop    %edi
 8048415:	45                   	inc    %ebp
 8048416:	00 5f 5f             	add    %bl,0x5f(%edi)
 8048419:	67 78 78             	addr16 js 8048494 <_init-0x134>
 804841c:	5f                   	pop    %edi
 804841d:	70 65                	jo     8048484 <_init-0x144>
 804841f:	72 73                	jb     8048494 <_init-0x134>
 8048421:	6f                   	outsl  %ds:(%esi),(%dx)
 8048422:	6e                   	outsb  %ds:(%esi),(%dx)
 8048423:	61                   	popa   
 8048424:	6c                   	insb   (%dx),%es:(%edi)
 8048425:	69 74 79 5f 76 30 00 	imul   $0x6c003076,0x5f(%ecx,%edi,2),%esi
 804842c:	6c 
 804842d:	69 62 67 63 63 5f 73 	imul   $0x735f6363,0x67(%edx),%esp
 8048434:	2e 73 6f             	jae,pn 80484a6 <_init-0x122>
 8048437:	2e 31 00             	xor    %eax,%cs:(%eax)
 804843a:	5f                   	pop    %edi
 804843b:	55                   	push   %ebp
 804843c:	6e                   	outsb  %ds:(%esi),(%dx)
 804843d:	77 69                	ja     80484a8 <_init-0x120>
 804843f:	6e                   	outsb  %ds:(%esi),(%dx)
 8048440:	64                   	fs
 8048441:	5f                   	pop    %edi
 8048442:	52                   	push   %edx
 8048443:	65                   	gs
 8048444:	73 75                	jae    80484bb <_init-0x10d>
 8048446:	6d                   	insl   (%dx),%es:(%edi)
 8048447:	65 00 6c 69 62       	add    %ch,%gs:0x62(%ecx,%ebp,2)
 804844c:	63 2e                	arpl   %bp,(%esi)
 804844e:	73 6f                	jae    80484bf <_init-0x109>
 8048450:	2e 36 00 5f 49       	cs add %bl,%cs:%ss:0x49(%edi)
 8048455:	4f                   	dec    %edi
 8048456:	5f                   	pop    %edi
 8048457:	73 74                	jae    80484cd <_init-0xfb>
 8048459:	64 69 6e 5f 75 73 65 	imul   $0x64657375,%fs:0x5f(%esi),%ebp
 8048460:	64 
 8048461:	00 70 72             	add    %dh,0x72(%eax)
 8048464:	69 6e 74 66 00 5f 5f 	imul   $0x5f5f0066,0x74(%esi),%ebp
 804846b:	63 78 61             	arpl   %di,0x61(%eax)
 804846e:	5f                   	pop    %edi
 804846f:	61                   	popa   
 8048470:	74 65                	je     80484d7 <_init-0xf1>
 8048472:	78 69                	js     80484dd <_init-0xeb>
 8048474:	74 00                	je     8048476 <_init-0x152>
 8048476:	5f                   	pop    %edi
 8048477:	5f                   	pop    %edi
 8048478:	6c                   	insb   (%dx),%es:(%edi)
 8048479:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%edx),%esp
 8048480:	72 74                	jb     80484f6 <_init-0xd2>
 8048482:	5f                   	pop    %edi
 8048483:	6d                   	insl   (%dx),%es:(%edi)
 8048484:	61                   	popa   
 8048485:	69 6e 00 47 43 43 5f 	imul   $0x5f434347,0x0(%esi),%ebp
 804848c:	33 2e                	xor    (%esi),%ebp
 804848e:	30 00                	xor    %al,(%eax)
 8048490:	43                   	inc    %ebx
 8048491:	58                   	pop    %eax
 8048492:	58                   	pop    %eax
 8048493:	41                   	inc    %ecx
 8048494:	42                   	inc    %edx
 8048495:	49                   	dec    %ecx
 8048496:	5f                   	pop    %edi
 8048497:	31 2e                	xor    %ebp,(%esi)
 8048499:	33 00                	xor    (%eax),%eax
 804849b:	47                   	inc    %edi
 804849c:	4c                   	dec    %esp
 804849d:	49                   	dec    %ecx
 804849e:	42                   	inc    %edx
 804849f:	43                   	inc    %ebx
 80484a0:	58                   	pop    %eax
 80484a1:	58                   	pop    %eax
 80484a2:	5f                   	pop    %edi
 80484a3:	33 2e                	xor    (%esi),%ebp
 80484a5:	34 00                	xor    $0x0,%al
 80484a7:	47                   	inc    %edi
 80484a8:	4c                   	dec    %esp
 80484a9:	49                   	dec    %ecx
 80484aa:	42                   	inc    %edx
 80484ab:	43                   	inc    %ebx
 80484ac:	5f                   	pop    %edi
 80484ad:	32 2e                	xor    (%esi),%ch
 80484af:	30 00                	xor    %al,(%eax)
 80484b1:	47                   	inc    %edi
 80484b2:	4c                   	dec    %esp
 80484b3:	49                   	dec    %ecx
 80484b4:	42                   	inc    %edx
 80484b5:	43                   	inc    %ebx
 80484b6:	5f                   	pop    %edi
 80484b7:	32 2e                	xor    (%esi),%ch
 80484b9:	31 2e                	xor    %ebp,(%esi)
 80484bb:	33 00                	xor    (%eax),%eax

Disassembly of section .gnu.version:

080484be <.gnu.version>:
 80484be:	00 00                	add    %al,(%eax)
 80484c0:	02 00                	add    (%eax),%al
 80484c2:	00 00                	add    %al,(%eax)
 80484c4:	00 00                	add    %al,(%eax)
 80484c6:	03 00                	add    (%eax),%eax
 80484c8:	04 00                	add    $0x0,%al
 80484ca:	00 00                	add    %al,(%eax)
 80484cc:	03 00                	add    (%eax),%eax
 80484ce:	00 00                	add    %al,(%eax)
 80484d0:	04 00                	add    $0x0,%al
 80484d2:	03 00                	add    (%eax),%eax
 80484d4:	06                   	push   %es
 80484d5:	00 01                	add    %al,(%ecx)
 80484d7:	00 03                	add    %al,(%ebx)
 80484d9:	00 03                	add    %al,(%ebx)
 80484db:	00 03                	add    %al,(%ebx)
 80484dd:	00                   	.byte 0x0
 80484de:	05                   	.byte 0x5
	...

Disassembly of section .gnu.version_r:

080484e0 <.gnu.version_r>:
 80484e0:	01 00                	add    %eax,(%eax)
 80484e2:	01 00                	add    %eax,(%eax)
 80484e4:	3c 01                	cmp    $0x1,%al
 80484e6:	00 00                	add    %al,(%eax)
 80484e8:	10 00                	adc    %al,(%eax)
 80484ea:	00 00                	add    %al,(%eax)
 80484ec:	20 00                	and    %al,(%eax)
 80484ee:	00 00                	add    %al,(%eax)
 80484f0:	50                   	push   %eax
 80484f1:	26                   	es
 80484f2:	79 0b                	jns    80484ff <_init-0xc9>
 80484f4:	00 00                	add    %al,(%eax)
 80484f6:	06                   	push   %es
 80484f7:	00 98 01 00 00 00    	add    %bl,0x1(%eax)
 80484fd:	00 00                	add    %al,(%eax)
 80484ff:	00 01                	add    %al,(%ecx)
 8048501:	00 02                	add    %al,(%edx)
 8048503:	00 01                	add    %al,(%ecx)
 8048505:	00 00                	add    %al,(%eax)
 8048507:	00 10                	add    %dl,(%eax)
 8048509:	00 00                	add    %al,(%eax)
 804850b:	00 30                	add    %dh,(%eax)
 804850d:	00 00                	add    %al,(%eax)
 804850f:	00 d3                	add    %dl,%bl
 8048511:	af                   	scas   %es:(%edi),%eax
 8048512:	6b 05 00 00 05 00 a0 	imul   $0xffffffa0,0x50000,%eax
 8048519:	01 00                	add    %eax,(%eax)
 804851b:	00 10                	add    %dl,(%eax)
 804851d:	00 00                	add    %al,(%eax)
 804851f:	00 74 29 92          	add    %dh,-0x6e(%ecx,%ebp,1)
 8048523:	08 00                	or     %al,(%eax)
 8048525:	00 03                	add    %al,(%ebx)
 8048527:	00 ab 01 00 00 00    	add    %ch,0x1(%ebx)
 804852d:	00 00                	add    %al,(%eax)
 804852f:	00 01                	add    %al,(%ecx)
 8048531:	00 02                	add    %al,(%edx)
 8048533:	00 59 01             	add    %bl,0x1(%ecx)
 8048536:	00 00                	add    %al,(%eax)
 8048538:	10 00                	adc    %al,(%eax)
 804853a:	00 00                	add    %al,(%eax)
 804853c:	00 00                	add    %al,(%eax)
 804853e:	00 00                	add    %al,(%eax)
 8048540:	10 69 69             	adc    %ch,0x69(%ecx)
 8048543:	0d 00 00 04 00       	or     $0x40000,%eax
 8048548:	b7 01                	mov    $0x1,%bh
 804854a:	00 00                	add    %al,(%eax)
 804854c:	10 00                	adc    %al,(%eax)
 804854e:	00 00                	add    %al,(%eax)
 8048550:	73 1f                	jae    8048571 <_init-0x57>
 8048552:	69 09 00 00 02 00    	imul   $0x20000,(%ecx),%ecx
 8048558:	c1 01 00             	roll   $0x0,(%ecx)
 804855b:	00 00                	add    %al,(%eax)
 804855d:	00 00                	add    %al,(%eax)
	...

Disassembly of section .rel.dyn:

08048560 <.rel.dyn>:
 8048560:	fc                   	cld    
 8048561:	9f                   	lahf   
 8048562:	04 08                	add    $0x8,%al
 8048564:	06                   	push   %es
 8048565:	02 00                	add    (%eax),%al
 8048567:	00 40 a0             	add    %al,-0x60(%eax)
 804856a:	04 08                	add    $0x8,%al
 804856c:	05                   	.byte 0x5
 804856d:	0f 00 00             	sldt   (%eax)

Disassembly of section .rel.plt:

08048570 <.rel.plt>:
 8048570:	0c a0                	or     $0xa0,%al
 8048572:	04 08                	add    $0x8,%al
 8048574:	07                   	pop    %es
 8048575:	01 00                	add    %eax,(%eax)
 8048577:	00 10                	add    %dl,(%eax)
 8048579:	a0 04 08 07 02       	mov    0x2070804,%al
 804857e:	00 00                	add    %al,(%eax)
 8048580:	14 a0                	adc    $0xa0,%al
 8048582:	04 08                	add    $0x8,%al
 8048584:	07                   	pop    %es
 8048585:	04 00                	add    $0x0,%al
 8048587:	00 18                	add    %bl,(%eax)
 8048589:	a0 04 08 07 05       	mov    0x5070804,%al
 804858e:	00 00                	add    %al,(%eax)
 8048590:	1c a0                	sbb    $0xa0,%al
 8048592:	04 08                	add    $0x8,%al
 8048594:	07                   	pop    %es
 8048595:	0e                   	push   %cs
 8048596:	00 00                	add    %al,(%eax)
 8048598:	20 a0 04 08 07 07    	and    %ah,0x7070804(%eax)
 804859e:	00 00                	add    %al,(%eax)
 80485a0:	24 a0                	and    $0xa0,%al
 80485a2:	04 08                	add    $0x8,%al
 80485a4:	07                   	pop    %es
 80485a5:	09 00                	or     %eax,(%eax)
 80485a7:	00 28                	add    %ch,(%eax)
 80485a9:	a0 04 08 07 0a       	mov    0xa070804,%al
 80485ae:	00 00                	add    %al,(%eax)
 80485b0:	2c a0                	sub    $0xa0,%al
 80485b2:	04 08                	add    $0x8,%al
 80485b4:	07                   	pop    %es
 80485b5:	0d 00 00 30 a0       	or     $0xa0300000,%eax
 80485ba:	04 08                	add    $0x8,%al
 80485bc:	07                   	pop    %es
 80485bd:	10 00                	adc    %al,(%eax)
 80485bf:	00 34 a0             	add    %dh,(%eax,%eiz,4)
 80485c2:	04 08                	add    $0x8,%al
 80485c4:	07                   	pop    %es
 80485c5:	0b 00                	or     (%eax),%eax
	...

Disassembly of section .init:

080485c8 <_init>:
 80485c8:	53                   	push   %ebx
 80485c9:	83 ec 08             	sub    $0x8,%esp
 80485cc:	e8 0f 01 00 00       	call   80486e0 <__x86.get_pc_thunk.bx>
 80485d1:	81 c3 2f 1a 00 00    	add    $0x1a2f,%ebx
 80485d7:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 80485dd:	85 c0                	test   %eax,%eax
 80485df:	74 05                	je     80485e6 <_init+0x1e>
 80485e1:	e8 2a 00 00 00       	call   8048610 <__gmon_start__@plt>
 80485e6:	83 c4 08             	add    $0x8,%esp
 80485e9:	5b                   	pop    %ebx
 80485ea:	c3                   	ret    

Disassembly of section .plt:

080485f0 <__cxa_atexit@plt-0x10>:
 80485f0:	ff 35 04 a0 04 08    	pushl  0x804a004
 80485f6:	ff 25 08 a0 04 08    	jmp    *0x804a008
 80485fc:	00 00                	add    %al,(%eax)
	...

08048600 <__cxa_atexit@plt>:
 8048600:	ff 25 0c a0 04 08    	jmp    *0x804a00c
 8048606:	68 00 00 00 00       	push   $0x0
 804860b:	e9 e0 ff ff ff       	jmp    80485f0 <_init+0x28>

08048610 <__gmon_start__@plt>:
 8048610:	ff 25 10 a0 04 08    	jmp    *0x804a010
 8048616:	68 08 00 00 00       	push   $0x8
 804861b:	e9 d0 ff ff ff       	jmp    80485f0 <_init+0x28>

08048620 <_ZNSt8ios_base4InitC1Ev@plt>:
 8048620:	ff 25 14 a0 04 08    	jmp    *0x804a014
 8048626:	68 10 00 00 00       	push   $0x10
 804862b:	e9 c0 ff ff ff       	jmp    80485f0 <_init+0x28>

08048630 <__libc_start_main@plt>:
 8048630:	ff 25 18 a0 04 08    	jmp    *0x804a018
 8048636:	68 18 00 00 00       	push   $0x18
 804863b:	e9 b0 ff ff ff       	jmp    80485f0 <_init+0x28>

08048640 <_ZNSt8ios_base4InitD1Ev@plt>:
 8048640:	ff 25 1c a0 04 08    	jmp    *0x804a01c
 8048646:	68 20 00 00 00       	push   $0x20
 804864b:	e9 a0 ff ff ff       	jmp    80485f0 <_init+0x28>

08048650 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>:
 8048650:	ff 25 20 a0 04 08    	jmp    *0x804a020
 8048656:	68 28 00 00 00       	push   $0x28
 804865b:	e9 90 ff ff ff       	jmp    80485f0 <_init+0x28>

08048660 <printf@plt>:
 8048660:	ff 25 24 a0 04 08    	jmp    *0x804a024
 8048666:	68 30 00 00 00       	push   $0x30
 804866b:	e9 80 ff ff ff       	jmp    80485f0 <_init+0x28>

08048670 <_ZNSolsEPFRSoS_E@plt>:
 8048670:	ff 25 28 a0 04 08    	jmp    *0x804a028
 8048676:	68 38 00 00 00       	push   $0x38
 804867b:	e9 70 ff ff ff       	jmp    80485f0 <_init+0x28>

08048680 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@plt>:
 8048680:	ff 25 2c a0 04 08    	jmp    *0x804a02c
 8048686:	68 40 00 00 00       	push   $0x40
 804868b:	e9 60 ff ff ff       	jmp    80485f0 <_init+0x28>

08048690 <__gxx_personality_v0@plt>:
 8048690:	ff 25 30 a0 04 08    	jmp    *0x804a030
 8048696:	68 48 00 00 00       	push   $0x48
 804869b:	e9 50 ff ff ff       	jmp    80485f0 <_init+0x28>

080486a0 <_Unwind_Resume@plt>:
 80486a0:	ff 25 34 a0 04 08    	jmp    *0x804a034
 80486a6:	68 50 00 00 00       	push   $0x50
 80486ab:	e9 40 ff ff ff       	jmp    80485f0 <_init+0x28>

Disassembly of section .text:

080486b0 <_start>:
 80486b0:	31 ed                	xor    %ebp,%ebp
 80486b2:	5e                   	pop    %esi
 80486b3:	89 e1                	mov    %esp,%ecx
 80486b5:	83 e4 f0             	and    $0xfffffff0,%esp
 80486b8:	50                   	push   %eax
 80486b9:	54                   	push   %esp
 80486ba:	52                   	push   %edx
 80486bb:	68 b0 89 04 08       	push   $0x80489b0
 80486c0:	68 40 89 04 08       	push   $0x8048940
 80486c5:	51                   	push   %ecx
 80486c6:	56                   	push   %esi
 80486c7:	68 ac 87 04 08       	push   $0x80487ac
 80486cc:	e8 5f ff ff ff       	call   8048630 <__libc_start_main@plt>
 80486d1:	f4                   	hlt    
 80486d2:	66 90                	xchg   %ax,%ax
 80486d4:	66 90                	xchg   %ax,%ax
 80486d6:	66 90                	xchg   %ax,%ax
 80486d8:	66 90                	xchg   %ax,%ax
 80486da:	66 90                	xchg   %ax,%ax
 80486dc:	66 90                	xchg   %ax,%ax
 80486de:	66 90                	xchg   %ax,%ax

080486e0 <__x86.get_pc_thunk.bx>:
 80486e0:	8b 1c 24             	mov    (%esp),%ebx
 80486e3:	c3                   	ret    
 80486e4:	66 90                	xchg   %ax,%ax
 80486e6:	66 90                	xchg   %ax,%ax
 80486e8:	66 90                	xchg   %ax,%ax
 80486ea:	66 90                	xchg   %ax,%ax
 80486ec:	66 90                	xchg   %ax,%ax
 80486ee:	66 90                	xchg   %ax,%ax

080486f0 <deregister_tm_clones>:
 80486f0:	b8 43 a0 04 08       	mov    $0x804a043,%eax
 80486f5:	2d 40 a0 04 08       	sub    $0x804a040,%eax
 80486fa:	83 f8 06             	cmp    $0x6,%eax
 80486fd:	77 02                	ja     8048701 <deregister_tm_clones+0x11>
 80486ff:	f3 c3                	repz ret 
 8048701:	b8 00 00 00 00       	mov    $0x0,%eax
 8048706:	85 c0                	test   %eax,%eax
 8048708:	74 f5                	je     80486ff <deregister_tm_clones+0xf>
 804870a:	55                   	push   %ebp
 804870b:	89 e5                	mov    %esp,%ebp
 804870d:	83 ec 18             	sub    $0x18,%esp
 8048710:	c7 04 24 40 a0 04 08 	movl   $0x804a040,(%esp)
 8048717:	ff d0                	call   *%eax
 8048719:	c9                   	leave  
 804871a:	c3                   	ret    
 804871b:	90                   	nop
 804871c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

08048720 <register_tm_clones>:
 8048720:	b8 40 a0 04 08       	mov    $0x804a040,%eax
 8048725:	2d 40 a0 04 08       	sub    $0x804a040,%eax
 804872a:	c1 f8 02             	sar    $0x2,%eax
 804872d:	89 c2                	mov    %eax,%edx
 804872f:	c1 ea 1f             	shr    $0x1f,%edx
 8048732:	01 d0                	add    %edx,%eax
 8048734:	d1 f8                	sar    %eax
 8048736:	75 02                	jne    804873a <register_tm_clones+0x1a>
 8048738:	f3 c3                	repz ret 
 804873a:	ba 00 00 00 00       	mov    $0x0,%edx
 804873f:	85 d2                	test   %edx,%edx
 8048741:	74 f5                	je     8048738 <register_tm_clones+0x18>
 8048743:	55                   	push   %ebp
 8048744:	89 e5                	mov    %esp,%ebp
 8048746:	83 ec 18             	sub    $0x18,%esp
 8048749:	89 44 24 04          	mov    %eax,0x4(%esp)
 804874d:	c7 04 24 40 a0 04 08 	movl   $0x804a040,(%esp)
 8048754:	ff d2                	call   *%edx
 8048756:	c9                   	leave  
 8048757:	c3                   	ret    
 8048758:	90                   	nop
 8048759:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

08048760 <__do_global_dtors_aux>:
 8048760:	80 3d cc a0 04 08 00 	cmpb   $0x0,0x804a0cc
 8048767:	75 13                	jne    804877c <__do_global_dtors_aux+0x1c>
 8048769:	55                   	push   %ebp
 804876a:	89 e5                	mov    %esp,%ebp
 804876c:	83 ec 08             	sub    $0x8,%esp
 804876f:	e8 7c ff ff ff       	call   80486f0 <deregister_tm_clones>
 8048774:	c6 05 cc a0 04 08 01 	movb   $0x1,0x804a0cc
 804877b:	c9                   	leave  
 804877c:	f3 c3                	repz ret 
 804877e:	66 90                	xchg   %ax,%ax

08048780 <frame_dummy>:
 8048780:	a1 00 9f 04 08       	mov    0x8049f00,%eax
 8048785:	85 c0                	test   %eax,%eax
 8048787:	74 1e                	je     80487a7 <frame_dummy+0x27>
 8048789:	b8 00 00 00 00       	mov    $0x0,%eax
 804878e:	85 c0                	test   %eax,%eax
 8048790:	74 15                	je     80487a7 <frame_dummy+0x27>
 8048792:	55                   	push   %ebp
 8048793:	89 e5                	mov    %esp,%ebp
 8048795:	83 ec 18             	sub    $0x18,%esp
 8048798:	c7 04 24 00 9f 04 08 	movl   $0x8049f00,(%esp)
 804879f:	ff d0                	call   *%eax
 80487a1:	c9                   	leave  
 80487a2:	e9 79 ff ff ff       	jmp    8048720 <register_tm_clones>
 80487a7:	e9 74 ff ff ff       	jmp    8048720 <register_tm_clones>

080487ac <main>:
 80487ac:	55                   	push   %ebp
 80487ad:	89 e5                	mov    %esp,%ebp
 80487af:	53                   	push   %ebx
 80487b0:	83 e4 f0             	and    $0xfffffff0,%esp
 80487b3:	83 ec 30             	sub    $0x30,%esp
 80487b6:	c7 44 24 10 02 00 00 	movl   $0x2,0x10(%esp)
 80487bd:	00 
 80487be:	8d 44 24 10          	lea    0x10(%esp),%eax
 80487c2:	89 44 24 14          	mov    %eax,0x14(%esp)
 80487c6:	8d 44 24 10          	lea    0x10(%esp),%eax
 80487ca:	89 44 24 18          	mov    %eax,0x18(%esp)
 80487ce:	8b 44 24 18          	mov    0x18(%esp),%eax
 80487d2:	c7 00 04 00 00 00    	movl   $0x4,(%eax)
 80487d8:	8b 44 24 14          	mov    0x14(%esp),%eax
 80487dc:	8b 10                	mov    (%eax),%edx
 80487de:	8b 44 24 10          	mov    0x10(%esp),%eax
 80487e2:	89 54 24 08          	mov    %edx,0x8(%esp)
 80487e6:	89 44 24 04          	mov    %eax,0x4(%esp)
 80487ea:	c7 04 24 db 89 04 08 	movl   $0x80489db,(%esp)
 80487f1:	e8 6a fe ff ff       	call   8048660 <printf@plt>
 80487f6:	c7 44 24 08 02 00 00 	movl   $0x2,0x8(%esp)
 80487fd:	00 
 80487fe:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 8048805:	00 
 8048806:	8d 44 24 20          	lea    0x20(%esp),%eax
 804880a:	89 04 24             	mov    %eax,(%esp)
 804880d:	e8 d2 00 00 00       	call   80488e4 <_ZN1tC1Eii>
 8048812:	c7 44 24 08 04 00 00 	movl   $0x4,0x8(%esp)
 8048819:	00 
 804881a:	c7 44 24 04 03 00 00 	movl   $0x3,0x4(%esp)
 8048821:	00 
 8048822:	8d 44 24 28          	lea    0x28(%esp),%eax
 8048826:	89 04 24             	mov    %eax,(%esp)
 8048829:	e8 b6 00 00 00       	call   80488e4 <_ZN1tC1Eii>
 804882e:	8d 44 24 20          	lea    0x20(%esp),%eax
 8048832:	89 44 24 1c          	mov    %eax,0x1c(%esp)
 8048836:	8b 44 24 10          	mov    0x10(%esp),%eax
 804883a:	89 44 24 04          	mov    %eax,0x4(%esp)
 804883e:	8b 44 24 1c          	mov    0x1c(%esp),%eax
 8048842:	89 04 24             	mov    %eax,(%esp)
 8048845:	e8 dc 00 00 00       	call   8048926 <_ZN1t4setaEi>
 804884a:	8d 44 24 28          	lea    0x28(%esp),%eax
 804884e:	89 04 24             	mov    %eax,(%esp)
 8048851:	e8 a4 00 00 00       	call   80488fa <_ZN1tD1Ev>
 8048856:	8d 44 24 20          	lea    0x20(%esp),%eax
 804885a:	89 04 24             	mov    %eax,(%esp)
 804885d:	e8 98 00 00 00       	call   80488fa <_ZN1tD1Ev>
 8048862:	b8 00 00 00 00       	mov    $0x0,%eax
 8048867:	eb 1a                	jmp    8048883 <main+0xd7>
 8048869:	89 c3                	mov    %eax,%ebx
 804886b:	8d 44 24 20          	lea    0x20(%esp),%eax
 804886f:	89 04 24             	mov    %eax,(%esp)
 8048872:	e8 83 00 00 00       	call   80488fa <_ZN1tD1Ev>
 8048877:	89 d8                	mov    %ebx,%eax
 8048879:	eb 00                	jmp    804887b <main+0xcf>
 804887b:	89 04 24             	mov    %eax,(%esp)
 804887e:	e8 1d fe ff ff       	call   80486a0 <_Unwind_Resume@plt>
 8048883:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 8048886:	c9                   	leave  
 8048887:	c3                   	ret    

08048888 <_Z41__static_initialization_and_destruction_0ii>:
 8048888:	55                   	push   %ebp
 8048889:	89 e5                	mov    %esp,%ebp
 804888b:	83 ec 18             	sub    $0x18,%esp
 804888e:	83 7d 08 01          	cmpl   $0x1,0x8(%ebp)
 8048892:	75 31                	jne    80488c5 <_Z41__static_initialization_and_destruction_0ii+0x3d>
 8048894:	81 7d 0c ff ff 00 00 	cmpl   $0xffff,0xc(%ebp)
 804889b:	75 28                	jne    80488c5 <_Z41__static_initialization_and_destruction_0ii+0x3d>
 804889d:	c7 04 24 d0 a0 04 08 	movl   $0x804a0d0,(%esp)
 80488a4:	e8 77 fd ff ff       	call   8048620 <_ZNSt8ios_base4InitC1Ev@plt>
 80488a9:	c7 44 24 08 3c a0 04 	movl   $0x804a03c,0x8(%esp)
 80488b0:	08 
 80488b1:	c7 44 24 04 d0 a0 04 	movl   $0x804a0d0,0x4(%esp)
 80488b8:	08 
 80488b9:	c7 04 24 40 86 04 08 	movl   $0x8048640,(%esp)
 80488c0:	e8 3b fd ff ff       	call   8048600 <__cxa_atexit@plt>
 80488c5:	c9                   	leave  
 80488c6:	c3                   	ret    

080488c7 <_GLOBAL__sub_I_main>:
 80488c7:	55                   	push   %ebp
 80488c8:	89 e5                	mov    %esp,%ebp
 80488ca:	83 ec 18             	sub    $0x18,%esp
 80488cd:	c7 44 24 04 ff ff 00 	movl   $0xffff,0x4(%esp)
 80488d4:	00 
 80488d5:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 80488dc:	e8 a7 ff ff ff       	call   8048888 <_Z41__static_initialization_and_destruction_0ii>
 80488e1:	c9                   	leave  
 80488e2:	c3                   	ret    
 80488e3:	90                   	nop

080488e4 <_ZN1tC1Eii>:
 80488e4:	55                   	push   %ebp
 80488e5:	89 e5                	mov    %esp,%ebp
 80488e7:	8b 45 08             	mov    0x8(%ebp),%eax
 80488ea:	8b 55 0c             	mov    0xc(%ebp),%edx
 80488ed:	89 10                	mov    %edx,(%eax)
 80488ef:	8b 45 08             	mov    0x8(%ebp),%eax
 80488f2:	8b 55 10             	mov    0x10(%ebp),%edx
 80488f5:	89 50 04             	mov    %edx,0x4(%eax)
 80488f8:	5d                   	pop    %ebp
 80488f9:	c3                   	ret    

080488fa <_ZN1tD1Ev>:
 80488fa:	55                   	push   %ebp
 80488fb:	89 e5                	mov    %esp,%ebp
 80488fd:	83 ec 18             	sub    $0x18,%esp
 8048900:	c7 44 24 04 d0 89 04 	movl   $0x80489d0,0x4(%esp)
 8048907:	08 
 8048908:	c7 04 24 40 a0 04 08 	movl   $0x804a040,(%esp)
 804890f:	e8 3c fd ff ff       	call   8048650 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
 8048914:	c7 44 24 04 80 86 04 	movl   $0x8048680,0x4(%esp)
 804891b:	08 
 804891c:	89 04 24             	mov    %eax,(%esp)
 804891f:	e8 4c fd ff ff       	call   8048670 <_ZNSolsEPFRSoS_E@plt>
 8048924:	c9                   	leave  
 8048925:	c3                   	ret    

08048926 <_ZN1t4setaEi>:
 8048926:	55                   	push   %ebp
 8048927:	89 e5                	mov    %esp,%ebp
 8048929:	8b 45 08             	mov    0x8(%ebp),%eax
 804892c:	8b 55 0c             	mov    0xc(%ebp),%edx
 804892f:	89 10                	mov    %edx,(%eax)
 8048931:	5d                   	pop    %ebp
 8048932:	c3                   	ret    
 8048933:	66 90                	xchg   %ax,%ax
 8048935:	66 90                	xchg   %ax,%ax
 8048937:	66 90                	xchg   %ax,%ax
 8048939:	66 90                	xchg   %ax,%ax
 804893b:	66 90                	xchg   %ax,%ax
 804893d:	66 90                	xchg   %ax,%ax
 804893f:	90                   	nop

08048940 <__libc_csu_init>:
 8048940:	55                   	push   %ebp
 8048941:	57                   	push   %edi
 8048942:	31 ff                	xor    %edi,%edi
 8048944:	56                   	push   %esi
 8048945:	53                   	push   %ebx
 8048946:	e8 95 fd ff ff       	call   80486e0 <__x86.get_pc_thunk.bx>
 804894b:	81 c3 b5 16 00 00    	add    $0x16b5,%ebx
 8048951:	83 ec 1c             	sub    $0x1c,%esp
 8048954:	8b 6c 24 30          	mov    0x30(%esp),%ebp
 8048958:	8d b3 fc fe ff ff    	lea    -0x104(%ebx),%esi
 804895e:	e8 65 fc ff ff       	call   80485c8 <_init>
 8048963:	8d 83 f4 fe ff ff    	lea    -0x10c(%ebx),%eax
 8048969:	29 c6                	sub    %eax,%esi
 804896b:	c1 fe 02             	sar    $0x2,%esi
 804896e:	85 f6                	test   %esi,%esi
 8048970:	74 27                	je     8048999 <__libc_csu_init+0x59>
 8048972:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8048978:	8b 44 24 38          	mov    0x38(%esp),%eax
 804897c:	89 2c 24             	mov    %ebp,(%esp)
 804897f:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048983:	8b 44 24 34          	mov    0x34(%esp),%eax
 8048987:	89 44 24 04          	mov    %eax,0x4(%esp)
 804898b:	ff 94 bb f4 fe ff ff 	call   *-0x10c(%ebx,%edi,4)
 8048992:	83 c7 01             	add    $0x1,%edi
 8048995:	39 f7                	cmp    %esi,%edi
 8048997:	75 df                	jne    8048978 <__libc_csu_init+0x38>
 8048999:	83 c4 1c             	add    $0x1c,%esp
 804899c:	5b                   	pop    %ebx
 804899d:	5e                   	pop    %esi
 804899e:	5f                   	pop    %edi
 804899f:	5d                   	pop    %ebp
 80489a0:	c3                   	ret    
 80489a1:	eb 0d                	jmp    80489b0 <__libc_csu_fini>
 80489a3:	90                   	nop
 80489a4:	90                   	nop
 80489a5:	90                   	nop
 80489a6:	90                   	nop
 80489a7:	90                   	nop
 80489a8:	90                   	nop
 80489a9:	90                   	nop
 80489aa:	90                   	nop
 80489ab:	90                   	nop
 80489ac:	90                   	nop
 80489ad:	90                   	nop
 80489ae:	90                   	nop
 80489af:	90                   	nop

080489b0 <__libc_csu_fini>:
 80489b0:	f3 c3                	repz ret 
 80489b2:	66 90                	xchg   %ax,%ax

Disassembly of section .fini:

080489b4 <_fini>:
 80489b4:	53                   	push   %ebx
 80489b5:	83 ec 08             	sub    $0x8,%esp
 80489b8:	e8 23 fd ff ff       	call   80486e0 <__x86.get_pc_thunk.bx>
 80489bd:	81 c3 43 16 00 00    	add    $0x1643,%ebx
 80489c3:	83 c4 08             	add    $0x8,%esp
 80489c6:	5b                   	pop    %ebx
 80489c7:	c3                   	ret    

Disassembly of section .rodata:

080489c8 <_fp_hw>:
 80489c8:	03 00                	add    (%eax),%eax
	...

080489cc <_IO_stdin_used>:
 80489cc:	01 00                	add    %eax,(%eax)
 80489ce:	02 00                	add    (%eax),%al
 80489d0:	64                   	fs
 80489d1:	65                   	gs
 80489d2:	73 74                	jae    8048a48 <_IO_stdin_used+0x7c>
 80489d4:	72 75                	jb     8048a4b <_IO_stdin_used+0x7f>
 80489d6:	63 74 65 64          	arpl   %si,0x64(%ebp,%eiz,2)
 80489da:	00 61 20             	add    %ah,0x20(%ecx)
 80489dd:	69 73 20 25 64 20 62 	imul   $0x62206425,0x20(%ebx),%esi
 80489e4:	20 69 73             	and    %ch,0x73(%ecx)
 80489e7:	20                   	.byte 0x20
 80489e8:	25                   	.byte 0x25
 80489e9:	64 0a 00             	or     %fs:(%eax),%al

Disassembly of section .eh_frame_hdr:

080489ec <.eh_frame_hdr>:
 80489ec:	01 1b                	add    %ebx,(%ebx)
 80489ee:	03 3b                	add    (%ebx),%edi
 80489f0:	50                   	push   %eax
 80489f1:	00 00                	add    %al,(%eax)
 80489f3:	00 09                	add    %cl,(%ecx)
 80489f5:	00 00                	add    %al,(%eax)
 80489f7:	00 04 fc             	add    %al,(%esp,%edi,8)
 80489fa:	ff                   	(bad)  
 80489fb:	ff 6c 00 00          	ljmp   *0x0(%eax,%eax,1)
 80489ff:	00 c0                	add    %al,%al
 8048a01:	fd                   	std    
 8048a02:	ff                   	(bad)  
 8048a03:	ff 10                	call   *(%eax)
 8048a05:	01 00                	add    %eax,(%eax)
 8048a07:	00 9c fe ff ff 38 01 	add    %bl,0x138ffff(%esi,%edi,8)
 8048a0e:	00 00                	add    %al,(%eax)
 8048a10:	db fe                	(bad)  
 8048a12:	ff                   	(bad)  
 8048a13:	ff 58 01             	lcall  *0x1(%eax)
 8048a16:	00 00                	add    %al,(%eax)
 8048a18:	f8                   	clc    
 8048a19:	fe                   	(bad)  
 8048a1a:	ff                   	(bad)  
 8048a1b:	ff 90 00 00 00 0e    	call   *0xe000000(%eax)
 8048a21:	ff                   	(bad)  
 8048a22:	ff                   	(bad)  
 8048a23:	ff b0 00 00 00 3a    	pushl  0x3a000000(%eax)
 8048a29:	ff                   	(bad)  
 8048a2a:	ff                   	(bad)  
 8048a2b:	ff d0                	call   *%eax
 8048a2d:	00 00                	add    %al,(%eax)
 8048a2f:	00 54 ff ff          	add    %dl,-0x1(%edi,%edi,8)
 8048a33:	ff                   	(bad)  
 8048a34:	78 01                	js     8048a37 <_IO_stdin_used+0x6b>
 8048a36:	00 00                	add    %al,(%eax)
 8048a38:	c4                   	(bad)  
 8048a39:	ff                   	(bad)  
 8048a3a:	ff                   	(bad)  
 8048a3b:	ff                   	.byte 0xff
 8048a3c:	b4 01                	mov    $0x1,%ah
	...

Disassembly of section .eh_frame:

08048a40 <__FRAME_END__-0x174>:
 8048a40:	14 00                	adc    $0x0,%al
 8048a42:	00 00                	add    %al,(%eax)
 8048a44:	00 00                	add    %al,(%eax)
 8048a46:	00 00                	add    %al,(%eax)
 8048a48:	01 7a 52             	add    %edi,0x52(%edx)
 8048a4b:	00 01                	add    %al,(%ecx)
 8048a4d:	7c 08                	jl     8048a57 <_IO_stdin_used+0x8b>
 8048a4f:	01 1b                	add    %ebx,(%ebx)
 8048a51:	0c 04                	or     $0x4,%al
 8048a53:	04 88                	add    $0x88,%al
 8048a55:	01 00                	add    %eax,(%eax)
 8048a57:	00 20                	add    %ah,(%eax)
 8048a59:	00 00                	add    %al,(%eax)
 8048a5b:	00 1c 00             	add    %bl,(%eax,%eax,1)
 8048a5e:	00 00                	add    %al,(%eax)
 8048a60:	90                   	nop
 8048a61:	fb                   	sti    
 8048a62:	ff                   	(bad)  
 8048a63:	ff c0                	inc    %eax
 8048a65:	00 00                	add    %al,(%eax)
 8048a67:	00 00                	add    %al,(%eax)
 8048a69:	0e                   	push   %cs
 8048a6a:	08 46 0e             	or     %al,0xe(%esi)
 8048a6d:	0c 4a                	or     $0x4a,%al
 8048a6f:	0f 0b                	ud2    
 8048a71:	74 04                	je     8048a77 <_IO_stdin_used+0xab>
 8048a73:	78 00                	js     8048a75 <_IO_stdin_used+0xa9>
 8048a75:	3f                   	aas    
 8048a76:	1a 3b                	sbb    (%ebx),%bh
 8048a78:	2a 32                	sub    (%edx),%dh
 8048a7a:	24 22                	and    $0x22,%al
 8048a7c:	1c 00                	sbb    $0x0,%al
 8048a7e:	00 00                	add    %al,(%eax)
 8048a80:	40                   	inc    %eax
 8048a81:	00 00                	add    %al,(%eax)
 8048a83:	00 60 fe             	add    %ah,-0x2(%eax)
 8048a86:	ff                   	(bad)  
 8048a87:	ff 16                	call   *(%esi)
 8048a89:	00 00                	add    %al,(%eax)
 8048a8b:	00 00                	add    %al,(%eax)
 8048a8d:	41                   	inc    %ecx
 8048a8e:	0e                   	push   %cs
 8048a8f:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 8048a95:	52                   	push   %edx
 8048a96:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
 8048a99:	04 00                	add    $0x0,%al
 8048a9b:	00 1c 00             	add    %bl,(%eax,%eax,1)
 8048a9e:	00 00                	add    %al,(%eax)
 8048aa0:	60                   	pusha  
 8048aa1:	00 00                	add    %al,(%eax)
 8048aa3:	00 56 fe             	add    %dl,-0x2(%esi)
 8048aa6:	ff                   	(bad)  
 8048aa7:	ff 2c 00             	ljmp   *(%eax,%eax,1)
 8048aaa:	00 00                	add    %al,(%eax)
 8048aac:	00 41 0e             	add    %al,0xe(%ecx)
 8048aaf:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 8048ab5:	68 c5 0c 04 04       	push   $0x4040cc5
 8048aba:	00 00                	add    %al,(%eax)
 8048abc:	1c 00                	sbb    $0x0,%al
 8048abe:	00 00                	add    %al,(%eax)
 8048ac0:	80 00 00             	addb   $0x0,(%eax)
 8048ac3:	00 62 fe             	add    %ah,-0x2(%edx)
 8048ac6:	ff                   	(bad)  
 8048ac7:	ff 0d 00 00 00 00    	decl   0x0
 8048acd:	41                   	inc    %ecx
 8048ace:	0e                   	push   %cs
 8048acf:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 8048ad5:	49                   	dec    %ecx
 8048ad6:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
 8048ad9:	04 00                	add    $0x0,%al
 8048adb:	00 1c 00             	add    %bl,(%eax,%eax,1)
 8048ade:	00 00                	add    %al,(%eax)
 8048ae0:	00 00                	add    %al,(%eax)
 8048ae2:	00 00                	add    %al,(%eax)
 8048ae4:	01 7a 50             	add    %edi,0x50(%edx)
 8048ae7:	4c                   	dec    %esp
 8048ae8:	52                   	push   %edx
 8048ae9:	00 01                	add    %al,(%ecx)
 8048aeb:	7c 08                	jl     8048af5 <_IO_stdin_used+0x129>
 8048aed:	07                   	pop    %es
 8048aee:	00 90 86 04 08 00    	add    %dl,0x80486(%eax)
 8048af4:	1b 0c 04             	sbb    (%esp,%eax,1),%ecx
 8048af7:	04 88                	add    $0x88,%al
 8048af9:	01 00                	add    %eax,(%eax)
 8048afb:	00 24 00             	add    %ah,(%eax,%eax,1)
 8048afe:	00 00                	add    %al,(%eax)
 8048b00:	24 00                	and    $0x0,%al
 8048b02:	00 00                	add    %al,(%eax)
 8048b04:	a8 fc                	test   $0xfc,%al
 8048b06:	ff                   	(bad)  
 8048b07:	ff dc                	lcall  *<internal disassembler error>
 8048b09:	00 00                	add    %al,(%eax)
 8048b0b:	00 04 b8             	add    %al,(%eax,%edi,4)
 8048b0e:	8b 04 08             	mov    (%eax,%ecx,1),%eax
 8048b11:	41                   	inc    %ecx
 8048b12:	0e                   	push   %cs
 8048b13:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 8048b19:	47                   	inc    %edi
 8048b1a:	83 03 02             	addl   $0x2,(%ebx)
 8048b1d:	d1 c5                	rol    %ebp
 8048b1f:	c3                   	ret    
 8048b20:	0c 04                	or     $0x4,%al
 8048b22:	04 00                	add    $0x0,%al
 8048b24:	1c 00                	sbb    $0x0,%al
 8048b26:	00 00                	add    %al,(%eax)
 8048b28:	e8 00 00 00 5c       	call   64048b2d <_end+0x5bffea59>
 8048b2d:	fd                   	std    
 8048b2e:	ff                   	(bad)  
 8048b2f:	ff                   	(bad)  
 8048b30:	3f                   	aas    
 8048b31:	00 00                	add    %al,(%eax)
 8048b33:	00 00                	add    %al,(%eax)
 8048b35:	41                   	inc    %ecx
 8048b36:	0e                   	push   %cs
 8048b37:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 8048b3d:	7b c5                	jnp    8048b04 <_IO_stdin_used+0x138>
 8048b3f:	0c 04                	or     $0x4,%al
 8048b41:	04 00                	add    $0x0,%al
 8048b43:	00 1c 00             	add    %bl,(%eax,%eax,1)
 8048b46:	00 00                	add    %al,(%eax)
 8048b48:	08 01                	or     %al,(%ecx)
 8048b4a:	00 00                	add    %al,(%eax)
 8048b4c:	7b fd                	jnp    8048b4b <_IO_stdin_used+0x17f>
 8048b4e:	ff                   	(bad)  
 8048b4f:	ff 1c 00             	lcall  *(%eax,%eax,1)
 8048b52:	00 00                	add    %al,(%eax)
 8048b54:	00 41 0e             	add    %al,0xe(%ecx)
 8048b57:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 8048b5d:	58                   	pop    %eax
 8048b5e:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
 8048b61:	04 00                	add    $0x0,%al
 8048b63:	00 38                	add    %bh,(%eax)
 8048b65:	00 00                	add    %al,(%eax)
 8048b67:	00 28                	add    %ch,(%eax)
 8048b69:	01 00                	add    %eax,(%eax)
 8048b6b:	00 d4                	add    %dl,%ah
 8048b6d:	fd                   	std    
 8048b6e:	ff                   	(bad)  
 8048b6f:	ff 61 00             	jmp    *0x0(%ecx)
 8048b72:	00 00                	add    %al,(%eax)
 8048b74:	00 41 0e             	add    %al,0xe(%ecx)
 8048b77:	08 85 02 41 0e 0c    	or     %al,0xc0e4102(%ebp)
 8048b7d:	87 03                	xchg   %eax,(%ebx)
 8048b7f:	43                   	inc    %ebx
 8048b80:	0e                   	push   %cs
 8048b81:	10 86 04 41 0e 14    	adc    %al,0x140e4104(%esi)
 8048b87:	83 05 4e 0e 30 02 48 	addl   $0x48,0x2300e4e
 8048b8e:	0e                   	push   %cs
 8048b8f:	14 41                	adc    $0x41,%al
 8048b91:	c3                   	ret    
 8048b92:	0e                   	push   %cs
 8048b93:	10 41 c6             	adc    %al,-0x3a(%ecx)
 8048b96:	0e                   	push   %cs
 8048b97:	0c 41                	or     $0x41,%al
 8048b99:	c7                   	(bad)  
 8048b9a:	0e                   	push   %cs
 8048b9b:	08 41 c5             	or     %al,-0x3b(%ecx)
 8048b9e:	0e                   	push   %cs
 8048b9f:	04 10                	add    $0x10,%al
 8048ba1:	00 00                	add    %al,(%eax)
 8048ba3:	00 64 01 00          	add    %ah,0x0(%ecx,%eax,1)
 8048ba7:	00 08                	add    %cl,(%eax)
 8048ba9:	fe                   	(bad)  
 8048baa:	ff                   	(bad)  
 8048bab:	ff 02                	incl   (%edx)
 8048bad:	00 00                	add    %al,(%eax)
 8048baf:	00 00                	add    %al,(%eax)
 8048bb1:	00 00                	add    %al,(%eax)
	...

08048bb4 <__FRAME_END__>:
 8048bb4:	00 00                	add    %al,(%eax)
	...

Disassembly of section .gcc_except_table:

08048bb8 <.gcc_except_table>:
 8048bb8:	ff                   	(bad)  
 8048bb9:	ff 01                	incl   (%ecx)
 8048bbb:	16                   	push   %ss
 8048bbc:	45                   	inc    %ebp
 8048bbd:	05 cf 01 00 a5       	add    $0xa50001cf,%eax
 8048bc2:	01 05 bd 01 00 b1    	add    %eax,0xb10001bd
 8048bc8:	01 05 cf 01 00 d2    	add    %eax,0xd20001cf
 8048bce:	01                   	.byte 0x1
 8048bcf:	05                   	.byte 0x5
	...

Disassembly of section .init_array:

08049ef4 <__frame_dummy_init_array_entry>:
 8049ef4:	80 87 04 08 c7 88 04 	addb   $0x4,-0x7738f7fc(%edi)
 8049efb:	08                   	.byte 0x8

Disassembly of section .fini_array:

08049efc <__do_global_dtors_aux_fini_array_entry>:
 8049efc:	60                   	pusha  
 8049efd:	87 04 08             	xchg   %eax,(%eax,%ecx,1)

Disassembly of section .jcr:

08049f00 <__JCR_END__>:
 8049f00:	00 00                	add    %al,(%eax)
	...

Disassembly of section .dynamic:

08049f04 <_DYNAMIC>:
 8049f04:	01 00                	add    %eax,(%eax)
 8049f06:	00 00                	add    %al,(%eax)
 8049f08:	01 00                	add    %eax,(%eax)
 8049f0a:	00 00                	add    %al,(%eax)
 8049f0c:	01 00                	add    %eax,(%eax)
 8049f0e:	00 00                	add    %al,(%eax)
 8049f10:	3c 01                	cmp    $0x1,%al
 8049f12:	00 00                	add    %al,(%eax)
 8049f14:	01 00                	add    %eax,(%eax)
 8049f16:	00 00                	add    %al,(%eax)
 8049f18:	59                   	pop    %ecx
 8049f19:	01 00                	add    %eax,(%eax)
 8049f1b:	00 0c 00             	add    %cl,(%eax,%eax,1)
 8049f1e:	00 00                	add    %al,(%eax)
 8049f20:	c8 85 04 08          	enter  $0x485,$0x8
 8049f24:	0d 00 00 00 b4       	or     $0xb4000000,%eax
 8049f29:	89 04 08             	mov    %eax,(%eax,%ecx,1)
 8049f2c:	19 00                	sbb    %eax,(%eax)
 8049f2e:	00 00                	add    %al,(%eax)
 8049f30:	f4                   	hlt    
 8049f31:	9e                   	sahf   
 8049f32:	04 08                	add    $0x8,%al
 8049f34:	1b 00                	sbb    (%eax),%eax
 8049f36:	00 00                	add    %al,(%eax)
 8049f38:	08 00                	or     %al,(%eax)
 8049f3a:	00 00                	add    %al,(%eax)
 8049f3c:	1a 00                	sbb    (%eax),%al
 8049f3e:	00 00                	add    %al,(%eax)
 8049f40:	fc                   	cld    
 8049f41:	9e                   	sahf   
 8049f42:	04 08                	add    $0x8,%al
 8049f44:	1c 00                	sbb    $0x0,%al
 8049f46:	00 00                	add    %al,(%eax)
 8049f48:	04 00                	add    $0x0,%al
 8049f4a:	00 00                	add    %al,(%eax)
 8049f4c:	f5                   	cmc    
 8049f4d:	fe                   	(bad)  
 8049f4e:	ff 6f ac             	ljmp   *-0x54(%edi)
 8049f51:	81 04 08 05 00 00 00 	addl   $0x5,(%eax,%ecx,1)
 8049f58:	f0 82                	lock (bad) 
 8049f5a:	04 08                	add    $0x8,%al
 8049f5c:	06                   	push   %es
 8049f5d:	00 00                	add    %al,(%eax)
 8049f5f:	00 e0                	add    %ah,%al
 8049f61:	81 04 08 0a 00 00 00 	addl   $0xa,(%eax,%ecx,1)
 8049f68:	cd 01                	int    $0x1
 8049f6a:	00 00                	add    %al,(%eax)
 8049f6c:	0b 00                	or     (%eax),%eax
 8049f6e:	00 00                	add    %al,(%eax)
 8049f70:	10 00                	adc    %al,(%eax)
 8049f72:	00 00                	add    %al,(%eax)
 8049f74:	15 00 00 00 00       	adc    $0x0,%eax
 8049f79:	00 00                	add    %al,(%eax)
 8049f7b:	00 03                	add    %al,(%ebx)
 8049f7d:	00 00                	add    %al,(%eax)
 8049f7f:	00 00                	add    %al,(%eax)
 8049f81:	a0 04 08 02 00       	mov    0x20804,%al
 8049f86:	00 00                	add    %al,(%eax)
 8049f88:	58                   	pop    %eax
 8049f89:	00 00                	add    %al,(%eax)
 8049f8b:	00 14 00             	add    %dl,(%eax,%eax,1)
 8049f8e:	00 00                	add    %al,(%eax)
 8049f90:	11 00                	adc    %eax,(%eax)
 8049f92:	00 00                	add    %al,(%eax)
 8049f94:	17                   	pop    %ss
 8049f95:	00 00                	add    %al,(%eax)
 8049f97:	00 70 85             	add    %dh,-0x7b(%eax)
 8049f9a:	04 08                	add    $0x8,%al
 8049f9c:	11 00                	adc    %eax,(%eax)
 8049f9e:	00 00                	add    %al,(%eax)
 8049fa0:	60                   	pusha  
 8049fa1:	85 04 08             	test   %eax,(%eax,%ecx,1)
 8049fa4:	12 00                	adc    (%eax),%al
 8049fa6:	00 00                	add    %al,(%eax)
 8049fa8:	10 00                	adc    %al,(%eax)
 8049faa:	00 00                	add    %al,(%eax)
 8049fac:	13 00                	adc    (%eax),%eax
 8049fae:	00 00                	add    %al,(%eax)
 8049fb0:	08 00                	or     %al,(%eax)
 8049fb2:	00 00                	add    %al,(%eax)
 8049fb4:	fe                   	(bad)  
 8049fb5:	ff                   	(bad)  
 8049fb6:	ff 6f e0             	ljmp   *-0x20(%edi)
 8049fb9:	84 04 08             	test   %al,(%eax,%ecx,1)
 8049fbc:	ff                   	(bad)  
 8049fbd:	ff                   	(bad)  
 8049fbe:	ff 6f 03             	ljmp   *0x3(%edi)
 8049fc1:	00 00                	add    %al,(%eax)
 8049fc3:	00 f0                	add    %dh,%al
 8049fc5:	ff                   	(bad)  
 8049fc6:	ff 6f be             	ljmp   *-0x42(%edi)
 8049fc9:	84 04 08             	test   %al,(%eax,%ecx,1)
	...

Disassembly of section .got:

08049ffc <.got>:
 8049ffc:	00 00                	add    %al,(%eax)
	...

Disassembly of section .got.plt:

0804a000 <_GLOBAL_OFFSET_TABLE_>:
 804a000:	04 9f                	add    $0x9f,%al
 804a002:	04 08                	add    $0x8,%al
	...
 804a00c:	06                   	push   %es
 804a00d:	86 04 08             	xchg   %al,(%eax,%ecx,1)
 804a010:	16                   	push   %ss
 804a011:	86 04 08             	xchg   %al,(%eax,%ecx,1)
 804a014:	26 86 04 08          	xchg   %al,%es:(%eax,%ecx,1)
 804a018:	36 86 04 08          	xchg   %al,%ss:(%eax,%ecx,1)
 804a01c:	46                   	inc    %esi
 804a01d:	86 04 08             	xchg   %al,(%eax,%ecx,1)
 804a020:	56                   	push   %esi
 804a021:	86 04 08             	xchg   %al,(%eax,%ecx,1)
 804a024:	66                   	data16
 804a025:	86 04 08             	xchg   %al,(%eax,%ecx,1)
 804a028:	76 86                	jbe    8049fb0 <_DYNAMIC+0xac>
 804a02a:	04 08                	add    $0x8,%al
 804a02c:	86 86 04 08 96 86    	xchg   %al,-0x7969f7fc(%esi)
 804a032:	04 08                	add    $0x8,%al
 804a034:	a6                   	cmpsb  %es:(%edi),%ds:(%esi)
 804a035:	86 04 08             	xchg   %al,(%eax,%ecx,1)

Disassembly of section .data:

0804a038 <__data_start>:
 804a038:	00 00                	add    %al,(%eax)
	...

0804a03c <__dso_handle>:
 804a03c:	00 00                	add    %al,(%eax)
	...

Disassembly of section .bss:

0804a040 <_ZSt4cout@@GLIBCXX_3.4>:
	...

0804a0cc <completed.6339>:
 804a0cc:	00 00                	add    %al,(%eax)
	...

0804a0d0 <_ZStL8__ioinit>:
 804a0d0:	00 00                	add    %al,(%eax)
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	47                   	inc    %edi
   1:	43                   	inc    %ebx
   2:	43                   	inc    %ebx
   3:	3a 20                	cmp    (%eax),%ah
   5:	28 55 62             	sub    %dl,0x62(%ebp)
   8:	75 6e                	jne    78 <_init-0x8048550>
   a:	74 75                	je     81 <_init-0x8048547>
   c:	2f                   	das    
   d:	4c                   	dec    %esp
   e:	69 6e 61 72 6f 20 34 	imul   $0x34206f72,0x61(%esi),%ebp
  15:	2e                   	cs
  16:	37                   	aaa    
  17:	2e 33 2d 31 75 62 75 	xor    %cs:0x75627531,%ebp
  1e:	6e                   	outsb  %ds:(%esi),(%dx)
  1f:	74 75                	je     96 <_init-0x8048532>
  21:	31 29                	xor    %ebp,(%ecx)
  23:	20 34 2e             	and    %dh,(%esi,%ebp,1)
  26:	37                   	aaa    
  27:	2e 33 00             	xor    %cs:(%eax),%eax
